[
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a machine learning engineer from beginner to expert",
    "output": {
      "name": "Become a Machine Learning Engineer: Beginner to Expert",
      "children": [
        {
          "name": "1. Foundational Mathematics and Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Integrals"
                },
                {
                  "name": "1.2.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Probability Distributions"
                },
                {
                  "name": "1.3.2 Hypothesis Testing"
                },
                {
                  "name": "1.3.3 Bayesian Statistics"
                }
              ]
            },
            {
              "name": "1.4 Programming Fundamentals (Python)",
              "children": [
                {
                  "name": "1.4.1 Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "1.4.2 Object-Oriented Programming"
                },
                {
                  "name": "1.4.3 NumPy, Pandas, Matplotlib"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Machine Learning Concepts",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (Decision Trees, SVM, Naive Bayes)"
                },
                {
                  "name": "2.1.1 Project: Build a spam classifier"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-Means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "2.2.1 Project: Customer segmentation using clustering"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation and Selection",
              "children": [
                {
                  "name": "2.3.1 Metrics (Accuracy, Precision, Recall, F1-score)"
                },
                {
                  "name": "2.3.2 Cross-validation"
                },
                {
                  "name": "2.3.3 Hyperparameter Tuning"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Machine Learning Techniques",
          "children": [
            {
              "name": "3.1 Deep Learning",
              "children": [
                {
                  "name": "3.1.1 Neural Networks (Perceptron, MLP)"
                },
                {
                  "name": "3.1.2 Convolutional Neural Networks (CNNs)"
                },
                {
                  "name": "3.1.3 Recurrent Neural Networks (RNNs)"
                }
              ]
            },
            {
              "name": "3.2 Ensemble Methods",
              "children": [
                {
                  "name": "3.2.1 Bagging (Random Forest)"
                },
                {
                  "name": "3.2.2 Boosting (Gradient Boosting, XGBoost)"
                },
                {
                  "name": "3.2.1 Project: Build a model using ensemble methods for regression"
                }
              ]
            },
            {
              "name": "3.3 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "3.3.1 Text preprocessing"
                },
                {
                  "name": "3.3.2 Word embeddings (Word2Vec, GloVe)"
                },
                {
                  "name": "3.3.3 Sentiment analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Deployment and MLOps",
          "children": [
            {
              "name": "4.1 Model Deployment",
              "children": [
                {
                  "name": "4.1.1 Cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "4.1.2 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "4.1.3 REST APIs"
                }
              ]
            },
            {
              "name": "4.2 Model Monitoring and Maintenance",
              "children": [
                {
                  "name": "4.2.1 Model drift detection"
                },
                {
                  "name": "4.2.2 Retraining and updating models"
                },
                {
                  "name": "4.2.3 Model versioning"
                }
              ]
            },
            {
              "name": "4.3 MLOps Best Practices",
              "children": [
                {
                  "name": "4.3.1 CI/CD for machine learning"
                },
                {
                  "name": "4.3.2 Data versioning"
                },
                {
                  "name": "4.3.3 Collaboration and teamwork"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization and Advanced Topics",
          "children": [
            {
              "name": "5.1 Computer Vision",
              "children": [
                {
                  "name": "5.1.1 Object detection"
                },
                {
                  "name": "5.1.2 Image segmentation"
                },
                {
                  "name": "5.1.3 Project: Develop an image recognition system"
                }
              ]
            },
            {
              "name": "5.2 Time Series Analysis",
              "children": [
                {
                  "name": "5.2.1 Forecasting techniques (ARIMA, Prophet)"
                },
                {
                  "name": "5.2.2 Anomaly detection"
                },
                {
                  "name": "5.2.1 Project: Develop a time series forecasting model"
                }
              ]
            },
            {
              "name": "5.3 Reinforcement Learning",
              "children": [
                {
                  "name": "5.3.1 Markov Decision Processes (MDPs)"
                },
                {
                  "name": "5.3.2 Q-learning"
                },
                {
                  "name": "5.3.3 Deep Reinforcement Learning"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a data scientist from beginner to expert",
    "output": {
      "name": "Become a Data Scientist: Beginner to Expert",
      "children": [
        {
          "name": "1. Foundational Mathematics & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, Linear Transformations"
                },
                {
                  "name": "1.1.2 Derivatives, Integrals, Gradients"
                },
                {
                  "name": "1.1.3 Practical Application: Implementing Gradient Descent"
                }
              ]
            },
            {
              "name": "1.2 Statistics & Probability",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics, Probability Distributions"
                },
                {
                  "name": "1.2.2 Hypothesis Testing, Confidence Intervals"
                },
                {
                  "name": "1.2.3 Bayesian Statistics (Introduction)"
                }
              ]
            },
            {
              "name": "1.3 Programming Fundamentals (Python)",
              "children": [
                {
                  "name": "1.3.1 Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "1.3.2 Control Flow (Loops, Conditional Statements)"
                },
                {
                  "name": "1.3.3 Object-Oriented Programming (OOP) Concepts"
                },
                {
                  "name": "1.3.4 Project: Build a simple calculator"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Wrangling & Exploration",
          "children": [
            {
              "name": "2.1 Data Cleaning & Preprocessing",
              "children": [
                {
                  "name": "2.1.1 Handling Missing Values"
                },
                {
                  "name": "2.1.2 Outlier Detection & Treatment"
                },
                {
                  "name": "2.1.3 Data Transformation & Feature Scaling"
                }
              ]
            },
            {
              "name": "2.2 Data Exploration & Visualization",
              "children": [
                {
                  "name": "2.2.1 Exploratory Data Analysis (EDA) Techniques"
                },
                {
                  "name": "2.2.2 Data Visualization with Matplotlib & Seaborn"
                },
                {
                  "name": "2.2.3 Project: Perform EDA on a public dataset"
                }
              ]
            },
            {
              "name": "2.3 Data Manipulation with Pandas",
              "children": [
                {
                  "name": "2.3.1 DataFrames, Series, Indexing, Slicing"
                },
                {
                  "name": "2.3.2 Data Aggregation & Grouping"
                },
                {
                  "name": "2.3.3 Data merging and joining"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning Algorithms",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "3.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "3.1.2 Classification (Decision Trees, Support Vector Machines)"
                },
                {
                  "name": "3.1.3 Model Evaluation Metrics"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "3.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "3.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "3.2.3 Anomaly Detection"
                }
              ]
            },
            {
              "name": "3.3 Model Selection & Tuning",
              "children": [
                {
                  "name": "3.3.1 Cross-Validation"
                },
                {
                  "name": "3.3.2 Hyperparameter Tuning (Grid Search, Random Search)"
                },
                {
                  "name": "3.3.3 Project: Build a predictive model for a chosen dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Big Data Technologies & Deployment",
          "children": [
            {
              "name": "4.1 Introduction to Big Data",
              "children": [
                {
                  "name": "4.1.1 Hadoop & Spark"
                },
                {
                  "name": "4.1.2 Cloud Computing Platforms (AWS, Azure, GCP)"
                }
              ]
            },
            {
              "name": "4.2 Database Management Systems",
              "children": [
                {
                  "name": "4.2.1 SQL and NoSQL Databases"
                },
                {
                  "name": "4.2.2 Data Warehousing and ETL Processes"
                }
              ]
            },
            {
              "name": "4.3 Model Deployment & MLOps",
              "children": [
                {
                  "name": "4.3.1 Deploying models using REST APIs"
                },
                {
                  "name": "4.3.2 Monitoring and maintaining models"
                },
                {
                  "name": "4.3.3 Version Control (Git) and Collaboration"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Deep Learning",
              "children": [
                {
                  "name": "5.1.1 Neural Networks"
                },
                {
                  "name": "5.1.2 Convolutional Neural Networks (CNNs)"
                },
                {
                  "name": "5.1.3 Recurrent Neural Networks (RNNs)"
                }
              ]
            },
            {
              "name": "5.2 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "5.2.1 Text Preprocessing"
                },
                {
                  "name": "5.2.2 Word Embeddings"
                },
                {
                  "name": "5.2.3 Sentiment Analysis"
                }
              ]
            },
            {
              "name": "5.3 Computer Vision",
              "children": [
                {
                  "name": "5.3.1 Image Classification"
                },
                {
                  "name": "5.3.2 Object Detection"
                },
                {
                  "name": "5.3.3 Image Segmentation"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "frontend begineer",
    "output": {
      "name": "Frontend Beginner",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Client-Server Model"
                },
                {
                  "name": "1.1.2 HTTP Requests"
                },
                {
                  "name": "1.1.3 Basic Website Structure (HTML, CSS, JS)"
                },
                {
                  "name": "1.1.4  Version Control with Git (Basic commands)"
                }
              ]
            },
            {
              "name": "1.2 HTML Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Basic HTML Structure & Semantic Elements"
                },
                {
                  "name": "1.2.2 Forms & Input Elements"
                },
                {
                  "name": "1.2.3 Tables and Lists"
                },
                {
                  "name": "1.2.4 Project: Simple Landing Page"
                }
              ]
            },
            {
              "name": "1.3 CSS Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Selectors and Specificity"
                },
                {
                  "name": "1.3.2 Box Model and Layout"
                },
                {
                  "name": "1.3.3 Styling with Classes and IDs"
                },
                {
                  "name": "1.3.4 Project: Style the Landing Page"
                }
              ]
            }
          ]
        },
        {
          "name": "2. JavaScript Basics",
          "children": [
            {
              "name": "2.1 Introduction to JavaScript",
              "children": [
                {
                  "name": "2.1.1 Variables and Data Types"
                },
                {
                  "name": "2.1.2 Operators"
                },
                {
                  "name": "2.1.3 Control Flow (if/else, loops)"
                }
              ]
            },
            {
              "name": "2.2 DOM Manipulation",
              "children": [
                {
                  "name": "2.2.1 Selecting Elements"
                },
                {
                  "name": "2.2.2 Modifying Content and Attributes"
                },
                {
                  "name": "2.2.3 Event Handling"
                },
                {
                  "name": "2.2.4 Project: Interactive Landing Page"
                }
              ]
            },
            {
              "name": "2.3 Functions and Arrays",
              "children": [
                {
                  "name": "2.3.1 Function Declarations and Expressions"
                },
                {
                  "name": "2.3.2 Array Methods"
                },
                {
                  "name": "2.3.3 Object Literals"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Intermediate Frontend Development",
          "children": [
            {
              "name": "3.1 Responsive Design",
              "children": [
                {
                  "name": "3.1.1 Media Queries"
                },
                {
                  "name": "3.1.2 Mobile-First Approach"
                },
                {
                  "name": "3.1.3 Flexible Layouts"
                }
              ]
            },
            {
              "name": "3.2  Introduction to Frameworks (Choose one)",
              "children": [
                {
                  "name": "3.2.1 React: Basic Components and JSX"
                },
                {
                  "name": "3.2.2 Vue.js: Basic Components and Templates"
                },
                {
                  "name": "3.2.3 Angular (Optional): Basic Components and Modules"
                }
              ]
            },
            {
              "name": "3.3  Advanced CSS",
              "children": [
                {
                  "name": "3.3.1 CSS Preprocessors (Sass or Less)"
                },
                {
                  "name": "3.3.2 CSS Grid and Flexbox"
                },
                {
                  "name": "3.3.3 CSS Modules or Styled Components"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Project and Deployment",
          "children": [
            {
              "name": "4.1  Building a Portfolio Website",
              "children": [
                {
                  "name": "4.1.1 Plan and Design"
                },
                {
                  "name": "4.1.2 Implement using learned technologies"
                },
                {
                  "name": "4.1.3 Deploy to a hosting platform (Netlify, GitHub Pages etc.)"
                }
              ]
            },
            {
              "name": "4.2  Contributing to Open Source",
              "children": [
                {
                  "name": "4.2.1 Find beginner-friendly projects"
                },
                {
                  "name": "4.2.2  Understanding Pull Requests and Code Reviews"
                },
                {
                  "name": "4.2.3  Practice collaboration"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "backend begineer",
    "output": {
      "name": "Backend Beginner",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Data Types and Variables"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                }
              ]
            },
            {
              "name": "1.2 Introduction to Databases",
              "children": [
                {
                  "name": "1.2.1 Relational Databases (SQL) - Basics"
                },
                {
                  "name": "1.2.2 CRUD Operations (Create, Read, Update, Delete)"
                },
                {
                  "name": "1.2.3 Simple Database Design (ER Diagrams) - Project: Design a simple database for a library"
                }
              ]
            },
            {
              "name": "1.3 Command Line Interface (CLI)",
              "children": [
                {
                  "name": "1.3.1 Basic Navigation and Commands"
                },
                {
                  "name": "1.3.2 Working with Files and Directories"
                },
                {
                  "name": "1.3.3 Using Git for Version Control"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Backend Language",
          "children": [
            {
              "name": "2.1 Python",
              "children": [
                {
                  "name": "2.1.1 Setting up Python environment"
                },
                {
                  "name": "2.1.2 Basic syntax and data structures"
                },
                {
                  "name": "2.1.3 Introduction to Frameworks (Flask or Django) - Project: Simple web app (e.g., a to-do list)"
                }
              ]
            },
            {
              "name": "2.2 Node.js (JavaScript)",
              "children": [
                {
                  "name": "2.2.1 Setting up Node.js and npm"
                },
                {
                  "name": "2.2.2 Asynchronous programming with callbacks and promises"
                },
                {
                  "name": "2.2.3 Introduction to Frameworks (Express.js) - Project: REST API for a simple blog"
                }
              ]
            },
            {
              "name": "2.3 Other Languages (Optional)",
              "children": [
                {
                  "name": "2.3.1 Java/Spring Boot"
                },
                {
                  "name": "2.3.2 Go"
                },
                {
                  "name": "2.3.3 Ruby on Rails"
                }
              ]
            }
          ]
        },
        {
          "name": "3. API Design and RESTful Principles",
          "children": [
            {
              "name": "3.1 Understanding REST",
              "children": [
                {
                  "name": "3.1.1 HTTP Methods (GET, POST, PUT, DELETE)"
                },
                {
                  "name": "3.1.2 Status Codes"
                },
                {
                  "name": "3.1.3 Resource-based URLs"
                }
              ]
            },
            {
              "name": "3.2 Designing RESTful APIs",
              "children": [
                {
                  "name": "3.2.1 API Documentation (Swagger/OpenAPI)"
                },
                {
                  "name": "3.2.2 Versioning APIs"
                },
                {
                  "name": "3.2.3 Handling Errors"
                }
              ]
            },
            {
              "name": "3.3 Building a REST API",
              "children": [
                {
                  "name": "3.3.1 Using a chosen framework (Flask, Express.js, etc.)"
                },
                {
                  "name": "3.3.2 Connecting to a database"
                },
                {
                  "name": "3.3.3 Implementing API endpoints - Project: Expand previous project to include a REST API"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Server Management and Deployment",
          "children": [
            {
              "name": "4.1 Setting up a Server",
              "children": [
                {
                  "name": "4.1.1 Local server using tools like XAMPP, MAMP or similar"
                },
                {
                  "name": "4.1.2 Cloud servers (AWS, Google Cloud, Azure) - basic concepts"
                },
                {
                  "name": "4.1.3 Choosing a hosting provider"
                }
              ]
            },
            {
              "name": "4.2 Deployment Strategies",
              "children": [
                {
                  "name": "4.2.1 Using Git for deployment"
                },
                {
                  "name": "4.2.2 Continuous Integration/Continuous Deployment (CI/CD) - basic concepts"
                },
                {
                  "name": "4.2.3 Containerization (Docker) - basic concepts"
                }
              ]
            },
            {
              "name": "4.3 Security Considerations",
              "children": [
                {
                  "name": "4.3.1 Input validation and sanitization"
                },
                {
                  "name": "4.3.2 Authentication and authorization"
                },
                {
                  "name": "4.3.3 Protecting against common vulnerabilities (SQL injection, XSS)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics (Optional)",
          "children": [
            {
              "name": "5.1 Microservices Architecture",
              "children": [
                {
                  "name": "5.1.1 Principles of microservices"
                },
                {
                  "name": "5.1.2 Inter-service communication"
                },
                {
                  "name": "5.1.3 Orchestration and service discovery"
                }
              ]
            },
            {
              "name": "5.2 Message Queues (e.g., RabbitMQ, Kafka)",
              "children": [
                {
                  "name": "5.2.1 Asynchronous communication"
                },
                {
                  "name": "5.2.2 Handling large volumes of data"
                },
                {
                  "name": "5.2.3 Building a simple message-driven system"
                }
              ]
            },
            {
              "name": "5.3 Testing",
              "children": [
                {
                  "name": "5.3.1 Unit testing"
                },
                {
                  "name": "5.3.2 Integration testing"
                },
                {
                  "name": "5.3.3 End-to-end testing"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "devOps begineer",
    "output": {
      "name": "DevOps Beginner",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 What is DevOps?"
                },
                {
                  "name": "1.1.2 DevOps Principles (CI/CD, Automation, Collaboration)"
                },
                {
                  "name": "1.1.3 DevOps Culture and Mindset"
                }
              ]
            },
            {
              "name": "1.2 Version Control with Git",
              "children": [
                {
                  "name": "1.2.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.2.2 Branching and Merging"
                },
                {
                  "name": "1.2.3  GitHub/GitLab/Bitbucket Workflow",
                  "children": [
                    {
                      "name": "1.2.3.1 Project Setup"
                    },
                    {
                      "name": "1.2.3.2 Pull Requests"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Linux Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Navigation and File Management"
                },
                {
                  "name": "1.3.2 User and Permission Management"
                },
                {
                  "name": "1.3.3 Shell Scripting Basics (for automation)"
                },
                {
                  "name": "1.3.4 Basic commands (e.g., ls, cd, pwd, grep, find)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Infrastructure as Code (IaC)",
          "children": [
            {
              "name": "2.1 Introduction to IaC",
              "children": [
                {
                  "name": "2.1.1 Why use IaC?"
                },
                {
                  "name": "2.1.2 Benefits of IaC (repeatability, consistency, automation)"
                }
              ]
            },
            {
              "name": "2.2  Using Terraform",
              "children": [
                {
                  "name": "2.2.1 Setting up a Terraform environment"
                },
                {
                  "name": "2.2.2 Creating and managing infrastructure (e.g., VMs, networks) with Terraform"
                },
                {
                  "name": "2.2.3 Terraform State Management"
                },
                {
                  "name": "2.2.4 Project: Deploy a simple web server using Terraform"
                }
              ]
            },
            {
              "name": "2.3 Ansible Introduction",
              "children": [
                {
                  "name": "2.3.1 Ansible basics: playbooks and modules"
                },
                {
                  "name": "2.3.2 Configuring servers with Ansible"
                },
                {
                  "name": "2.3.3 Inventory Management"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Continuous Integration/Continuous Delivery (CI/CD)",
          "children": [
            {
              "name": "3.1 CI/CD Principles",
              "children": [
                {
                  "name": "3.1.1 Understanding the CI/CD pipeline"
                },
                {
                  "name": "3.1.2 Benefits of CI/CD (faster releases, improved quality)"
                }
              ]
            },
            {
              "name": "3.2 Setting up a CI/CD pipeline with Jenkins",
              "children": [
                {
                  "name": "3.2.1 Jenkins installation and configuration"
                },
                {
                  "name": "3.2.2 Creating a simple Jenkins pipeline"
                },
                {
                  "name": "3.2.3 Integrating with Git and other tools"
                },
                {
                  "name": "3.2.4 Project: Automate build, test, and deployment of a simple application"
                }
              ]
            },
            {
              "name": "3.3 Introduction to Docker",
              "children": [
                {
                  "name": "3.3.1 Docker basics (images, containers)"
                },
                {
                  "name": "3.3.2 Dockerfile creation and usage"
                },
                {
                  "name": "3.3.3 Docker Compose for multi-container applications"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Monitoring and Logging",
          "children": [
            {
              "name": "4.1 Monitoring Tools",
              "children": [
                {
                  "name": "4.1.1 Introduction to Prometheus and Grafana"
                },
                {
                  "name": "4.1.2 Setting up basic monitoring using Prometheus and Grafana"
                },
                {
                  "name": "4.1.3  Alerting and notifications"
                }
              ]
            },
            {
              "name": "4.2 Logging Tools",
              "children": [
                {
                  "name": "4.2.1 Centralized logging with ELK stack (Elasticsearch, Logstash, Kibana)"
                },
                {
                  "name": "4.2.2 Log analysis and troubleshooting"
                }
              ]
            },
            {
              "name": "4.3 Cloud Monitoring Services (Optional)",
              "children": [
                {
                  "name": "4.3.1 CloudWatch (AWS)"
                },
                {
                  "name": "4.3.2 Stackdriver (Google Cloud)"
                },
                {
                  "name": "4.3.3 Azure Monitor"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Container Orchestration (Kubernetes)",
          "children": [
            {
              "name": "5.1 Introduction to Kubernetes",
              "children": [
                {
                  "name": "5.1.1 Kubernetes Architecture"
                },
                {
                  "name": "5.1.2 Core Concepts (Pods, Deployments, Services)"
                }
              ]
            },
            {
              "name": "5.2 Deploying Applications on Kubernetes",
              "children": [
                {
                  "name": "5.2.1 Setting up a Kubernetes Cluster (Minikube, Docker Desktop, etc.)"
                },
                {
                  "name": "5.2.2 Deploying a simple application to Kubernetes"
                },
                {
                  "name": "5.2.3 Managing Kubernetes resources"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn devOps",
    "output": {
      "name": "i want to learn DevOps",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 DevOps Philosophy and Principles"
                },
                {
                  "name": "1.1.2 Agile methodologies and their relation to DevOps"
                },
                {
                  "name": "1.1.3 CI/CD Pipeline fundamentals"
                }
              ]
            },
            {
              "name": "1.2 Version Control",
              "children": [
                {
                  "name": "1.2.1 Git Basics (branching, merging, pull requests)"
                },
                {
                  "name": "1.2.2 GitHub/GitLab/Bitbucket workflow"
                },
                {
                  "name": "1.2.3 Project: Create a Git repository and manage a simple project"
                }
              ]
            },
            {
              "name": "1.3 Infrastructure as Code (IaC)",
              "children": [
                {
                  "name": "1.3.1 Introduction to IaC and its benefits"
                },
                {
                  "name": "1.3.2 Basic understanding of Terraform or CloudFormation"
                },
                {
                  "name": "1.3.3 Project: Provision a simple VM using Terraform or CloudFormation"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Continuous Integration/Continuous Delivery (CI/CD)",
          "children": [
            {
              "name": "2.1 CI/CD Pipeline Tools",
              "children": [
                {
                  "name": "2.1.1 Jenkins"
                },
                {
                  "name": "2.1.2 GitLab CI/CD"
                },
                {
                  "name": "2.1.3 CircleCI"
                }
              ]
            },
            {
              "name": "2.2 Automation Tools",
              "children": [
                {
                  "name": "2.2.1 Shell Scripting (Bash, Zsh)"
                },
                {
                  "name": "2.2.2 Ansible/Puppet/Chef"
                },
                {
                  "name": "2.2.3 Project: Automate a deployment process using a chosen tool"
                }
              ]
            },
            {
              "name": "2.3 Containerization",
              "children": [
                {
                  "name": "2.3.1 Docker Basics (images, containers, Dockerfile)"
                },
                {
                  "name": "2.3.2 Docker Compose for multi-container applications"
                },
                {
                  "name": "2.3.3 Project: Containerize a simple application and deploy it using Docker"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Container Orchestration and Cloud Platforms",
          "children": [
            {
              "name": "3.1 Kubernetes Fundamentals",
              "children": [
                {
                  "name": "3.1.1 Kubernetes architecture and core concepts (pods, deployments, services)"
                },
                {
                  "name": "3.1.2 Deploying applications to Kubernetes"
                },
                {
                  "name": "3.1.3 Project: Deploy a simple application to a Kubernetes cluster"
                }
              ]
            },
            {
              "name": "3.2 Cloud Platforms (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "3.2.1 Choose one cloud provider and learn its basic services (compute, storage, networking)"
                },
                {
                  "name": "3.2.2 Understand cloud-native principles"
                },
                {
                  "name": "3.2.3 Project: Deploy an application to your chosen cloud provider"
                }
              ]
            },
            {
              "name": "3.3 Monitoring and Logging",
              "children": [
                {
                  "name": "3.3.1 Prometheus and Grafana"
                },
                {
                  "name": "3.3.2 CloudWatch/Azure Monitor/Cloud Logging"
                },
                {
                  "name": "3.3.3 Project: Implement basic monitoring for a deployed application"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Security and Best Practices",
          "children": [
            {
              "name": "4.1 DevOps Security",
              "children": [
                {
                  "name": "4.1.1 Secure coding practices"
                },
                {
                  "name": "4.1.2 Vulnerability scanning and penetration testing"
                },
                {
                  "name": "4.1.3 Infrastructure security best practices"
                }
              ]
            },
            {
              "name": "4.2 Collaboration and Communication",
              "children": [
                {
                  "name": "4.2.1 Effective team communication strategies"
                },
                {
                  "name": "4.2.2 Using collaboration tools (Slack, Microsoft Teams)"
                },
                {
                  "name": "4.2.3 Agile methodologies and their role in effective collaboration"
                }
              ]
            },
            {
              "name": "4.3  Automation Testing",
              "children": [
                {
                  "name": "4.3.1 Introduction to Test Automation Frameworks (Selenium, Cypress, etc.)"
                },
                {
                  "name": "4.3.2 Implementing automated tests as part of CI/CD"
                },
                {
                  "name": "4.3.3 Project: Integrate automated testing into your CI/CD pipeline"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced DevOps",
          "children": [
            {
              "name": "5.1 Serverless Computing",
              "children": [
                {
                  "name": "5.1.1 AWS Lambda, Azure Functions, Google Cloud Functions"
                },
                {
                  "name": "5.1.2 Serverless application architecture"
                },
                {
                  "name": "5.1.3 Project: Deploy a serverless application"
                }
              ]
            },
            {
              "name": "5.2  Chaos Engineering",
              "children": [
                {
                  "name": "5.2.1 Introduction to Chaos Engineering principles"
                },
                {
                  "name": "5.2.2 Tools for Chaos Engineering (Chaos Mesh, LitmusChaos)"
                },
                {
                  "name": "5.2.3 Project: Perform a simple chaos experiment"
                }
              ]
            },
            {
              "name": "5.3 Observability",
              "children": [
                {
                  "name": "5.3.1 Advanced monitoring and tracing"
                },
                {
                  "name": "5.3.2 Distributed tracing tools (Jaeger, Zipkin)"
                },
                {
                  "name": "5.3.3 Project: Implement advanced observability for a deployed application"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn frontend",
    "output": {
      "name": "i want to learn frontend",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 HTML Basics (Structure)"
                },
                {
                  "name": "1.1.2 CSS Basics (Styling)"
                },
                {
                  "name": "1.1.3 Basic JavaScript (Interactivity)"
                },
                {
                  "name": "1.1.3 Project: Simple Landing Page"
                }
              ]
            },
            {
              "name": "1.2 Web Development Tools",
              "children": [
                {
                  "name": "1.2.1 Text Editors (VS Code, Sublime Text, Atom)"
                },
                {
                  "name": "1.2.2 Browser Developer Tools"
                },
                {
                  "name": "1.2.3 Version Control (Git & GitHub)"
                }
              ]
            },
            {
              "name": "1.3 Responsive Design",
              "children": [
                {
                  "name": "1.3.1 Understanding Viewports"
                },
                {
                  "name": "1.3.2 Media Queries"
                },
                {
                  "name": "1.3.3 Responsive Frameworks (Bootstrap Introduction)"
                },
                {
                  "name": "1.3.3 Project: Responsive Navigation Bar"
                }
              ]
            }
          ]
        },
        {
          "name": "2. JavaScript Fundamentals",
          "children": [
            {
              "name": "2.1 Data Types & Variables",
              "children": [
                {
                  "name": "2.1.1 Numbers, Strings, Booleans"
                },
                {
                  "name": "2.1.2 Arrays and Objects"
                },
                {
                  "name": "2.1.3 Variable Scoping"
                }
              ]
            },
            {
              "name": "2.2 Control Flow & Loops",
              "children": [
                {
                  "name": "2.2.1 Conditional Statements (if, else if, else)"
                },
                {
                  "name": "2.2.2 Loops (for, while, do-while)"
                },
                {
                  "name": "2.2.3 Functions and Methods"
                }
              ]
            },
            {
              "name": "2.3 DOM Manipulation",
              "children": [
                {
                  "name": "2.3.1 Selecting Elements (querySelector, getElementsBy.. )"
                },
                {
                  "name": "2.3.2 Modifying Element Content & Attributes"
                },
                {
                  "name": "2.3.3 Event Handling"
                },
                {
                  "name": "2.3.3 Project: Interactive To-Do List"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced JavaScript & Frameworks",
          "children": [
            {
              "name": "3.1 Asynchronous JavaScript",
              "children": [
                {
                  "name": "3.1.1 Promises"
                },
                {
                  "name": "3.1.2 Async/Await"
                },
                {
                  "name": "3.1.3 Fetch API"
                }
              ]
            },
            {
              "name": "3.2 Introduction to React",
              "children": [
                {
                  "name": "3.2.1 Components and JSX"
                },
                {
                  "name": "3.2.2 State and Props"
                },
                {
                  "name": "3.2.3 Project: Simple React App (e.g., Counter, List)"
                }
              ]
            },
            {
              "name": "3.3 Testing and Debugging",
              "children": [
                {
                  "name": "3.3.1 Browser Debugging Tools"
                },
                {
                  "name": "3.3.2 Introduction to testing frameworks (Jest, React Testing Library)"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Modern Frontend Development",
          "children": [
            {
              "name": "4.1 Build Tools",
              "children": [
                {
                  "name": "4.1.1 npm and package.json"
                },
                {
                  "name": "4.1.2 Webpack (or similar bundler) - Basic understanding"
                },
                {
                  "name": "4.1.3 Task Runners (gulp or similar) - optional"
                }
              ]
            },
            {
              "name": "4.2 State Management",
              "children": [
                {
                  "name": "4.2.1 Context API (React)"
                },
                {
                  "name": "4.2.2 Redux (or other state management library) - optional"
                }
              ]
            },
            {
              "name": "4.3 Advanced React Concepts",
              "children": [
                {
                  "name": "4.3.1 Hooks"
                },
                {
                  "name": "4.3.2 Routing (React Router)"
                },
                {
                  "name": "4.3.3 Project:  More complex React Application (e.g., Blog, E-commerce page)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Optimization",
          "children": [
            {
              "name": "5.1 Deployment to hosting platforms",
              "children": [
                {
                  "name": "5.1.1 Netlify"
                },
                {
                  "name": "5.1.2 Vercel"
                },
                {
                  "name": "5.1.3 GitHub Pages"
                }
              ]
            },
            {
              "name": "5.2 Website Performance Optimization",
              "children": [
                {
                  "name": "5.2.1 Image Optimization"
                },
                {
                  "name": "5.2.2 Code Splitting"
                },
                {
                  "name": "5.2.3 Caching"
                }
              ]
            },
            {
              "name": "5.3 Accessibility and SEO",
              "children": [
                {
                  "name": "5.3.1 Accessibility best practices"
                },
                {
                  "name": "5.3.2 SEO basics"
                },
                {
                  "name": "5.3.3 Project: Improve accessibility and SEO for previous project"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn backend",
    "output": {
      "name": "I Want to Learn Backend",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Control Flow"
                },
                {
                  "name": "1.1.2 Functions, Objects, Classes"
                },
                {
                  "name": "1.1.3 Basic Algorithms and Data Structures (Arrays, Lists, Hash Tables)"
                }
              ]
            },
            {
              "name": "1.2 Introduction to Databases",
              "children": [
                {
                  "name": "1.2.1 Relational Databases (SQL): Basics of SELECT, INSERT, UPDATE, DELETE"
                },
                {
                  "name": "1.2.2 NoSQL Databases: Introduction to MongoDB or similar"
                },
                {
                  "name": "1.2.3 Database Design Principles (Normalization, Relationships)"
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics: Cloning, Committing, Pushing, Pulling"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Working with Remote Repositories (GitHub, GitLab, Bitbucket)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Backend Language & Framework",
          "children": [
            {
              "name": "2.1 Learning a Language (Choose one):",
              "children": [
                {
                  "name": "2.1.1 Python (with frameworks like Django or Flask)"
                },
                {
                  "name": "2.1.2 Node.js (with Express.js)"
                },
                {
                  "name": "2.1.3 Java (with Spring Boot)"
                },
                {
                  "name": "2.1.4 Go (with Gin or Echo)"
                }
              ]
            },
            {
              "name": "2.2 Setting up Development Environment",
              "children": [
                {
                  "name": "2.2.1 Installing necessary tools (e.g., Node.js, Python, JDK, Go)"
                },
                {
                  "name": "2.2.2 Setting up a local development server"
                },
                {
                  "name": "2.2.3 Using an IDE or code editor"
                }
              ]
            },
            {
              "name": "2.3 Building a Simple API",
              "children": [
                {
                  "name": "2.3.1 Create a RESTful API with basic CRUD (Create, Read, Update, Delete) operations"
                },
                {
                  "name": "2.3.2 Handling requests and responses"
                },
                {
                  "name": "2.3.3 Project: Simple To-Do List API"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 API Design & Best Practices",
              "children": [
                {
                  "name": "3.1.1 RESTful API design principles"
                },
                {
                  "name": "3.1.2 API documentation (Swagger, OpenAPI)"
                },
                {
                  "name": "3.1.3 API security (authentication, authorization)"
                }
              ]
            },
            {
              "name": "3.2 Testing & Debugging",
              "children": [
                {
                  "name": "3.2.1 Unit testing"
                },
                {
                  "name": "3.2.2 Integration testing"
                },
                {
                  "name": "3.2.3 Debugging techniques"
                }
              ]
            },
            {
              "name": "3.3 Deployment & Hosting",
              "children": [
                {
                  "name": "3.3.1 Deploying to cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "3.3.2 Using containerization (Docker, Kubernetes)"
                },
                {
                  "name": "3.3.3 Setting up continuous integration/continuous deployment (CI/CD)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Scaling and Optimization",
          "children": [
            {
              "name": "4.1 Database Optimization",
              "children": [
                {
                  "name": "4.1.1 Query optimization"
                },
                {
                  "name": "4.1.2 Indexing"
                },
                {
                  "name": "4.1.3 Database sharding"
                }
              ]
            },
            {
              "name": "4.2 Server-Side Optimization",
              "children": [
                {
                  "name": "4.2.1 Caching strategies"
                },
                {
                  "name": "4.2.2 Load balancing"
                },
                {
                  "name": "4.2.3 Asynchronous programming"
                }
              ]
            },
            {
              "name": "4.3 Security Best Practices (Advanced)",
              "children": [
                {
                  "name": "4.3.1 Input validation and sanitization"
                },
                {
                  "name": "4.3.2 Protecting against common vulnerabilities (SQL injection, XSS, CSRF)"
                },
                {
                  "name": "4.3.3 Implementing secure authentication and authorization mechanisms"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Building a Larger Project",
          "children": [
            {
              "name": "5.1 Project Planning & Design",
              "children": [
                {
                  "name": "5.1.1 Defining project requirements"
                },
                {
                  "name": "5.1.2 Designing database schema"
                },
                {
                  "name": "5.1.3 API design"
                }
              ]
            },
            {
              "name": "5.2 Project Implementation",
              "children": [
                {
                  "name": "5.2.1 Implementing features iteratively"
                },
                {
                  "name": "5.2.2 Regularly testing and debugging"
                },
                {
                  "name": "5.2.3 Refactoring code for maintainability"
                }
              ]
            },
            {
              "name": "5.3 Project Deployment & Maintenance",
              "children": [
                {
                  "name": "5.3.1 Deploying to a production environment"
                },
                {
                  "name": "5.3.2 Monitoring performance and addressing bugs"
                },
                {
                  "name": "5.3.3 Implementing a maintenance plan"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn full stack",
    "output": {
      "name": "i want to learn full stack",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Web Fundamentals",
              "children": [
                {
                  "name": "1.1.1 HTML, CSS, and basic JavaScript"
                },
                {
                  "name": "1.1.2 Web Development Tools (VS Code, Git, Browser DevTools)"
                },
                {
                  "name": "1.1.3 Basic Web Design Principles"
                }
              ]
            },
            {
              "name": "1.2 Version Control with Git",
              "children": [
                {
                  "name": "1.2.1 Git Basics: init, add, commit, push, pull"
                },
                {
                  "name": "1.2.2 Git Branching and Merging"
                },
                {
                  "name": "1.2.3 GitHub/GitLab/Bitbucket usage; Contributing to Open Source"
                }
              ]
            },
            {
              "name": "1.3 Databases",
              "children": [
                {
                  "name": "1.3.1 Relational Databases (SQL, MySQL, PostgreSQL): Basic CRUD operations"
                },
                {
                  "name": "1.3.2 NoSQL Databases (MongoDB): Basic CRUD operations"
                },
                {
                  "name": "1.3.3 Database design principles (normalization, relationships)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Front-End Development",
          "children": [
            {
              "name": "2.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Data types, variables, operators, control flow"
                },
                {
                  "name": "2.1.2 Functions, Objects, Arrays"
                },
                {
                  "name": "2.1.3 DOM manipulation, Event handling"
                }
              ]
            },
            {
              "name": "2.2 Modern JavaScript Frameworks/Libraries",
              "children": [
                {
                  "name": "2.2.1 React: Components, JSX, state management (useState, useReducer, Context API)"
                },
                {
                  "name": "2.2.2 Project: Build a simple React application (e.g., To-Do list)"
                },
                {
                  "name": "2.2.3 Explore other frameworks (Vue, Angular) - optional"
                }
              ]
            },
            {
              "name": "2.3 Advanced Front-End Concepts",
              "children": [
                {
                  "name": "2.3.1 REST APIs, fetching data"
                },
                {
                  "name": "2.3.2 State Management (Redux, Zustand, Recoil)"
                },
                {
                  "name": "2.3.3 Testing (Jest, React Testing Library)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Back-End Development",
          "children": [
            {
              "name": "3.1 Server-Side Programming",
              "children": [
                {
                  "name": "3.1.1 Node.js and Express.js: Setting up servers, routing, handling requests"
                },
                {
                  "name": "3.1.2 API design and RESTful principles"
                },
                {
                  "name": "3.1.3 Project: Build a REST API with Node.js and Express.js"
                }
              ]
            },
            {
              "name": "3.2 Authentication and Authorization",
              "children": [
                {
                  "name": "3.2.1 JWT (JSON Web Tokens)"
                },
                {
                  "name": "3.2.2 OAuth 2.0"
                },
                {
                  "name": "3.2.3 Implementing secure authentication in your API"
                }
              ]
            },
            {
              "name": "3.3 Deployment",
              "children": [
                {
                  "name": "3.3.1 Deploying a Node.js application to platforms like Heroku, Netlify, AWS"
                },
                {
                  "name": "3.3.2 Setting up CI/CD pipelines"
                },
                {
                  "name": "3.3.3 Containerization (Docker) - optional"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Full-Stack Integration and Deployment",
          "children": [
            {
              "name": "4.1 Connecting Front-End and Back-End",
              "children": [
                {
                  "name": "4.1.1 Integrating your React app with your Node.js API"
                },
                {
                  "name": "4.1.2 Handling data flow between client and server"
                },
                {
                  "name": "4.1.3 Project: Build a full-stack application (e.g., Blog, E-commerce site)"
                }
              ]
            },
            {
              "name": "4.2 Advanced Deployment Strategies",
              "children": [
                {
                  "name": "4.2.1 Serverless functions (AWS Lambda, Google Cloud Functions) - optional"
                },
                {
                  "name": "4.2.2 Microservices architecture - optional"
                },
                {
                  "name": "4.2.3 Continuous Integration and Continuous Deployment (CI/CD)"
                }
              ]
            },
            {
              "name": "4.3 Testing and Debugging",
              "children": [
                {
                  "name": "4.3.1 End-to-end testing"
                },
                {
                  "name": "4.3.2 Debugging techniques for front-end and back-end"
                },
                {
                  "name": "4.3.3 Performance optimization"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a full stack web developer",
    "output": {
      "name": "I want to become a full stack web developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures",
                  "children": [
                    {
                      "name": "1.1.3.1 Practice: Build a simple calculator"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.2  HTML & CSS Fundamentals",
              "children": [
                {
                  "name": "1.2.1 HTML Structure (semantic elements)"
                },
                {
                  "name": "1.2.2 CSS Styling (selectors, properties)"
                },
                {
                  "name": "1.2.3 Responsive Design (media queries)",
                  "children": [
                    {
                      "name": "1.2.3.1 Project: Create a simple responsive webpage"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3  Introduction to Git & GitHub",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 GitHub Workflow (pull requests, collaboration)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Front-End Development",
          "children": [
            {
              "name": "2.1 JavaScript Essentials",
              "children": [
                {
                  "name": "2.1.1 Variables, Data Types, Operators (JavaScript specifics)"
                },
                {
                  "name": "2.1.2 DOM Manipulation"
                },
                {
                  "name": "2.1.3 Event Handling",
                  "children": [
                    {
                      "name": "2.1.3.1 Project: Create a to-do list application"
                    }
                  ]
                }
              ]
            },
            {
              "name": "2.2  Modern JavaScript Frameworks/Libraries",
              "children": [
                {
                  "name": "2.2.1 React/Vue/Angular (choose one to start)"
                },
                {
                  "name": "2.2.2 Component-based architecture"
                },
                {
                  "name": "2.2.3 State management",
                  "children": [
                    {
                      "name": "2.2.3.1 Project: Build a simple e-commerce product page"
                    }
                  ]
                }
              ]
            },
            {
              "name": "2.3  Testing & Debugging",
              "children": [
                {
                  "name": "2.3.1 Browser developer tools"
                },
                {
                  "name": "2.3.2 Unit testing (Jest, Mocha)"
                },
                {
                  "name": "2.3.3 Integration testing"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Back-End Development",
          "children": [
            {
              "name": "3.1 Server-Side Languages",
              "children": [
                {
                  "name": "3.1.1 Node.js (with Express.js)"
                },
                {
                  "name": "3.1.2 Python (with Django/Flask)"
                },
                {
                  "name": "3.1.3 Database interaction (SQL, NoSQL)"
                }
              ]
            },
            {
              "name": "3.2 Databases & APIs",
              "children": [
                {
                  "name": "3.2.1 Relational databases (SQL, PostgreSQL, MySQL)"
                },
                {
                  "name": "3.2.2 NoSQL databases (MongoDB)"
                },
                {
                  "name": "3.2.3 RESTful APIs",
                  "children": [
                    {
                      "name": "3.2.3.1 Project: Create a simple REST API for a blog"
                    }
                  ]
                }
              ]
            },
            {
              "name": "3.3  Server Deployment",
              "children": [
                {
                  "name": "3.3.1 Cloud platforms (AWS, Google Cloud, Heroku)"
                },
                {
                  "name": "3.3.2 Server configuration"
                },
                {
                  "name": "3.3.3 Deployment pipelines"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Full-Stack Integration & Advanced Topics",
          "children": [
            {
              "name": "4.1 Connecting Front-End & Back-End",
              "children": [
                {
                  "name": "4.1.1 API calls (fetch, Axios)"
                },
                {
                  "name": "4.1.2 Data handling and state management"
                },
                {
                  "name": "4.1.3 Authentication and authorization"
                }
              ]
            },
            {
              "name": "4.2 Advanced Concepts",
              "children": [
                {
                  "name": "4.2.1 Security best practices"
                },
                {
                  "name": "4.2.2 Design patterns"
                },
                {
                  "name": "4.2.3 Performance optimization"
                }
              ]
            },
            {
              "name": "4.3  Version Control Best Practices",
              "children": [
                {
                  "name": "4.3.1  Git branching strategies (Gitflow, GitHub Flow)"
                },
                {
                  "name": "4.3.2  Code reviews and collaboration"
                },
                {
                  "name": "4.3.3  Managing large projects with Git"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio and Job Search",
          "children": [
            {
              "name": "5.1 Building a Portfolio",
              "children": [
                {
                  "name": "5.1.1 Showcasing projects"
                },
                {
                  "name": "5.1.2 Creating a personal website"
                },
                {
                  "name": "5.1.3 Highlighting skills"
                }
              ]
            },
            {
              "name": "5.2 Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1 Networking"
                },
                {
                  "name": "5.2.2 Online job boards"
                },
                {
                  "name": "5.2.3 Interview preparation"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn api design",
    "output": {
      "name": "API Design Learning Roadmap",
      "children": [
        {
          "name": "1. Foundations of RESTful APIs",
          "children": [
            {
              "name": "1.1 Core REST Principles",
              "children": [
                {
                  "name": "1.1.1 HTTP Methods (GET, POST, PUT, DELETE, PATCH)"
                },
                {
                  "name": "1.1.2 Status Codes (2xx, 3xx, 4xx, 5xx)"
                },
                {
                  "name": "1.1.3 Resources and URLs"
                }
              ]
            },
            {
              "name": "1.2 Designing RESTful Resources",
              "children": [
                {
                  "name": "1.2.1 Singular vs. Plural Nouns in URLs"
                },
                {
                  "name": "1.2.2  Resource Naming Conventions"
                },
                {
                  "name": "1.2.3 Hypermedia (HATEOAS) - Introduction"
                }
              ]
            },
            {
              "name": "1.3 Practical Exercise: Simple To-Do API Design",
              "children": [
                {
                  "name": "1.3.1 Design a RESTful API for managing a list of to-do items."
                },
                {
                  "name": "1.3.2 Define resources, endpoints, and HTTP methods."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Modeling and Schema Design",
          "children": [
            {
              "name": "2.1 Choosing the Right Data Format (JSON, XML)",
              "children": [
                {
                  "name": "2.1.1 JSON Structure and Best Practices"
                },
                {
                  "name": "2.1.2  XML Structure and Best Practices (Optional)"
                }
              ]
            },
            {
              "name": "2.2 Database Design Considerations for APIs",
              "children": [
                {
                  "name": "2.2.1 Relational vs. NoSQL Databases"
                },
                {
                  "name": "2.2.2  Normalization and Data Integrity"
                }
              ]
            },
            {
              "name": "2.3 Schema Validation and Documentation",
              "children": [
                {
                  "name": "2.3.1 JSON Schema or OpenAPI"
                },
                {
                  "name": "2.3.2 API Documentation Tools (Swagger, Postman)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. API Security and Authentication",
          "children": [
            {
              "name": "3.1 Authentication Methods (OAuth 2.0, JWT, API Keys)",
              "children": [
                {
                  "name": "3.1.1 Understanding OAuth 2.0 Flows"
                },
                {
                  "name": "3.1.2 JWT Structure and Usage"
                }
              ]
            },
            {
              "name": "3.2 Authorization and Access Control",
              "children": [
                {
                  "name": "3.2.1 Role-Based Access Control (RBAC)"
                },
                {
                  "name": "3.2.2 Implementing Secure API Gateways"
                }
              ]
            },
            {
              "name": "3.3 Security Best Practices",
              "children": [
                {
                  "name": "3.3.1 Input Validation and Sanitization"
                },
                {
                  "name": "3.3.2 Protecting Against Common Vulnerabilities (OWASP Top 10)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. API Versioning and Evolution",
          "children": [
            {
              "name": "4.1 Strategies for API Versioning (URI, Header, Query Parameter)",
              "children": [
                {
                  "name": "4.1.1 Advantages and Disadvantages of Each Approach"
                },
                {
                  "name": "4.1.2 Choosing the Right Versioning Strategy"
                }
              ]
            },
            {
              "name": "4.2 Handling Deprecation and Backward Compatibility",
              "children": [
                {
                  "name": "4.2.1  Communication and Planning for Deprecation"
                },
                {
                  "name": "4.2.2 Graceful Degradation and Fallback Mechanisms"
                }
              ]
            },
            {
              "name": "4.3 Practical Exercise: Versioning an Existing To-Do API",
              "children": [
                {
                  "name": "4.3.1 Add a new feature to the To-Do API and version it appropriately."
                },
                {
                  "name": "4.3.2 Plan for deprecating older versions."
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced API Design Concepts",
          "children": [
            {
              "name": "5.1 GraphQL APIs",
              "children": [
                {
                  "name": "5.1.1  Understanding GraphQL Queries and Mutations"
                },
                {
                  "name": "5.1.2  Comparing REST and GraphQL"
                }
              ]
            },
            {
              "name": "5.2 Asynchronous APIs (WebSockets)",
              "children": [
                {
                  "name": "5.2.1 Implementing Real-time Features with WebSockets"
                },
                {
                  "name": "5.2.2  Choosing Between REST and WebSockets"
                }
              ]
            },
            {
              "name": "5.3 API Performance and Scalability",
              "children": [
                {
                  "name": "5.3.1 API Monitoring and Optimization Techniques"
                },
                {
                  "name": "5.3.2 Load Balancing and Caching Strategies"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn QA",
    "output": {
      "name": "i want to learn QA",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core QA Concepts",
              "children": [
                {
                  "name": "1.1.1 SDLC & STLC"
                },
                {
                  "name": "1.1.2 Testing Fundamentals (Types of Testing, Test Levels)"
                },
                {
                  "name": "1.1.3 Test Case Design Techniques (Equivalence Partitioning, Boundary Value Analysis)"
                }
              ]
            },
            {
              "name": "1.2 Software Development Methodologies",
              "children": [
                {
                  "name": "1.2.1 Agile Methodologies (Scrum, Kanban)"
                },
                {
                  "name": "1.2.2 Waterfall Methodology"
                },
                {
                  "name": "1.2.3 Understanding Jira and other project management tools"
                }
              ]
            },
            {
              "name": "1.3  Defect Life Cycle",
              "children": [
                {
                  "name": "1.3.1 Defect Reporting and Tracking"
                },
                {
                  "name": "1.3.2 Defect Management Process"
                },
                {
                  "name": "1.3.3  Prioritization and Severity levels"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Testing Techniques",
          "children": [
            {
              "name": "2.1 Functional Testing",
              "children": [
                {
                  "name": "2.1.1  Black Box Testing"
                },
                {
                  "name": "2.1.2  Regression Testing"
                },
                {
                  "name": "2.1.3  Smoke Testing and Sanity Testing"
                }
              ]
            },
            {
              "name": "2.2 Non-Functional Testing",
              "children": [
                {
                  "name": "2.2.1 Performance Testing (Load, Stress, Endurance)"
                },
                {
                  "name": "2.2.2 Security Testing"
                },
                {
                  "name": "2.2.3 Usability Testing"
                }
              ]
            },
            {
              "name": "2.3 Automation Testing Introduction",
              "children": [
                {
                  "name": "2.3.1 Test Automation Frameworks"
                },
                {
                  "name": "2.3.2 Choosing the right automation tool (Selenium, Cypress, Appium etc.)"
                },
                {
                  "name": "2.3.3  Record and Playback vs. Scripting"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Test Management & Tools",
          "children": [
            {
              "name": "3.1 Test Planning and Estimation",
              "children": [
                {
                  "name": "3.1.1  Test Strategy Document"
                },
                {
                  "name": "3.1.2  Test Plan creation"
                },
                {
                  "name": "3.1.3  Resource allocation and estimation"
                }
              ]
            },
            {
              "name": "3.2 Test Case Management Tools",
              "children": [
                {
                  "name": "3.2.1  TestRail, Zephyr, Xray"
                },
                {
                  "name": "3.2.2  Using Test Management tools for efficient test execution and reporting"
                },
                {
                  "name": "3.2.3  Integrating Test Management with other tools (Jira)"
                }
              ]
            },
            {
              "name": "3.3 Reporting and Communication",
              "children": [
                {
                  "name": "3.3.1  Test Reports (Bug Reports, Test Summary Reports)"
                },
                {
                  "name": "3.3.2  Effective communication with developers and stakeholders"
                },
                {
                  "name": "3.3.3  Dashboards and visualizations"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Automation in Depth (Optional)",
          "children": [
            {
              "name": "4.1  Selenium WebDriver",
              "children": [
                {
                  "name": "4.1.1  Locators and selectors"
                },
                {
                  "name": "4.1.1  TestNG or JUnit for Test Management"
                },
                {
                  "name": "4.1.3  Page Object Model"
                }
              ]
            },
            {
              "name": "4.2  API Testing",
              "children": [
                {
                  "name": "4.2.1  REST APIs"
                },
                {
                  "name": "4.2.2  Tools like Postman or REST-assured"
                },
                {
                  "name": "4.2.3  API testing methodologies"
                }
              ]
            },
            {
              "name": "4.3  CI/CD Integration",
              "children": [
                {
                  "name": "4.3.1  Jenkins, Gitlab CI"
                },
                {
                  "name": "4.3.2  Setting up automated test execution pipelines"
                },
                {
                  "name": "4.3.3  Continuous Integration best practices"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Projects and Practice",
          "children": [
            {
              "name": "5.1  Practice Projects",
              "children": [
                {
                  "name": "5.1.1  Test a simple web application"
                },
                {
                  "name": "5.1.2  Create test cases for a mobile app"
                },
                {
                  "name": "5.1.3  Automate simple test cases using Selenium/Cypress"
                }
              ]
            },
            {
              "name": "5.2 Portfolio Building",
              "children": [
                {
                  "name": "5.2.1  Document your projects and test cases"
                },
                {
                  "name": "5.2.2  Showcase your skills on GitHub or other platforms"
                },
                {
                  "name": "5.2.3  Prepare for interviews"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a QA engineer",
    "output": {
      "name": "I want to become a QA Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Software Development Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Basic Programming Concepts (Variables, Data Types, Control Flow)"
                },
                {
                  "name": "1.1.2 Understanding Software Development Lifecycle (SDLC)"
                },
                {
                  "name": "1.1.3 Common Software Development Methodologies (Agile, Waterfall)"
                }
              ]
            },
            {
              "name": "1.2 Testing Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Software Testing Principles"
                },
                {
                  "name": "1.2.2 Types of Software Testing (Unit, Integration, System, Acceptance)"
                },
                {
                  "name": "1.2.3 Test Case Design Techniques (Equivalence Partitioning, Boundary Value Analysis)"
                }
              ]
            },
            {
              "name": "1.3 Quality Assurance Processes",
              "children": [
                {
                  "name": "1.3.1 Defect Life Cycle"
                },
                {
                  "name": "1.3.2 Test Planning and Reporting"
                },
                {
                  "name": "1.3.3 Risk Management in Software Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Testing Techniques",
          "children": [
            {
              "name": "2.1 Black Box Testing",
              "children": [
                {
                  "name": "2.1.1 Functional Testing"
                },
                {
                  "name": "2.1.2 Non-Functional Testing (Performance, Security, Usability)"
                },
                {
                  "name": "2.1.3 Practical Exercise: Perform functional and UI testing on a web application"
                }
              ]
            },
            {
              "name": "2.2 White Box Testing",
              "children": [
                {
                  "name": "2.2.1 Unit Testing"
                },
                {
                  "name": "2.2.2 Code Coverage Analysis"
                },
                {
                  "name": "2.2.3 Practical Exercise: Write unit tests for a simple program using a framework like JUnit or pytest"
                }
              ]
            },
            {
              "name": "2.3 Automation Testing",
              "children": [
                {
                  "name": "2.3.1 Introduction to Test Automation Frameworks (Selenium, Appium, Cypress)"
                },
                {
                  "name": "2.3.2 Test Scripting and Development"
                },
                {
                  "name": "2.3.3 Practical Exercise: Automate a simple test case using Selenium"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Tools and Technologies",
          "children": [
            {
              "name": "3.1 Test Management Tools (Jira, TestRail)",
              "children": [
                {
                  "name": "3.1.1 Learn to use Jira for issue tracking and project management"
                },
                {
                  "name": "3.1.2 Learn to use TestRail for test case management"
                }
              ]
            },
            {
              "name": "3.2 Version Control Systems (Git)",
              "children": [
                {
                  "name": "3.2.1 Learn basic Git commands"
                },
                {
                  "name": "3.2.2 Understand branching and merging"
                }
              ]
            },
            {
              "name": "3.3 Reporting and Analytics Tools",
              "children": [
                {
                  "name": "3.3.1 Generating test reports"
                },
                {
                  "name": "3.3.2 Analyzing test results"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Concepts",
          "children": [
            {
              "name": "4.1 Performance Testing",
              "children": [
                {
                  "name": "4.1.1 Load Testing"
                },
                {
                  "name": "4.1.2 Stress Testing"
                },
                {
                  "name": "4.1.3 Performance Testing Tools (JMeter, LoadRunner)"
                }
              ]
            },
            {
              "name": "4.2 Security Testing",
              "children": [
                {
                  "name": "4.2.1 OWASP Top 10 vulnerabilities"
                },
                {
                  "name": "4.2.2 Penetration Testing"
                },
                {
                  "name": "4.2.3 Security Testing Tools (Burp Suite, OWASP ZAP)"
                }
              ]
            },
            {
              "name": "4.3 API Testing",
              "children": [
                {
                  "name": "4.3.1 REST APIs"
                },
                {
                  "name": "4.3.2 API Testing Tools (Postman, REST-assured)"
                },
                {
                  "name": "4.3.3 Practical Exercise: Test REST APIs using Postman"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Job Search and Career Development",
          "children": [
            {
              "name": "5.1 Building a Resume and Portfolio",
              "children": [
                {
                  "name": "5.1.1 Highlight relevant skills and experience"
                },
                {
                  "name": "5.1.2 Showcase projects and accomplishments"
                }
              ]
            },
            {
              "name": "5.2 Networking and Interview Preparation",
              "children": [
                {
                  "name": "5.2.1 Practice common QA interview questions"
                },
                {
                  "name": "5.2.2 Attend industry events and connect with professionals"
                }
              ]
            },
            {
              "name": "5.3 Continuous Learning",
              "children": [
                {
                  "name": "5.3.1 Stay updated with the latest testing trends and technologies"
                },
                {
                  "name": "5.3.2 Pursue certifications to enhance credibility"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Android developer",
    "output": {
      "name": "I want to become an Android Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Java Fundamentals: Data types, control flow, OOP"
                },
                {
                  "name": "1.1.2 Kotlin Fundamentals: Data types, control flow, OOP, Coroutines"
                },
                {
                  "name": "1.1.3 Object-Oriented Programming (OOP) principles: Encapsulation, Inheritance, Polymorphism"
                }
              ]
            },
            {
              "name": "1.2 Android Basics",
              "children": [
                {
                  "name": "1.2.1 Android Studio Setup and Configuration"
                },
                {
                  "name": "1.2.2 XML Layout Design: Creating user interfaces"
                },
                {
                  "name": "1.2.3 Activity Lifecycle and Intents: Understanding app flow"
                }
              ]
            },
            {
              "name": "1.3 Version Control",
              "children": [
                {
                  "name": "1.3.1 Git Basics: Cloning, branching, merging, pushing, pulling"
                },
                {
                  "name": "1.3.2 GitHub: Repository management and collaboration"
                },
                {
                  "name": "1.3.3 Project: Create a simple Android app and push it to GitHub"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Android Development",
          "children": [
            {
              "name": "2.1 UI Components and Layouts",
              "children": [
                {
                  "name": "2.1.1 Advanced Layouts: ConstraintLayout, RecyclerView"
                },
                {
                  "name": "2.1.2 UI Customization: Themes, Styles, and Custom Views"
                },
                {
                  "name": "2.1.3 Project: Build a list-based app with custom UI elements"
                }
              ]
            },
            {
              "name": "2.2 Data Handling",
              "children": [
                {
                  "name": "2.2.1 Databases: SQLite and Room Persistence Library"
                },
                {
                  "name": "2.2.2 Networking: Retrofit, Volley, and handling JSON"
                },
                {
                  "name": "2.2.3 Project: Create an app that fetches data from an API and displays it"
                }
              ]
            },
            {
              "name": "2.3 Background Tasks",
              "children": [
                {
                  "name": "2.3.1 AsyncTask and Threads"
                },
                {
                  "name": "2.3.2 Kotlin Coroutines and Flows"
                },
                {
                  "name": "2.3.3 Project: Implement background task to download image and update UI"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Android Development",
          "children": [
            {
              "name": "3.1 Architecture Components",
              "children": [
                {
                  "name": "3.1.1 ViewModel: Managing UI data"
                },
                {
                  "name": "3.1.2 LiveData: Observing data changes"
                },
                {
                  "name": "3.1.3 Navigation Component: Managing app navigation"
                }
              ]
            },
            {
              "name": "3.2 Testing",
              "children": [
                {
                  "name": "3.2.1 Unit Testing: JUnit, Mockito"
                },
                {
                  "name": "3.2.2 UI Testing: Espresso"
                },
                {
                  "name": "3.2.3 Project: Write unit and UI tests for a module"
                }
              ]
            },
            {
              "name": "3.3 Advanced Topics",
              "children": [
                {
                  "name": "3.3.1 Android Jetpack Compose: Declarative UI toolkit"
                },
                {
                  "name": "3.3.2 Dependency Injection: Hilt, Dagger"
                },
                {
                  "name": "3.3.3 Project: Refactor an existing app using Jetpack Compose and DI"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Optimization",
          "children": [
            {
              "name": "4.1 Publishing to Google Play Store",
              "children": [
                {
                  "name": "4.1.1 Setting up a developer account"
                },
                {
                  "name": "4.1.2 Creating release builds"
                },
                {
                  "name": "4.1.3 Uploading and publishing the app"
                }
              ]
            },
            {
              "name": "4.2 App Performance Optimization",
              "children": [
                {
                  "name": "4.2.1 Profiling and debugging performance bottlenecks"
                },
                {
                  "name": "4.2.2 Memory management"
                },
                {
                  "name": "4.2.3 Battery optimization"
                }
              ]
            },
            {
              "name": "4.3 Security Best Practices",
              "children": [
                {
                  "name": "4.3.1 Data encryption and secure storage"
                },
                {
                  "name": "4.3.2 Authentication and authorization"
                },
                {
                  "name": "4.3.3 Protecting against common vulnerabilities"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning",
          "children": [
            {
              "name": "5.1 Staying up-to-date",
              "children": [
                {
                  "name": "5.1.1 Following Android developer blogs and publications"
                },
                {
                  "name": "5.1.2 Attending conferences and workshops"
                },
                {
                  "name": "5.1.3 Engaging with the Android developer community"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn ios development",
    "output": {
      "name": "iOS Development Learning Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Understanding Swift Syntax"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) in Swift"
                },
                {
                  "name": "1.1.3 Basic Data Structures (Arrays, Dictionaries, Sets)"
                }
              ]
            },
            {
              "name": "1.2 Xcode Basics",
              "children": [
                {
                  "name": "1.2.1 Interface Builder Introduction"
                },
                {
                  "name": "1.2.2 Setting up a new iOS Project"
                },
                {
                  "name": "1.2.3 Navigating Xcode's interface and debugger"
                }
              ]
            },
            {
              "name": "1.3 iOS UI Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Auto Layout and Constraints"
                },
                {
                  "name": "1.3.2 Working with UI elements (Buttons, Labels, Images, TextFields)"
                },
                {
                  "name": "1.3.3 Project: Simple Calculator App"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate iOS Development",
          "children": [
            {
              "name": "2.1 Working with Data",
              "children": [
                {
                  "name": "2.1.1 Property Lists (plist)"
                },
                {
                  "name": "2.1.2 Core Data Introduction"
                },
                {
                  "name": "2.1.3 Using JSON and Networking (URLSession)"
                }
              ]
            },
            {
              "name": "2.2 Advanced UI Concepts",
              "children": [
                {
                  "name": "2.2.1 Table Views and Collection Views"
                },
                {
                  "name": "2.2.2 Navigation Controllers and Tab Bars"
                },
                {
                  "name": "2.2.3 Segues and Storyboard Navigation"
                }
              ]
            },
            {
              "name": "2.3 Handling User Input",
              "children": [
                {
                  "name": "2.3.1 Text Field Delegation and Handling"
                },
                {
                  "name": "2.3.2 Handling Gestures"
                },
                {
                  "name": "2.3.3 Project: To-Do List App with Persistence"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced iOS Development",
          "children": [
            {
              "name": "3.1 App Architecture",
              "children": [
                {
                  "name": "3.1.1 MVC (Model-View-Controller)"
                },
                {
                  "name": "3.1.2 MVVM (Model-View-ViewModel)"
                },
                {
                  "name": "3.1.3 VIPER"
                }
              ]
            },
            {
              "name": "3.2 Concurrency and Asynchronous Programming",
              "children": [
                {
                  "name": "3.2.1 Grand Central Dispatch (GCD)"
                },
                {
                  "name": "3.2.2 Operation Queues"
                },
                {
                  "name": "3.2.3 Async/Await"
                }
              ]
            },
            {
              "name": "3.3 Advanced Networking",
              "children": [
                {
                  "name": "3.3.1 Using REST APIs"
                },
                {
                  "name": "3.3.2 Handling Network Errors"
                },
                {
                  "name": "3.3.3 Implementing background tasks"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Distribution",
          "children": [
            {
              "name": "4.1 Setting up Certificates and Provisioning Profiles",
              "children": [
                {
                  "name": "4.1.1 Apple Developer Account"
                },
                {
                  "name": "4.1.2 Code Signing"
                },
                {
                  "name": "4.1.3 App Store Connect"
                }
              ]
            },
            {
              "name": "4.2 App Store Submission",
              "children": [
                {
                  "name": "4.2.1 Preparing App Store Metadata"
                },
                {
                  "name": "4.2.2 Screenshots and Videos"
                },
                {
                  "name": "4.2.3 App Store Review Process"
                }
              ]
            },
            {
              "name": "4.3 TestFlight Beta Testing",
              "children": [
                {
                  "name": "4.3.1 Setting up TestFlight"
                },
                {
                  "name": "4.3.2 Distributing Beta Builds"
                },
                {
                  "name": "4.3.3 Gathering Feedback"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Further Exploration",
          "children": [
            {
              "name": "5.1 Third-Party Libraries",
              "children": [
                {
                  "name": "5.1.1 Networking Libraries (Alamofire, URLSession)"
                },
                {
                  "name": "5.1.2 UI Libraries (SnapKit, RxSwift)"
                },
                {
                  "name": "5.1.3 Firebase Integration"
                }
              ]
            },
            {
              "name": "5.2 Advanced Topics",
              "children": [
                {
                  "name": "5.2.1 Core Animation"
                },
                {
                  "name": "5.2.2 ARKit and RealityKit"
                },
                {
                  "name": "5.2.3 SwiftUI (Declarative UI Framework)"
                }
              ]
            },
            {
              "name": "5.3 Project Ideas",
              "children": [
                {
                  "name": "5.3.1 Social Media App"
                },
                {
                  "name": "5.3.2 E-commerce App"
                },
                {
                  "name": "5.3.3 Game Development"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn android development",
    "output": {
      "name": "Learn Android Development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Java Fundamentals (Variables, Data Types, Control Flow)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) Principles (Classes, Objects, Inheritance, Polymorphism)"
                },
                {
                  "name": "1.1.3 Data Structures (Arrays, Lists, Maps)"
                }
              ]
            },
            {
              "name": "1.2 Android Basics",
              "children": [
                {
                  "name": "1.2.1 Setting up Android Studio and SDK"
                },
                {
                  "name": "1.2.2 Understanding Android Architecture (Activities, Layouts, Views)"
                },
                {
                  "name": "1.2.3 Building a Simple 'Hello World' App"
                }
              ]
            },
            {
              "name": "1.3 XML for Layouts",
              "children": [
                {
                  "name": "1.3.1 Understanding XML structure for UI"
                },
                {
                  "name": "1.3.2 Working with different UI elements (TextView, Button, ImageView)"
                },
                {
                  "name": "1.3.3 Creating responsive layouts with ConstraintLayout"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Android Development",
          "children": [
            {
              "name": "2.1 User Interface (UI) Design",
              "children": [
                {
                  "name": "2.1.1 Advanced Layouts (RecyclerView, ViewPager)"
                },
                {
                  "name": "2.1.2 Implementing Material Design guidelines"
                },
                {
                  "name": "2.1.3 Project: Build a simple list-based app (e.g., to-do list)"
                }
              ]
            },
            {
              "name": "2.2 Data Handling",
              "children": [
                {
                  "name": "2.2.1 Working with SharedPreferences"
                },
                {
                  "name": "2.2.2 Using SQLite databases"
                },
                {
                  "name": "2.2.3 Project: Implement data persistence in the to-do list app"
                }
              ]
            },
            {
              "name": "2.3 Networking",
              "children": [
                {
                  "name": "2.3.1 Making HTTP requests using Retrofit or Volley"
                },
                {
                  "name": "2.3.2 Handling JSON responses"
                },
                {
                  "name": "2.3.3 Project: Fetch and display data from a public API"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Android Development",
          "children": [
            {
              "name": "3.1 Background Tasks and Processes",
              "children": [
                {
                  "name": "3.1.1 Understanding background threads and AsyncTask"
                },
                {
                  "name": "3.1.2 Using WorkManager for scheduling tasks"
                },
                {
                  "name": "3.1.3 Handling lifecycle changes and background restrictions"
                }
              ]
            },
            {
              "name": "3.2  Location Services and Maps",
              "children": [
                {
                  "name": "3.2.1 Integrating Google Maps SDK"
                },
                {
                  "name": "3.2.2 Implementing GPS tracking"
                },
                {
                  "name": "3.2.3 Project: Create a simple location-based app"
                }
              ]
            },
            {
              "name": "3.3 Advanced UI Components",
              "children": [
                {
                  "name": "3.3.1 Implementing Custom Views"
                },
                {
                  "name": "3.3.2 Using Animations and Transitions"
                },
                {
                  "name": "3.3.3 Project: Enhance the to-do list app with custom UI elements"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Modern Android Development",
          "children": [
            {
              "name": "4.1 Jetpack Compose",
              "children": [
                {
                  "name": "4.1.1 Introduction to declarative UI"
                },
                {
                  "name": "4.1.2 Building layouts with Compose"
                },
                {
                  "name": "4.1.3 Project: Rebuild the to-do list app using Jetpack Compose"
                }
              ]
            },
            {
              "name": "4.2 Kotlin Coroutines",
              "children": [
                {
                  "name": "4.2.1 Asynchronous programming with coroutines"
                },
                {
                  "name": "4.2.2 Handling concurrency"
                },
                {
                  "name": "4.2.3 Project: Integrate coroutines in an existing app"
                }
              ]
            },
            {
              "name": "4.3 Architecture Components",
              "children": [
                {
                  "name": "4.3.1 ViewModel and LiveData"
                },
                {
                  "name": "4.3.2 Room Persistence Library"
                },
                {
                  "name": "4.3.3 Project: Implement a robust architecture for a larger app"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Testing",
          "children": [
            {
              "name": "5.1 Publishing to the Google Play Store",
              "children": [
                {
                  "name": "5.1.1 Creating a Google Play Developer Account"
                },
                {
                  "name": "5.1.2 Preparing the app for release"
                },
                {
                  "name": "5.1.3 Uploading the app to the Play Store"
                }
              ]
            },
            {
              "name": "5.2 App Testing",
              "children": [
                {
                  "name": "5.2.1 Unit Testing"
                },
                {
                  "name": "5.2.2 UI Testing"
                },
                {
                  "name": "5.2.3 Integration Testing"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn data science",
    "output": {
      "name": "i want to learn data science",
      "children": [
        {
          "name": "1. Foundational Mathematics & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, Linear Transformations"
                },
                {
                  "name": "1.1.2 Derivatives, Integrals, Gradients"
                },
                {
                  "name": "1.1.3 Practical Exercise: Implement gradient descent in Python"
                }
              ]
            },
            {
              "name": "1.2 Statistics & Probability",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics, Probability Distributions"
                },
                {
                  "name": "1.2.2 Hypothesis Testing, Confidence Intervals"
                },
                {
                  "name": "1.2.3 Practical Exercise: Analyze a dataset using statistical tests"
                }
              ]
            },
            {
              "name": "1.3 Python Programming for Data Science",
              "children": [
                {
                  "name": "1.3.1 Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "1.3.2 Control Flow (Loops, Conditionals)"
                },
                {
                  "name": "1.3.3 Functions, Object-Oriented Programming (OOP) basics"
                },
                {
                  "name": "1.3.4 Practical Exercise: Build a simple data processing script"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Wrangling & Exploration",
          "children": [
            {
              "name": "2.1 Data Cleaning & Preprocessing",
              "children": [
                {
                  "name": "2.1.1 Handling Missing Values"
                },
                {
                  "name": "2.1.2 Data Transformation (Scaling, Encoding)"
                },
                {
                  "name": "2.1.3 Outlier Detection & Treatment"
                }
              ]
            },
            {
              "name": "2.2 Exploratory Data Analysis (EDA)",
              "children": [
                {
                  "name": "2.2.1 Data Visualization (Matplotlib, Seaborn)"
                },
                {
                  "name": "2.2.2 Summary Statistics & Data Distributions"
                },
                {
                  "name": "2.2.3 Feature Engineering & Selection"
                }
              ]
            },
            {
              "name": "2.3 Data Manipulation with Pandas",
              "children": [
                {
                  "name": "2.3.1 DataFrames, Series"
                },
                {
                  "name": "2.3.2 Data Filtering, Sorting, Grouping"
                },
                {
                  "name": "2.3.3 Data Aggregation & Pivoting"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning Fundamentals",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "3.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "3.1.2 Classification (Decision Trees, SVM, Naive Bayes)"
                },
                {
                  "name": "3.1.3 Model Evaluation Metrics"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "3.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "3.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "3.2.3 Anomaly Detection"
                }
              ]
            },
            {
              "name": "3.3 Model Selection & Tuning",
              "children": [
                {
                  "name": "3.3.1 Cross-Validation"
                },
                {
                  "name": "3.3.2 Hyperparameter Tuning (Grid Search, Random Search)"
                },
                {
                  "name": "3.3.3 Bias-Variance Tradeoff"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deep Learning (Optional, but Recommended)",
          "children": [
            {
              "name": "4.1 Neural Networks",
              "children": [
                {
                  "name": "4.1.1 Perceptrons, Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "4.1.2 Backpropagation"
                },
                {
                  "name": "4.1.3 Activation Functions"
                }
              ]
            },
            {
              "name": "4.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.2.1 Image Classification & Object Detection"
                },
                {
                  "name": "4.2.2 Architectures (AlexNet, VGG, ResNet)"
                },
                {
                  "name": "4.2.3 Transfer Learning"
                }
              ]
            },
            {
              "name": "4.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "4.3.1 Time Series Analysis, Natural Language Processing"
                },
                {
                  "name": "4.3.2 LSTMs, GRUs"
                },
                {
                  "name": "4.3.3 Sequence-to-Sequence Models"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Deployment and Communication",
          "children": [
            {
              "name": "5.1 Deployment Methods",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, Azure, GCP)"
                },
                {
                  "name": "5.1.2 APIs and Web Applications"
                },
                {
                  "name": "5.1.3 Containerization (Docker)"
                }
              ]
            },
            {
              "name": "5.2 Data Visualization for Communication",
              "children": [
                {
                  "name": "5.2.1 Dashboards and Interactive Visualizations"
                },
                {
                  "name": "5.2.2 Storytelling with Data"
                },
                {
                  "name": "5.2.3 Report Writing and Presentation Skills"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn machine learning",
    "output": {
      "name": "i want to learn machine learning",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra (Vectors, Matrices, Operations)"
                },
                {
                  "name": "1.1.2 Calculus (Derivatives, Gradients)"
                },
                {
                  "name": "1.1.3 Probability & Statistics (Distributions, Hypothesis Testing)"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Basics (Data structures, control flow)"
                },
                {
                  "name": "1.2.2 NumPy (Array manipulation)"
                },
                {
                  "name": "1.2.3 Pandas (Data manipulation and analysis)"
                },
                {
                  "name": "1.2.4 Project: Data Cleaning and Exploration with a real-world dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Supervised Learning",
          "children": [
            {
              "name": "2.1 Regression",
              "children": [
                {
                  "name": "2.1.1 Linear Regression"
                },
                {
                  "name": "2.1.2 Polynomial Regression"
                },
                {
                  "name": "2.1.3 Regularization (Ridge, Lasso)"
                }
              ]
            },
            {
              "name": "2.2 Classification",
              "children": [
                {
                  "name": "2.2.1 Logistic Regression"
                },
                {
                  "name": "2.2.2 Support Vector Machines (SVM)"
                },
                {
                  "name": "2.2.3 Decision Trees"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation",
              "children": [
                {
                  "name": "2.3.1 Metrics (Accuracy, Precision, Recall, F1-score)"
                },
                {
                  "name": "2.3.2 Cross-validation"
                },
                {
                  "name": "2.3.3 Project: Build a classification model to predict customer churn"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Unsupervised Learning",
          "children": [
            {
              "name": "3.1 Clustering",
              "children": [
                {
                  "name": "3.1.1 K-means Clustering"
                },
                {
                  "name": "3.1.2 Hierarchical Clustering"
                }
              ]
            },
            {
              "name": "3.2 Dimensionality Reduction",
              "children": [
                {
                  "name": "3.2.1 Principal Component Analysis (PCA)"
                },
                {
                  "name": "3.2.2 t-distributed Stochastic Neighbor Embedding (t-SNE)"
                }
              ]
            },
            {
              "name": "3.3 Association Rule Mining",
              "children": [
                {
                  "name": "3.3.1 Apriori Algorithm"
                }
              ]
            },
            {
              "name": "3.4 Project: Customer Segmentation using clustering techniques"
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Deep Learning",
              "children": [
                {
                  "name": "4.1.1 Neural Networks"
                },
                {
                  "name": "4.1.2 Convolutional Neural Networks (CNNs)"
                },
                {
                  "name": "4.1.3 Recurrent Neural Networks (RNNs)"
                }
              ]
            },
            {
              "name": "4.2 Model Deployment",
              "children": [
                {
                  "name": "4.2.1 REST APIs"
                },
                {
                  "name": "4.2.2 Cloud platforms (AWS, Google Cloud, Azure)"
                }
              ]
            },
            {
              "name": "4.3 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "4.3.1 Text preprocessing"
                },
                {
                  "name": "4.3.2 Word embeddings (Word2Vec, GloVe)"
                },
                {
                  "name": "4.3.3 Recurrent Neural Networks for NLP"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Practical Application & Projects",
          "children": [
            {
              "name": "5.1 Capstone Project",
              "children": [
                {
                  "name": "5.1.1  Choose a real-world problem and apply learned techniques"
                }
              ]
            },
            {
              "name": "5.2 Portfolio Building",
              "children": [
                {
                  "name": "5.2.1  Document and showcase your projects on GitHub/Portfolio website"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn nlp",
    "output": {
      "name": "I Want to Learn NLP",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Text Preprocessing (Tokenization, Stemming, Lemmatization)"
                },
                {
                  "name": "1.1.2 Regular Expressions"
                },
                {
                  "name": "1.1.3  Basic NLP Pipelines"
                }
              ]
            },
            {
              "name": "1.2  Python for NLP",
              "children": [
                {
                  "name": "1.2.1 Python Basics (Data Structures, Loops, Functions)"
                },
                {
                  "name": "1.2.2  NumPy for Numerical Computing"
                },
                {
                  "name": "1.2.3 Pandas for Data Manipulation"
                }
              ]
            },
            {
              "name": "1.3 Linguistics Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Parts of Speech (POS) Tagging"
                },
                {
                  "name": "1.3.2 Syntax and Parsing"
                },
                {
                  "name": "1.3.3  Semantics and Word Sense Disambiguation"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Techniques",
          "children": [
            {
              "name": "2.1 Word Embeddings",
              "children": [
                {
                  "name": "2.1.1 Word2Vec"
                },
                {
                  "name": "2.1.2 GloVe"
                },
                {
                  "name": "2.1.3 FastText (Project: Build a simple word similarity application)"
                }
              ]
            },
            {
              "name": "2.2 Sequence Models",
              "children": [
                {
                  "name": "2.2.1 Recurrent Neural Networks (RNNs)"
                },
                {
                  "name": "2.2.2 Long Short-Term Memory (LSTM) networks"
                },
                {
                  "name": "2.2.3 Gated Recurrent Units (GRUs)"
                }
              ]
            },
            {
              "name": "2.3 Transformers",
              "children": [
                {
                  "name": "2.3.1 Attention Mechanisms"
                },
                {
                  "name": "2.3.2 The Transformer Architecture"
                },
                {
                  "name": "2.3.3 BERT, GPT Models (Project: Fine-tune a pre-trained model for sentiment analysis)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. NLP Applications",
          "children": [
            {
              "name": "3.1 Text Classification",
              "children": [
                {
                  "name": "3.1.1 Sentiment Analysis"
                },
                {
                  "name": "3.1.2 Topic Classification"
                },
                {
                  "name": "3.1.3 Spam Detection (Project: Build a spam classifier)"
                }
              ]
            },
            {
              "name": "3.2 Natural Language Generation",
              "children": [
                {
                  "name": "3.2.1 Text Summarization"
                },
                {
                  "name": "3.2.2 Machine Translation"
                },
                {
                  "name": "3.2.3 Chatbots"
                }
              ]
            },
            {
              "name": "3.3 Information Extraction",
              "children": [
                {
                  "name": "3.3.1 Named Entity Recognition (NER)"
                },
                {
                  "name": "3.3.2 Relationship Extraction"
                },
                {
                  "name": "3.3.3 Event Extraction"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1  Deep Learning for NLP",
              "children": [
                {
                  "name": "4.1.1 Advanced RNN Architectures"
                },
                {
                  "name": "4.1.2 Convolutional Neural Networks (CNNs) for NLP"
                },
                {
                  "name": "4.1.3  Graph Neural Networks for NLP"
                }
              ]
            },
            {
              "name": "4.2 Unsupervised and Semi-Supervised NLP",
              "children": [
                {
                  "name": "4.2.1 Topic Modeling (LDA)"
                },
                {
                  "name": "4.2.2 Clustering Techniques"
                },
                {
                  "name": "4.2.3 Self-Supervised Learning"
                }
              ]
            },
            {
              "name": "4.3 Deployment and Evaluation",
              "children": [
                {
                  "name": "4.3.1 Model Deployment Strategies"
                },
                {
                  "name": "4.3.2 Evaluation Metrics (Precision, Recall, F1-score)"
                },
                {
                  "name": "4.3.3  Bias and Fairness in NLP (Project: Analyze bias in a pre-trained model)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Resources and Tools",
          "children": [
            {
              "name": "5.1 Libraries",
              "children": [
                {
                  "name": "5.1.1 NLTK"
                },
                {
                  "name": "5.1.2 SpaCy"
                },
                {
                  "name": "5.1.3 Transformers (Hugging Face)"
                }
              ]
            },
            {
              "name": "5.2 Datasets",
              "children": [
                {
                  "name": "5.2.1 IMDB Movie Reviews"
                },
                {
                  "name": "5.2.2 GLUE Benchmark"
                },
                {
                  "name": "5.2.3  Common Crawl"
                }
              ]
            },
            {
              "name": "5.3 Online Courses & Communities",
              "children": [
                {
                  "name": "5.3.1 Stanford CS224N"
                },
                {
                  "name": "5.3.2 Coursera/edX NLP courses"
                },
                {
                  "name": "5.3.3 NLP Research Papers & Blogs"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a blockchain developer",
    "output": {
      "name": "I want to become a Blockchain Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Decentralization and Distributed Ledger Technology (DLT)"
                },
                {
                  "name": "1.1.2 Cryptography (Hashing, Public-Key Cryptography, Digital Signatures)"
                },
                {
                  "name": "1.1.3 Consensus Mechanisms (Proof-of-Work, Proof-of-Stake, etc.)"
                }
              ]
            },
            {
              "name": "1.2 Blockchain Architectures",
              "children": [
                {
                  "name": "1.2.1 Public vs. Private vs. Consortium Blockchains"
                },
                {
                  "name": "1.2.2 Understanding Smart Contracts and their limitations"
                },
                {
                  "name": "1.2.3  Different Blockchain Platforms (Ethereum, Hyperledger Fabric, Corda)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Programming and Development Tools",
          "children": [
            {
              "name": "2.1 Programming Languages",
              "children": [
                {
                  "name": "2.1.1 Solidity (for Ethereum development)"
                },
                {
                  "name": "2.1.2 JavaScript (for various blockchain tools and front-end development)"
                },
                {
                  "name": "2.1.3 Go (for Hyperledger Fabric and other blockchain platforms)"
                }
              ]
            },
            {
              "name": "2.2 Development Environments & Tools",
              "children": [
                {
                  "name": "2.2.1 Remix IDE (for Solidity)"
                },
                {
                  "name": "2.2.2 Truffle Suite (for Ethereum development)"
                },
                {
                  "name": "2.2.3 Hardhat (for Ethereum development)"
                },
                {
                  "name": "2.2.4 Setting up a local blockchain network (Ganache, Besu)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Smart Contract Development",
          "children": [
            {
              "name": "3.1 Solidity Fundamentals",
              "children": [
                {
                  "name": "3.1.1 Data Types, Variables, and Control Structures"
                },
                {
                  "name": "3.1.2 Functions, Events, and Modifiers"
                },
                {
                  "name": "3.1.3 Inheritance and Interfaces"
                }
              ]
            },
            {
              "name": "3.2 Advanced Solidity Concepts",
              "children": [
                {
                  "name": "3.2.1  ERC-20 & ERC-721 Tokens"
                },
                {
                  "name": "3.2.2 Security Best Practices (Reentrancy, Overflow/Underflow)"
                },
                {
                  "name": "3.2.3 Testing and Debugging Smart Contracts (using tools like Hardhat)"
                },
                {
                  "name": "3.2.4 Project: Create a simple ERC-20 token"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Blockchain Platforms & Frameworks",
          "children": [
            {
              "name": "4.1 Ethereum Development",
              "children": [
                {
                  "name": "4.1.1  Web3.js Interaction"
                },
                {
                  "name": "4.1.2  Deployment to Testnets and Mainnet"
                },
                {
                  "name": "4.1.3  Project: Build a decentralized application (DApp) using React and Web3.js"
                }
              ]
            },
            {
              "name": "4.2 Hyperledger Fabric Development",
              "children": [
                {
                  "name": "4.2.1 Chaincode Development (using Go or Node.js)"
                },
                {
                  "name": "4.2.2 Setting up a Hyperledger Fabric Network"
                },
                {
                  "name": "4.2.3  Project: Build a simple supply chain application on Hyperledger Fabric"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1  Scaling Solutions",
              "children": [
                {
                  "name": "5.1.1 Layer-2 solutions (e.g., State Channels, Plasma, Rollups)"
                },
                {
                  "name": "5.1.2 Sharding and other scaling techniques"
                }
              ]
            },
            {
              "name": "5.2  Decentralized Finance (DeFi)",
              "children": [
                {
                  "name": "5.2.1  Understanding DeFi protocols (e.g., AMMs, Lending protocols)"
                },
                {
                  "name": "5.2.2  Developing DeFi smart contracts"
                },
                {
                  "name": "5.2.3  Project:  Build a simple DeFi application (e.g., a decentralized exchange)"
                }
              ]
            },
            {
              "name": "5.3  Non-Fungible Tokens (NFTs)",
              "children": [
                {
                  "name": "5.3.1  Understanding NFT standards (ERC-721, ERC-1155)"
                },
                {
                  "name": "5.3.2  Developing NFT smart contracts and marketplaces"
                },
                {
                  "name": "5.3.3 Project: Create and deploy your own NFT collection"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn blockchain",
    "output": {
      "name": "I Want to Learn Blockchain",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Decentralization and Distributed Ledger Technology (DLT)"
                },
                {
                  "name": "1.1.2 Cryptography (Hashing, Public-Private Key Pairs, Digital Signatures)"
                },
                {
                  "name": "1.1.3 Consensus Mechanisms (Proof-of-Work, Proof-of-Stake, etc.)"
                }
              ]
            },
            {
              "name": "1.2 Blockchain Architecture",
              "children": [
                {
                  "name": "1.2.1 Blocks and Chains"
                },
                {
                  "name": "1.2.2 Data Structures and Merkle Trees"
                },
                {
                  "name": "1.2.3 Network Topology and Peer-to-Peer Communication"
                }
              ]
            },
            {
              "name": "1.3 Bitcoin and its History",
              "children": [
                {
                  "name": "1.3.1 Satoshi Nakamoto and the Bitcoin Whitepaper"
                },
                {
                  "name": "1.3.2 Mining and Transaction Fees"
                },
                {
                  "name": "1.3.3 Bitcoin's limitations and scalability challenges"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Smart Contracts and Ethereum",
          "children": [
            {
              "name": "2.1 Introduction to Ethereum",
              "children": [
                {
                  "name": "2.1.1 Ethereum Virtual Machine (EVM)"
                },
                {
                  "name": "2.1.2 Gas and Transaction Costs"
                },
                {
                  "name": "2.1.3  Solidity Programming Language - Basic Syntax"
                }
              ]
            },
            {
              "name": "2.2 Smart Contract Development",
              "children": [
                {
                  "name": "2.2.1 Writing and Deploying Simple Smart Contracts (e.g., a Token)"
                },
                {
                  "name": "2.2.2 Testing Smart Contracts using Remix or Hardhat"
                },
                {
                  "name": "2.2.3  Understanding Common Smart Contract Vulnerabilities"
                }
              ]
            },
            {
              "name": "2.3 Decentralized Applications (dApps)",
              "children": [
                {
                  "name": "2.3.1 Frontend Integration with Smart Contracts"
                },
                {
                  "name": "2.3.2  Building a simple dApp (e.g., a basic voting system)"
                },
                {
                  "name": "2.3.3  User Interface/User Experience (UI/UX) considerations for dApps"
                }
              ]
            }
          ]
        },
        {
          "name": "3.  Advanced Blockchain Concepts",
          "children": [
            {
              "name": "3.1 Scalability Solutions",
              "children": [
                {
                  "name": "3.1.1 Layer-2 Scaling Solutions (State Channels, Rollups, Plasma)"
                },
                {
                  "name": "3.1.2 Sharding and its implications"
                },
                {
                  "name": "3.1.3 Comparing different scaling approaches"
                }
              ]
            },
            {
              "name": "3.2  Interoperability",
              "children": [
                {
                  "name": "3.2.1 Cross-chain communication and bridges"
                },
                {
                  "name": "3.2.2  Atomic Swaps"
                },
                {
                  "name": "3.2.3  Challenges in achieving interoperability"
                }
              ]
            },
            {
              "name": "3.3  Governance and Decentralized Autonomous Organizations (DAOs)",
              "children": [
                {
                  "name": "3.3.1  DAO structures and governance mechanisms"
                },
                {
                  "name": "3.3.2  Tokenomics and incentives"
                },
                {
                  "name": "3.3.3  Examples of successful and failed DAOs"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Exploring Other Blockchains & Applications",
          "children": [
            {
              "name": "4.1  Alternative Blockchain Platforms",
              "children": [
                {
                  "name": "4.1.1  Hyperledger Fabric"
                },
                {
                  "name": "4.1.2  Corda"
                },
                {
                  "name": "4.1.3  Comparison of permissioned vs. permissionless blockchains"
                }
              ]
            },
            {
              "name": "4.2  Real-world Applications of Blockchain",
              "children": [
                {
                  "name": "4.2.1  Supply Chain Management"
                },
                {
                  "name": "4.2.2  Digital Identity"
                },
                {
                  "name": "4.2.3  Decentralized Finance (DeFi)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Security and Best Practices",
          "children": [
            {
              "name": "5.1  Smart Contract Security",
              "children": [
                {
                  "name": "5.1.1 Common vulnerabilities (reentrancy, overflow/underflow)"
                },
                {
                  "name": "5.1.2 Security auditing and formal verification"
                },
                {
                  "name": "5.1.3 Best practices for secure smart contract development"
                }
              ]
            },
            {
              "name": "5.2  Wallet Security",
              "children": [
                {
                  "name": "5.2.1  Types of wallets (hardware, software, custodial)"
                },
                {
                  "name": "5.2.2  Phishing and social engineering attacks"
                },
                {
                  "name": "5.2.3  Best practices for securing your cryptocurrency wallets"
                }
              ]
            },
            {
              "name": "5.3  Regulatory Landscape",
              "children": [
                {
                  "name": "5.3.1  Understanding legal and regulatory frameworks for cryptocurrencies"
                },
                {
                  "name": "5.3.2  Know Your Customer (KYC) and Anti-Money Laundering (AML) compliance"
                },
                {
                  "name": "5.3.3  Tax implications of cryptocurrency transactions"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn cyber security",
    "output": {
      "name": "I want to learn cybersecurity",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP Model"
                },
                {
                  "name": "1.1.2 Subnetting and IP Addressing"
                },
                {
                  "name": "1.1.3 Network Protocols (HTTP, DNS, FTP)"
                }
              ]
            },
            {
              "name": "1.2 Operating Systems",
              "children": [
                {
                  "name": "1.2.1 Linux Command Line"
                },
                {
                  "name": "1.2.2 Windows Security Features"
                },
                {
                  "name": "1.2.3 Basic OS Hardening"
                }
              ]
            },
            {
              "name": "1.3 Security Principles",
              "children": [
                {
                  "name": "1.3.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.3.2 Risk Management"
                },
                {
                  "name": "1.3.3 Security Policies and Procedures"
                },
                {
                  "name": "1.3.4 Project: Basic Network Security Assessment (using Nmap)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Security Concepts",
          "children": [
            {
              "name": "2.1 Cryptography",
              "children": [
                {
                  "name": "2.1.1 Symmetric and Asymmetric Encryption"
                },
                {
                  "name": "2.1.2 Hashing Algorithms"
                },
                {
                  "name": "2.1.3 Digital Signatures"
                }
              ]
            },
            {
              "name": "2.2 Threats and Vulnerabilities",
              "children": [
                {
                  "name": "2.2.1 Common Attack Vectors (Phishing, Malware, SQL Injection)"
                },
                {
                  "name": "2.2.2 Vulnerability Scanning (using Nessus or OpenVAS)"
                },
                {
                  "name": "2.2.3 OWASP Top 10"
                }
              ]
            },
            {
              "name": "2.3 Security Auditing",
              "children": [
                {
                  "name": "2.3.1 Log Analysis"
                },
                {
                  "name": "2.3.2 Security Information and Event Management (SIEM)"
                },
                {
                  "name": "2.3.3 Project: Analyze Security Logs for suspicious activities"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Specialized Areas",
          "children": [
            {
              "name": "3.1 Ethical Hacking & Penetration Testing",
              "children": [
                {
                  "name": "3.1.1 Reconnaissance"
                },
                {
                  "name": "3.1.2 Vulnerability Assessment"
                },
                {
                  "name": "3.1.3 Exploitation"
                },
                {
                  "name": "3.1.4 Reporting"
                },
                {
                  "name": "3.1.5 Project: Plan and execute a simulated penetration test on a virtual machine"
                }
              ]
            },
            {
              "name": "3.2 Incident Response",
              "children": [
                {
                  "name": "3.2.1 Incident Handling Phases"
                },
                {
                  "name": "3.2.2 Forensics"
                },
                {
                  "name": "3.2.3 Malware Analysis"
                }
              ]
            },
            {
              "name": "3.3 Cloud Security",
              "children": [
                {
                  "name": "3.3.1 Cloud Security Models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "3.3.2 Cloud Security Threats"
                },
                {
                  "name": "3.3.3 Cloud Security Best Practices"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Advanced Topics",
          "children": [
            {
              "name": "4.1 Secure Coding Practices",
              "children": [
                {
                  "name": "4.1.1 Input Validation"
                },
                {
                  "name": "4.1.2 Authentication and Authorization"
                },
                {
                  "name": "4.1.3 Session Management"
                }
              ]
            },
            {
              "name": "4.2 Blockchain Security",
              "children": [
                {
                  "name": "4.2.1 Smart Contract Vulnerabilities"
                },
                {
                  "name": "4.2.2 Consensus Mechanisms"
                },
                {
                  "name": "4.2.3 Cryptocurrency Security"
                }
              ]
            },
            {
              "name": "4.3 Artificial Intelligence in Cybersecurity",
              "children": [
                {
                  "name": "4.3.1 Threat Detection using AI/ML"
                },
                {
                  "name": "4.3.2 AI-powered security tools"
                },
                {
                  "name": "4.3.3 Ethical considerations of AI in cybersecurity"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Certifications & Career Paths",
          "children": [
            {
              "name": "5.1 CompTIA Security+",
              "children": [
                {
                  "name": "5.1.1 Exam Preparation Resources"
                },
                {
                  "name": "5.1.2 Job opportunities after certification"
                }
              ]
            },
            {
              "name": "5.2 Certified Ethical Hacker (CEH)",
              "children": [
                {
                  "name": "5.2.1 Exam Preparation Resources"
                },
                {
                  "name": "5.2.2 Job opportunities after certification"
                }
              ]
            },
            {
              "name": "5.3 Other relevant certifications (CISSP, OSCP etc.)",
              "children": [
                {
                  "name": "5.3.1  Research and select certifications based on career goals"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a cyber security expert",
    "output": {
      "name": "I want to become a cybersecurity expert",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Networking Fundamentals (TCP/IP, OSI model, subnetting)"
                },
                {
                  "name": "1.1.2 Operating Systems (Windows, Linux, basic command line)"
                },
                {
                  "name": "1.1.3 Basic Programming (Python scripting for automation)"
                },
                {
                  "name": "1.1.4 Project: Build a simple network and configure basic firewall rules"
                }
              ]
            },
            {
              "name": "1.2 Security Principles",
              "children": [
                {
                  "name": "1.2.1 Confidentiality, Integrity, Availability (CIA triad)"
                },
                {
                  "name": "1.2.2 Risk management and assessment"
                },
                {
                  "name": "1.2.3 Security policies and procedures"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Cybersecurity Domains",
          "children": [
            {
              "name": "2.1 Network Security",
              "children": [
                {
                  "name": "2.1.1 Firewalls (types, configuration, troubleshooting)"
                },
                {
                  "name": "2.1.2 Intrusion Detection/Prevention Systems (IDS/IPS)"
                },
                {
                  "name": "2.1.3 VPNs and Tunneling"
                },
                {
                  "name": "2.1.4 Project: Setup a home network with firewall and IDS/IPS"
                }
              ]
            },
            {
              "name": "2.2 Cryptography",
              "children": [
                {
                  "name": "2.2.1 Symmetric and asymmetric encryption"
                },
                {
                  "name": "2.2.2 Hashing algorithms"
                },
                {
                  "name": "2.2.3 Digital certificates and PKI"
                },
                {
                  "name": "2.2.4 Project: Implement basic encryption/decryption using Python"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Topics",
          "children": [
            {
              "name": "3.1 Ethical Hacking & Penetration Testing",
              "children": [
                {
                  "name": "3.1.1 Reconnaissance techniques"
                },
                {
                  "name": "3.1.2 Vulnerability scanning and exploitation"
                },
                {
                  "name": "3.1.3 Penetration testing methodologies (OWASP, PTES)"
                },
                {
                  "name": "3.1.4 Project: Perform a penetration test on a vulnerable virtual machine (using tools like Metasploit)"
                }
              ]
            },
            {
              "name": "3.2 Incident Response",
              "children": [
                {
                  "name": "3.2.1 Incident handling lifecycle"
                },
                {
                  "name": "3.2.2 Malware analysis"
                },
                {
                  "name": "3.2.3 Digital forensics"
                },
                {
                  "name": "3.2.4 Project: Simulate an incident response scenario and document the process"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialization & Cloud Security",
          "children": [
            {
              "name": "4.1 Cloud Security",
              "children": [
                {
                  "name": "4.1.1 Cloud security models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "4.1.2 Cloud security controls (IAM, encryption, access control)"
                },
                {
                  "name": "4.1.3 Cloud security threats and vulnerabilities"
                }
              ]
            },
            {
              "name": "4.2 Choose a Specialization",
              "children": [
                {
                  "name": "4.2.1  Security Analyst"
                },
                {
                  "name": "4.2.2 Penetration Tester"
                },
                {
                  "name": "4.2.3 Security Engineer"
                },
                {
                  "name": "4.2.4  Cloud Security Engineer"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning and Certifications",
          "children": [
            {
              "name": "5.1 Certifications",
              "children": [
                {
                  "name": "5.1.1 CompTIA Security+"
                },
                {
                  "name": "5.1.2 Certified Ethical Hacker (CEH)"
                },
                {
                  "name": "5.1.3 Offensive Security Certified Professional (OSCP)"
                },
                {
                  "name": "5.1.4 AWS Certified Security - Specialty"
                }
              ]
            },
            {
              "name": "5.2  Networking & Community",
              "children": [
                {
                  "name": "5.2.1 Attend conferences and workshops"
                },
                {
                  "name": "5.2.2 Join online communities and forums"
                },
                {
                  "name": "5.2.3 Stay updated with industry news and trends"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a ux design",
    "output": {
      "name": "Become a UX Designer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Design Principles",
              "children": [
                {
                  "name": "1.1.1 User-centered design principles"
                },
                {
                  "name": "1.1.2 Gestalt principles"
                },
                {
                  "name": "1.1.3 Accessibility guidelines (WCAG)"
                }
              ]
            },
            {
              "name": "1.2 UX Research Methods",
              "children": [
                {
                  "name": "1.2.1 User interviews"
                },
                {
                  "name": "1.2.2 Surveys and questionnaires"
                },
                {
                  "name": "1.2.3 Usability testing (moderated & unmoderated)"
                },
                {
                  "name": "1.2.4 Competitive analysis"
                }
              ]
            },
            {
              "name": "1.3 Introduction to UX Tools",
              "children": [
                {
                  "name": "1.3.1 Figma (basics)"
                },
                {
                  "name": "1.3.2 Adobe XD (basics)"
                },
                {
                  "name": "1.3.3 Miro (for collaboration and brainstorming)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core UX Skills",
          "children": [
            {
              "name": "2.1 Information Architecture",
              "children": [
                {
                  "name": "2.1.1 Card sorting"
                },
                {
                  "name": "2.1.2 Sitemaps and wireframing"
                },
                {
                  "name": "2.1.3 Navigation design"
                }
              ]
            },
            {
              "name": "2.2 Interaction Design",
              "children": [
                {
                  "name": "2.2.1 User flows"
                },
                {
                  "name": "2.2.2 Prototyping (low-fidelity and high-fidelity)"
                },
                {
                  "name": "2.2.3 Interaction patterns"
                }
              ]
            },
            {
              "name": "2.3 Visual Design Basics",
              "children": [
                {
                  "name": "2.3.1 Typography"
                },
                {
                  "name": "2.3.2 Color theory"
                },
                {
                  "name": "2.3.3 Layout and composition"
                },
                {
                  "name": "2.3.4 Project: Design a simple landing page"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced UX Practices",
          "children": [
            {
              "name": "3.1 User Research Analysis & Synthesis",
              "children": [
                {
                  "name": "3.1.1 Affinity mapping"
                },
                {
                  "name": "3.1.2 Persona development"
                },
                {
                  "name": "3.1.3 Journey mapping"
                }
              ]
            },
            {
              "name": "3.2 Advanced Prototyping & Testing",
              "children": [
                {
                  "name": "3.2.1 Interactive prototyping (Figma, Adobe XD)"
                },
                {
                  "name": "3.2.2 A/B testing"
                },
                {
                  "name": "3.2.3 Heuristic evaluation"
                },
                {
                  "name": "3.2.4 Project: Conduct a usability test on a prototype"
                }
              ]
            },
            {
              "name": "3.3 Design Systems",
              "children": [
                {
                  "name": "3.3.1 Component libraries"
                },
                {
                  "name": "3.3.2 Style guides"
                },
                {
                  "name": "3.3.3 Design tokens"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Portfolio & Job Search",
          "children": [
            {
              "name": "4.1 Building a Strong Portfolio",
              "children": [
                {
                  "name": "4.1.1 Case studies"
                },
                {
                  "name": "4.1.2 Showcasing your process"
                },
                {
                  "name": "4.1.3 Presenting your work effectively"
                }
              ]
            },
            {
              "name": "4.2 Networking & Job Applications",
              "children": [
                {
                  "name": "4.2.1 LinkedIn"
                },
                {
                  "name": "4.2.2 Online communities (e.g., UX Collective, Dribbble)"
                },
                {
                  "name": "4.2.3 Job boards (e.g., Indeed, LinkedIn)"
                },
                {
                  "name": "4.2.4 Interview preparation"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continued Learning",
          "children": [
            {
              "name": "5.1 Stay Updated with Industry Trends",
              "children": [
                {
                  "name": "5.1.1 Following UX blogs and publications"
                },
                {
                  "name": "5.1.2 Attending UX conferences and workshops"
                },
                {
                  "name": "5.1.3 Engaging in online learning platforms (e.g., Udemy, Coursera)"
                }
              ]
            },
            {
              "name": "5.2 Specialize in a UX Niche",
              "children": [
                {
                  "name": "5.2.1 UX Research"
                },
                {
                  "name": "5.2.2 UX Writing"
                },
                {
                  "name": "5.2.3 Interaction Design"
                },
                {
                  "name": "5.2.4 UI Design"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a MLOps engineer",
    "output": {
      "name": "Become an MLOps Engineer",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Software Engineering Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Version Control (Git)"
                },
                {
                  "name": "1.1.2 CI/CD Pipelines (Jenkins, GitLab CI, CircleCI)"
                },
                {
                  "name": "1.1.3 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "1.1.4 Project: Build a CI/CD pipeline for a simple Python application."
                }
              ]
            },
            {
              "name": "1.2 Cloud Computing",
              "children": [
                {
                  "name": "1.2.1 Cloud Platforms (AWS, Azure, GCP) - Basics"
                },
                {
                  "name": "1.2.2 Cloud Storage Services (S3, Azure Blob Storage, Google Cloud Storage)"
                },
                {
                  "name": "1.2.3 Compute Instances (EC2, Azure VMs, Google Compute Engine)"
                },
                {
                  "name": "1.2.4 Project: Deploy a simple web application on a chosen cloud platform."
                }
              ]
            },
            {
              "name": "1.3 Python Programming for MLOps",
              "children": [
                {
                  "name": "1.3.1 Python Basics (Data Structures, Control Flow)"
                },
                {
                  "name": "1.3.2 Package Management (pip, conda)"
                },
                {
                  "name": "1.3.3 Working with APIs"
                },
                {
                  "name": "1.3.4 Project: Automate a simple data processing task using Python scripts."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Machine Learning Algorithms",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (SVM, Decision Trees, Random Forest)"
                },
                {
                  "name": "2.1.3 Clustering (K-means, DBSCAN)"
                },
                {
                  "name": "2.1.4 Project: Build and evaluate different machine learning models on a dataset."
                }
              ]
            },
            {
              "name": "2.2 Model Evaluation Metrics",
              "children": [
                {
                  "name": "2.2.1 Precision, Recall, F1-score"
                },
                {
                  "name": "2.2.2 ROC AUC"
                },
                {
                  "name": "2.2.3 Confusion Matrix"
                },
                {
                  "name": "2.2.4 Project: Evaluate model performance using various metrics."
                }
              ]
            },
            {
              "name": "2.3 Model Deployment & Serving",
              "children": [
                {
                  "name": "2.3.1 REST APIs"
                },
                {
                  "name": "2.3.2 Model Serialization (Pickle, joblib)"
                },
                {
                  "name": "2.3.3 Deploying models using Flask/FastAPI"
                },
                {
                  "name": "2.3.4 Project: Deploy a trained model as a REST API using Flask/FastAPI."
                }
              ]
            }
          ]
        },
        {
          "name": "3. MLOps Practices",
          "children": [
            {
              "name": "3.1 Data Version Control (DVC)",
              "children": [
                {
                  "name": "3.1.1 Data Versioning Concepts"
                },
                {
                  "name": "3.1.2 Using DVC for managing large datasets"
                },
                {
                  "name": "3.1.3 Experiment Tracking"
                },
                {
                  "name": "3.1.4 Project: Manage a dataset's version using DVC."
                }
              ]
            },
            {
              "name": "3.2 Model Monitoring and Retraining",
              "children": [
                {
                  "name": "3.2.1 Model Drift Detection"
                },
                {
                  "name": "3.2.2 Model Performance Monitoring"
                },
                {
                  "name": "3.2.3 Automated Retraining Pipelines"
                },
                {
                  "name": "3.2.4 Project: Set up basic model monitoring and alerting."
                }
              ]
            },
            {
              "name": "3.3 MLOps Platforms (MLflow, Kubeflow)",
              "children": [
                {
                  "name": "3.3.1 MLflow for Experiment Tracking and Model Deployment"
                },
                {
                  "name": "3.3.2 Kubeflow for managing ML workloads on Kubernetes"
                },
                {
                  "name": "3.3.3 Choosing the right platform for your needs"
                },
                {
                  "name": "3.3.4 Project: Use MLflow to track experiments and deploy a model."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced MLOps Concepts",
          "children": [
            {
              "name": "4.1 Scalable ML Systems",
              "children": [
                {
                  "name": "4.1.1 Distributed Training"
                },
                {
                  "name": "4.1.2 Scaling Model Serving"
                },
                {
                  "name": "4.1.3 Serverless Architectures for ML"
                },
                {
                  "name": "4.1.4 Project: Implement a basic distributed training pipeline."
                }
              ]
            },
            {
              "name": "4.2 Security in MLOps",
              "children": [
                {
                  "name": "4.2.1 Model Security and Privacy"
                },
                {
                  "name": "4.2.2 Data Security and Access Control"
                },
                {
                  "name": "4.2.3 Infrastructure Security"
                },
                {
                  "name": "4.2.4 Project: Implement basic security measures in an MLOps pipeline."
                }
              ]
            },
            {
              "name": "4.3 Observability and Logging",
              "children": [
                {
                  "name": "4.3.1 Monitoring metrics and logs"
                },
                {
                  "name": "4.3.2 Alerting and notification systems"
                },
                {
                  "name": "4.3.3 Debugging and troubleshooting"
                },
                {
                  "name": "4.3.4 Project: Set up comprehensive logging and monitoring for an ML pipeline."
                }
              ]
            }
          ]
        },
        {
          "name": "5. Real-World Applications and Case Studies",
          "children": [
            {
              "name": "5.1 Case Study 1: Recommender System",
              "children": [
                {
                  "name": "5.1.1 Deployment and Monitoring of a Recommender System"
                },
                {
                  "name": "5.1.2 A/B testing of different model versions"
                }
              ]
            },
            {
              "name": "5.2 Case Study 2: Fraud Detection",
              "children": [
                {
                  "name": "5.2.1 Real-time model serving and monitoring for Fraud Detection"
                },
                {
                  "name": "5.2.2 Dealing with imbalanced datasets and model performance challenges"
                }
              ]
            },
            {
              "name": "5.3 Case Study 3: Image Classification",
              "children": [
                {
                  "name": "5.3.1 Deploying a deep learning model for Image Classification"
                },
                {
                  "name": "5.3.2 Optimizing model performance for resource constraints"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a product manager",
    "output": {
      "name": "I Want to Become a Product Manager",
      "children": [
        {
          "name": "1. Foundation: Product Management Fundamentals",
          "children": [
            {
              "name": "1.1 Core Product Concepts",
              "children": [
                {
                  "name": "1.1.1 Defining Product Vision & Strategy"
                },
                {
                  "name": "1.1.2 Understanding Target Market & Customer Needs"
                },
                {
                  "name": "1.1.3 Product Life Cycle & Go-to-Market Strategy"
                }
              ]
            },
            {
              "name": "1.2 Agile & Lean Methodologies",
              "children": [
                {
                  "name": "1.2.1 Agile Principles & Scrum Framework"
                },
                {
                  "name": "1.2.2 Lean Startup Methodology & MVP Development"
                },
                {
                  "name": "1.2.3 Practical Exercise: Plan a Sprint for a Fictional Product"
                }
              ]
            },
            {
              "name": "1.3 Product Roadmap & Prioritization",
              "children": [
                {
                  "name": "1.3.1 Creating a Product Roadmap"
                },
                {
                  "name": "1.3.2 Prioritization Frameworks (RICE Scoring, MoSCoW Method)"
                },
                {
                  "name": "1.3.3 Practical Exercise: Prioritize Features for a To-Do List App"
                }
              ]
            }
          ]
        },
        {
          "name": "2. User Research & Market Analysis",
          "children": [
            {
              "name": "2.1 User Research Methods",
              "children": [
                {
                  "name": "2.1.1 User Interviews & Surveys"
                },
                {
                  "name": "2.1.2 Usability Testing & A/B Testing"
                },
                {
                  "name": "2.1.3 Competitive Analysis"
                }
              ]
            },
            {
              "name": "2.2 Market Research & Analysis",
              "children": [
                {
                  "name": "2.2.1 Market Sizing & Segmentation"
                },
                {
                  "name": "2.2.2 SWOT Analysis"
                },
                {
                  "name": "2.2.3  Practical Exercise: Conduct a Competitive Analysis of a SaaS Product"
                }
              ]
            },
            {
              "name": "2.3 Data Analysis & Metrics",
              "children": [
                {
                  "name": "2.3.1 Key Performance Indicators (KPIs) for Product Success"
                },
                {
                  "name": "2.3.2 Data Visualization & Reporting"
                },
                {
                  "name": "2.3.3 Practical Exercise: Analyze a sample product dataset and identify key trends"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Product Design & Development",
          "children": [
            {
              "name": "3.1 User Stories & User Flows",
              "children": [
                {
                  "name": "3.1.1 Writing Effective User Stories"
                },
                {
                  "name": "3.1.2 Creating User Flows & Wireframes"
                }
              ]
            },
            {
              "name": "3.2 Prototyping & Design Thinking",
              "children": [
                {
                  "name": "3.2.1 Low-Fidelity & High-Fidelity Prototyping"
                },
                {
                  "name": "3.2.2 Design Thinking Process"
                },
                {
                  "name": "3.2.3 Practical Exercise: Create a prototype for a mobile app feature"
                }
              ]
            },
            {
              "name": "3.3 Collaboration & Communication",
              "children": [
                {
                  "name": "3.3.1 Working with Engineering & Design Teams"
                },
                {
                  "name": "3.3.2 Effective Communication Strategies"
                },
                {
                  "name": "3.3.3 Project Management Tools (Jira, Asana)"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Product Launch & Iteration",
          "children": [
            {
              "name": "4.1 Go-to-Market Strategy",
              "children": [
                {
                  "name": "4.1.1 Marketing & Sales Alignment"
                },
                {
                  "name": "4.1.2 Launch Plan & Execution"
                }
              ]
            },
            {
              "name": "4.2 Post-Launch Analysis & Iteration",
              "children": [
                {
                  "name": "4.2.1 Monitoring KPIs & User Feedback"
                },
                {
                  "name": "4.2.2 A/B Testing and Data-driven decisions"
                },
                {
                  "name": "4.2.3  Iterative Development Cycle"
                }
              ]
            },
            {
              "name": "4.3 Product Growth & Scaling",
              "children": [
                {
                  "name": "4.3.1  Growth Hacking Techniques"
                },
                {
                  "name": "4.3.2  Scaling product development and operations"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Skill Building",
          "children": [
            {
              "name": "5.1 Product Strategy & Vision",
              "children": [
                {
                  "name": "5.1.1 Developing a long-term product vision"
                },
                {
                  "name": "5.1.2 Strategic decision making and prioritization"
                }
              ]
            },
            {
              "name": "5.2 Leading Product Teams",
              "children": [
                {
                  "name": "5.2.1 Team management and motivation"
                },
                {
                  "name": "5.2.2 Conflict resolution and negotiation"
                }
              ]
            },
            {
              "name": "5.3  Building a Personal Brand",
              "children": [
                {
                  "name": "5.3.1 Networking & Industry Events"
                },
                {
                  "name": "5.3.2 Building your online presence (LinkedIn, portfolio)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn ux design",
    "output": {
      "name": "i want to learn UX design",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core UX Concepts",
              "children": [
                {
                  "name": "1.1.1 User-centered design principles"
                },
                {
                  "name": "1.1.2 UX vs. UI: Key differences"
                },
                {
                  "name": "1.1.3 The design thinking process"
                }
              ]
            },
            {
              "name": "1.2 User Research Methods",
              "children": [
                {
                  "name": "1.2.1 User interviews and surveys"
                },
                {
                  "name": "1.2.2 Usability testing (moderated & unmoderated)"
                },
                {
                  "name": "1.2.3 Persona and user journey mapping"
                },
                {
                  "name": "1.2.4  Project: Conduct user interviews for a chosen app"
                }
              ]
            },
            {
              "name": "1.3 Information Architecture",
              "children": [
                {
                  "name": "1.3.1 Card sorting and tree testing"
                },
                {
                  "name": "1.3.2 Sitemaps and wireframing"
                },
                {
                  "name": "1.3.3 Navigation design and information hierarchy"
                },
                {
                  "name": "1.3.4 Project: Create a sitemap and wireframes for an e-commerce website"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Interaction Design",
          "children": [
            {
              "name": "2.1 Interaction Design Principles",
              "children": [
                {
                  "name": "2.1.1 Affordances and feedback"
                },
                {
                  "name": "2.1.2 Mental models and cognitive load"
                },
                {
                  "name": "2.1.3 Usability heuristics (Nielsen's 10 heuristics)"
                }
              ]
            },
            {
              "name": "2.2 Prototyping",
              "children": [
                {
                  "name": "2.2.1 Low-fidelity prototyping (paper, whiteboard)"
                },
                {
                  "name": "2.2.2 Mid-fidelity prototyping (Figma, Adobe XD)"
                },
                {
                  "name": "2.2.3 High-fidelity prototyping (interactive prototypes)"
                },
                {
                  "name": "2.2.4 Project: Create a mid-fidelity prototype for a mobile app"
                }
              ]
            },
            {
              "name": "2.3 User Flows and Navigation",
              "children": [
                {
                  "name": "2.3.1 Creating user flows for different scenarios"
                },
                {
                  "name": "2.3.2 Designing intuitive navigation systems"
                },
                {
                  "name": "2.3.3 Information architecture optimization"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Visual Design",
          "children": [
            {
              "name": "3.1 Visual Hierarchy and Layout",
              "children": [
                {
                  "name": "3.1.1 Principles of visual design (contrast, proximity, alignment, repetition)"
                },
                {
                  "name": "3.1.2 Grid systems and layout techniques"
                },
                {
                  "name": "3.1.3 Typography and readability"
                }
              ]
            },
            {
              "name": "3.2 Color Theory and Branding",
              "children": [
                {
                  "name": "3.2.1 Color palettes and their emotional impact"
                },
                {
                  "name": "3.2.2 Brand guidelines and consistency"
                },
                {
                  "name": "3.2.3 Accessibility considerations (color contrast)"
                }
              ]
            },
            {
              "name": "3.3 UI Design Tools",
              "children": [
                {
                  "name": "3.3.1 Figma, Adobe XD, Sketch (choose one to focus on)"
                },
                {
                  "name": "3.3.2 Mastering basic UI design elements (buttons, forms, icons)"
                },
                {
                  "name": "3.3.3 Project: Design a landing page using chosen UI tool"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced UX Topics",
          "children": [
            {
              "name": "4.1 Accessibility and Inclusivity",
              "children": [
                {
                  "name": "4.1.1 WCAG guidelines and accessibility best practices"
                },
                {
                  "name": "4.1.2 Designing for users with disabilities"
                },
                {
                  "name": "4.1.3 Inclusive design principles"
                }
              ]
            },
            {
              "name": "4.2 UX Writing and Microcopy",
              "children": [
                {
                  "name": "4.2.1 Crafting clear and concise microcopy"
                },
                {
                  "name": "4.2.2 Designing effective error messages"
                },
                {
                  "name": "4.2.3  Project: Write microcopy for a specific app feature"
                }
              ]
            },
            {
              "name": "4.3 UX Metrics and Analytics",
              "children": [
                {
                  "name": "4.3.1 Key performance indicators (KPIs) for UX"
                },
                {
                  "name": "4.3.2 Analyzing user data to improve design"
                },
                {
                  "name": "4.3.3 A/B testing and iterative design"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio and Job Search",
          "children": [
            {
              "name": "5.1 Building a UX Portfolio",
              "children": [
                {
                  "name": "5.1.1 Showcasing your best work"
                },
                {
                  "name": "5.1.2  Highlighting your design process"
                },
                {
                  "name": "5.1.3 Creating a compelling online presence"
                }
              ]
            },
            {
              "name": "5.2  Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1 Networking and building connections"
                },
                {
                  "name": "5.2.2 Tailoring your resume and cover letter"
                },
                {
                  "name": "5.2.3 Preparing for UX design interviews"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn python",
    "output": {
      "name": "i want to learn python",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types"
                },
                {
                  "name": "1.1.2 Operators and Expressions"
                },
                {
                  "name": "1.1.3 Control Flow (if-else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Lists and Tuples"
                },
                {
                  "name": "1.2.2 Dictionaries and Sets"
                },
                {
                  "name": "1.2.3 Practice: Build a simple address book"
                }
              ]
            },
            {
              "name": "1.3 Functions",
              "children": [
                {
                  "name": "1.3.1 Defining and Calling Functions"
                },
                {
                  "name": "1.3.2 Function Arguments and Return Values"
                },
                {
                  "name": "1.3.3 Scope and Lifetime of Variables"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Python",
          "children": [
            {
              "name": "2.1 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "2.1.1 Classes and Objects"
                },
                {
                  "name": "2.1.2 Inheritance and Polymorphism"
                },
                {
                  "name": "2.1.3 Practice: Create a simple game using classes"
                }
              ]
            },
            {
              "name": "2.2 Modules and Packages",
              "children": [
                {
                  "name": "2.2.1 Importing and Using Modules"
                },
                {
                  "name": "2.2.2 Creating Your Own Modules"
                },
                {
                  "name": "2.2.3 Exploring the Standard Library"
                }
              ]
            },
            {
              "name": "2.3 File Handling",
              "children": [
                {
                  "name": "2.3.1 Reading and Writing Files"
                },
                {
                  "name": "2.3.2 Working with Different File Formats"
                },
                {
                  "name": "2.3.3 Practice: Build a simple file logger"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Python",
          "children": [
            {
              "name": "3.1 Exception Handling",
              "children": [
                {
                  "name": "3.1.1 try-except-finally blocks"
                },
                {
                  "name": "3.1.2 Raising Exceptions"
                },
                {
                  "name": "3.1.3 Custom Exceptions"
                }
              ]
            },
            {
              "name": "3.2 Generators and Iterators",
              "children": [
                {
                  "name": "3.2.1 Understanding Generators"
                },
                {
                  "name": "3.2.2 Implementing Iterators"
                },
                {
                  "name": "3.2.3 Practice: Create a generator for Fibonacci numbers"
                }
              ]
            },
            {
              "name": "3.3 Decorators",
              "children": [
                {
                  "name": "3.3.1 Defining and Using Decorators"
                },
                {
                  "name": "3.3.2 Decorator Arguments"
                },
                {
                  "name": "3.3.3 Practice: Create a decorator for timing functions"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Working with External Libraries",
          "children": [
            {
              "name": "4.1 Web Development (Flask/Django)",
              "children": [
                {
                  "name": "4.1.1 Setting up a development environment"
                },
                {
                  "name": "4.1.2 Building a simple web application"
                },
                {
                  "name": "4.1.3 Deploying the application"
                }
              ]
            },
            {
              "name": "4.2 Data Science (NumPy, Pandas)",
              "children": [
                {
                  "name": "4.2.1 NumPy arrays and operations"
                },
                {
                  "name": "4.2.2 Pandas DataFrames and data manipulation"
                },
                {
                  "name": "4.2.3 Practice: Analyze a dataset using Pandas"
                }
              ]
            },
            {
              "name": "4.3 Data Visualization (Matplotlib, Seaborn)",
              "children": [
                {
                  "name": "4.3.1 Creating basic plots"
                },
                {
                  "name": "4.3.2 Customizing plots"
                },
                {
                  "name": "4.3.3 Practice: Visualize data from a dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Projects and Practice",
          "children": [
            {
              "name": "5.1  Personal Project Ideas",
              "children": [
                {
                  "name": "5.1.1 Simple Text-Based Game"
                },
                {
                  "name": "5.1.2 Web Scraper"
                },
                {
                  "name": "5.1.3  Data Analysis Application"
                }
              ]
            },
            {
              "name": "5.2 Contributing to Open Source",
              "children": [
                {
                  "name": "5.2.1 Finding suitable projects"
                },
                {
                  "name": "5.2.2 Understanding contribution guidelines"
                },
                {
                  "name": "5.2.3 Submitting pull requests"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a AI engineer",
    "output": {
      "name": "i want to become an AI engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus (Differential and Integral)"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Fundamentals (Data structures, control flow)"
                },
                {
                  "name": "1.2.2 Object-Oriented Programming in Python"
                },
                {
                  "name": "1.2.3 Version Control (Git)"
                }
              ]
            },
            {
              "name": "1.3 Data Structures and Algorithms",
              "children": [
                {
                  "name": "1.3.1 Big O Notation"
                },
                {
                  "name": "1.3.2 Common Data Structures (Arrays, Lists, Trees, Graphs)"
                },
                {
                  "name": "1.3.3 Algorithm Design and Analysis (Sorting, Searching)"
                },
                {
                  "name": "1.3.4 Project: Implement a simple search algorithm"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Linear Regression"
                },
                {
                  "name": "2.1.2 Logistic Regression"
                },
                {
                  "name": "2.1.3 Decision Trees"
                },
                {
                  "name": "2.1.4 Project: Build a simple linear regression model to predict house prices"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "2.2.3 Project: Perform customer segmentation using K-means clustering"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation and Selection",
              "children": [
                {
                  "name": "2.3.1 Bias-Variance Tradeoff"
                },
                {
                  "name": "2.3.2 Cross-Validation"
                },
                {
                  "name": "2.3.3 Performance Metrics (Accuracy, Precision, Recall, F1-score)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptrons"
                },
                {
                  "name": "3.1.2 Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "3.1.3 Backpropagation"
                },
                {
                  "name": "3.1.4 Project: Build a simple MLP for image classification"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.2.1 CNN Architecture"
                },
                {
                  "name": "3.2.2 Convolutional and Pooling Layers"
                },
                {
                  "name": "3.2.3 Project: Build a CNN for image classification using a pre-trained model (e.g., ResNet, VGG)"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.3.1 LSTMs and GRUs"
                },
                {
                  "name": "3.3.2 Applications in NLP"
                },
                {
                  "name": "3.3.3 Project: Build an RNN for text generation or sentiment analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4. AI Engineering Practices",
          "children": [
            {
              "name": "4.1 Cloud Computing (AWS, GCP, Azure)",
              "children": [
                {
                  "name": "4.1.1 Setting up cloud environments"
                },
                {
                  "name": "4.1.2 Deploying ML models"
                },
                {
                  "name": "4.1.3 Managing cloud resources"
                }
              ]
            },
            {
              "name": "4.2 MLOps",
              "children": [
                {
                  "name": "4.2.1 CI/CD for ML"
                },
                {
                  "name": "4.2.2 Model Monitoring and Retraining"
                },
                {
                  "name": "4.2.3 Experiment Tracking"
                }
              ]
            },
            {
              "name": "4.3 Big Data Technologies",
              "children": [
                {
                  "name": "4.3.1 Spark"
                },
                {
                  "name": "4.3.2 Hadoop"
                },
                {
                  "name": "4.3.3 Data Warehousing"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization and Advanced Topics",
          "children": [
            {
              "name": "5.1 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "5.1.1 Transformers"
                },
                {
                  "name": "5.1.2 Word Embeddings"
                },
                {
                  "name": "5.1.3 Named Entity Recognition"
                }
              ]
            },
            {
              "name": "5.2 Computer Vision",
              "children": [
                {
                  "name": "5.2.1 Object Detection"
                },
                {
                  "name": "5.2.2 Image Segmentation"
                },
                {
                  "name": "5.2.3 Generative Models (GANs, VAEs)"
                }
              ]
            },
            {
              "name": "5.3 Reinforcement Learning",
              "children": [
                {
                  "name": "5.3.1 Q-learning"
                },
                {
                  "name": "5.3.2 Deep Q-Networks (DQNs)"
                },
                {
                  "name": "5.3.3 Policy Gradients"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn game development",
    "output": {
      "name": "i want to learn game development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures",
                  "children": [
                    {
                      "name": "1.1.3.1 Practice: Create a simple calculator function"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.2 Introduction to Game Math",
              "children": [
                {
                  "name": "1.2.1 Vectors and Matrices"
                },
                {
                  "name": "1.2.2 Trigonometry (sin, cos, tan)"
                },
                {
                  "name": "1.2.3 Transformations (rotation, scaling, translation)"
                }
              ]
            },
            {
              "name": "1.3 Choosing a Game Engine",
              "children": [
                {
                  "name": "1.3.1 Researching Engines (Unity, Unreal Engine, Godot)"
                },
                {
                  "name": "1.3.2 Setting up your chosen engine"
                },
                {
                  "name": "1.3.3  Completing the engine's tutorial"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Mechanics & Design",
          "children": [
            {
              "name": "2.1 Game Design Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Game loops and states"
                },
                {
                  "name": "2.1.2 Level design principles"
                },
                {
                  "name": "2.1.3 Game balancing and difficulty curves"
                }
              ]
            },
            {
              "name": "2.2 Implementing Core Mechanics",
              "children": [
                {
                  "name": "2.2.1 Player input and movement"
                },
                {
                  "name": "2.2.2 Collision detection"
                },
                {
                  "name": "2.2.3 Simple enemy AI (e.g., pathfinding)"
                },
                {
                  "name": "2.2.4 Project: Create a simple pong clone"
                }
              ]
            },
            {
              "name": "2.3 Game State Management",
              "children": [
                {
                  "name": "2.3.1 Using scenes or levels"
                },
                {
                  "name": "2.3.2 Managing player data"
                },
                {
                  "name": "2.3.3 Implementing menus and UI"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Graphics and Art",
          "children": [
            {
              "name": "3.1 2D Graphics",
              "children": [
                {
                  "name": "3.1.1 Sprites and animation"
                },
                {
                  "name": "3.1.2 Using a 2D art package (e.g., Aseprite, Piskel)"
                },
                {
                  "name": "3.1.3 Project: Create simple 2D character sprites and animations"
                }
              ]
            },
            {
              "name": "3.2 3D Graphics (If Applicable)",
              "children": [
                {
                  "name": "3.2.1 3D Modeling basics"
                },
                {
                  "name": "3.2.2 Texturing and materials"
                },
                {
                  "name": "3.2.3 Importing 3D assets into your engine"
                }
              ]
            },
            {
              "name": "3.3  UI/UX Design",
              "children": [
                {
                  "name": "3.3.1 Designing intuitive user interfaces"
                },
                {
                  "name": "3.3.2 Implementing UI elements in your engine"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Sound and Audio",
          "children": [
            {
              "name": "4.1 Sound Design Basics",
              "children": [
                {
                  "name": "4.1.1 Choosing sound effects and music"
                },
                {
                  "name": "4.1.2 Understanding sound mixing and mastering (basic)"
                },
                {
                  "name": "4.1.3 Project: Find and implement basic sound effects in your game"
                }
              ]
            },
            {
              "name": "4.2 Integrating Audio into Your Game",
              "children": [
                {
                  "name": "4.2.1 Implementing sound effects using your engine"
                },
                {
                  "name": "4.2.2 Adding music and background audio"
                },
                {
                  "name": "4.2.3 Sound spatialization and effects"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Deployment",
          "children": [
            {
              "name": "5.1 Advanced Game Mechanics",
              "children": [
                {
                  "name": "5.1.1 Physics engines and simulations"
                },
                {
                  "name": "5.1.2 Pathfinding algorithms"
                },
                {
                  "name": "5.1.3 Advanced AI techniques"
                }
              ]
            },
            {
              "name": "5.2 Networking (Multiplayer)",
              "children": [
                {
                  "name": "5.2.1 Introduction to network programming"
                },
                {
                  "name": "5.2.2 Client-server architectures"
                },
                {
                  "name": "5.2.3 Implementing simple multiplayer functionality"
                }
              ]
            },
            {
              "name": "5.3 Game Deployment",
              "children": [
                {
                  "name": "5.3.1 Building and packaging your game for different platforms"
                },
                {
                  "name": "5.3.2 Publishing your game (e.g., itch.io, Steam)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn client side game developer",
    "output": {
      "name": "Client-Side Game Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions, Procedures, Scope"
                }
              ]
            },
            {
              "name": "1.2 Introduction to HTML, CSS, and JavaScript",
              "children": [
                {
                  "name": "1.2.1 HTML Structure and Semantics"
                },
                {
                  "name": "1.2.2 CSS Styling and Layout"
                },
                {
                  "name": "1.2.3 JavaScript Fundamentals (DOM manipulation)"
                },
                {
                  "name": "1.2.4 Project: Simple Interactive Web Page"
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Using GitHub or GitLab"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Development Fundamentals",
          "children": [
            {
              "name": "2.1 Game Loops and Update Cycles",
              "children": [
                {
                  "name": "2.1.1 Understanding Game Loops (Fixed timestep vs. variable timestep)"
                },
                {
                  "name": "2.1.2 Implementing a Basic Game Loop in JavaScript"
                }
              ]
            },
            {
              "name": "2.2 2D Game Engine Fundamentals",
              "children": [
                {
                  "name": "2.2.1 Coordinate Systems and Transformations"
                },
                {
                  "name": "2.2.2 Sprite Animation and Rendering"
                },
                {
                  "name": "2.2.3 Collision Detection (AABB, Circle)"
                }
              ]
            },
            {
              "name": "2.3 Input Handling",
              "children": [
                {
                  "name": "2.3.1 Keyboard and Mouse Input"
                },
                {
                  "name": "2.3.2 Handling Gamepad Input (if applicable)"
                },
                {
                  "name": "2.3.3 Project: Simple 2D Game with Player Control"
                }
              ]
            }
          ]
        },
        {
          "name": "3. JavaScript Game Libraries and Frameworks",
          "children": [
            {
              "name": "3.1 Phaser 3",
              "children": [
                {
                  "name": "3.1.1 Setting up a Phaser 3 Project"
                },
                {
                  "name": "3.1.2 Working with Sprites, Scenes, and Physics"
                },
                {
                  "name": "3.1.3 Project:  Simple Platformer using Phaser 3"
                }
              ]
            },
            {
              "name": "3.2 PixiJS",
              "children": [
                {
                  "name": "3.2.1 Introduction to PixiJS and its features"
                },
                {
                  "name": "3.2.2 Creating and animating sprites"
                },
                {
                  "name": "3.2.3 Handling interactions and events"
                }
              ]
            },
            {
              "name": "3.3  Babylon.js (optional, for 3D)",
              "children": [
                {
                  "name": "3.3.1 Setting up a Babylon.js project"
                },
                {
                  "name": "3.3.2 Working with meshes and materials"
                },
                {
                  "name": "3.3.3 Implementing basic camera controls"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Concepts",
          "children": [
            {
              "name": "4.1 Game State Management",
              "children": [
                {
                  "name": "4.1.1 Implementing Finite State Machines"
                },
                {
                  "name": "4.1.2 Designing Menus and UI"
                }
              ]
            },
            {
              "name": "4.2 Advanced Physics and Animations",
              "children": [
                {
                  "name": "4.2.1 Advanced Collision Detection"
                },
                {
                  "name": "4.2.2 Implementing Realistic Physics"
                },
                {
                  "name": "4.2.3 Skeletal Animation"
                }
              ]
            },
            {
              "name": "4.3 Networking (Optional)",
              "children": [
                {
                  "name": "4.3.1 Introduction to WebSockets"
                },
                {
                  "name": "4.3.2 Building a Simple Multiplayer Game"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Portfolio",
          "children": [
            {
              "name": "5.1 Deploying a Game to a Web Server",
              "children": [
                {
                  "name": "5.1.1 Using services like Netlify or GitHub Pages"
                },
                {
                  "name": "5.1.2 Setting up your own web server (optional)"
                }
              ]
            },
            {
              "name": "5.2 Building a Portfolio",
              "children": [
                {
                  "name": "5.2.1 Showcasing your projects"
                },
                {
                  "name": "5.2.2 Creating a professional online presence"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn java",
    "output": {
      "name": "I want to learn Java",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if-else, loops)"
                },
                {
                  "name": "1.1.3 Input/Output (Scanner, printf)"
                },
                {
                  "name": "1.1.4 Exercise: Simple Calculator"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Encapsulation, Inheritance, Polymorphism"
                },
                {
                  "name": "1.2.3 Exercise: Create a simple Animal class hierarchy"
                }
              ]
            },
            {
              "name": "1.3 Arrays and Collections",
              "children": [
                {
                  "name": "1.3.1 Arrays"
                },
                {
                  "name": "1.3.2 ArrayLists, LinkedLists, Sets, Maps"
                },
                {
                  "name": "1.3.3 Exercise: Implement a student management system using ArrayList"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Java",
          "children": [
            {
              "name": "2.1 Exception Handling",
              "children": [
                {
                  "name": "2.1.1 try-catch blocks"
                },
                {
                  "name": "2.1.2 Custom Exceptions"
                },
                {
                  "name": "2.1.3 Exercise: Implement robust file I/O with exception handling"
                }
              ]
            },
            {
              "name": "2.2 File I/O",
              "children": [
                {
                  "name": "2.2.1 Reading and writing to files"
                },
                {
                  "name": "2.2.2 Working with different file formats"
                },
                {
                  "name": "2.2.3 Exercise: Create a program to read and process data from a CSV file"
                }
              ]
            },
            {
              "name": "2.3 Generics",
              "children": [
                {
                  "name": "2.3.1 Generic classes and methods"
                },
                {
                  "name": "2.3.2 Wildcards"
                },
                {
                  "name": "2.3.3 Exercise: Create a generic data structure"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Java",
          "children": [
            {
              "name": "3.1 Multithreading",
              "children": [
                {
                  "name": "3.1.1 Threads and Runnable"
                },
                {
                  "name": "3.1.2 Synchronization"
                },
                {
                  "name": "3.1.3 Exercise: Create a multithreaded program to download multiple files concurrently"
                }
              ]
            },
            {
              "name": "3.2 Lambda Expressions and Streams",
              "children": [
                {
                  "name": "3.2.1 Lambda expressions"
                },
                {
                  "name": "3.2.2 Functional interfaces"
                },
                {
                  "name": "3.2.3 Streams API"
                },
                {
                  "name": "3.2.4 Exercise: Process a large dataset using streams"
                }
              ]
            },
            {
              "name": "3.3 Java Collections Framework (Advanced)",
              "children": [
                {
                  "name": "3.3.1  Deep dive into different collection types and their use cases"
                },
                {
                  "name": "3.3.2 Custom Comparators and Iterators"
                },
                {
                  "name": "3.3.3 Exercise: Implement a custom collection"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Databases and Frameworks",
          "children": [
            {
              "name": "4.1 JDBC (Java Database Connectivity)",
              "children": [
                {
                  "name": "4.1.1 Connecting to databases"
                },
                {
                  "name": "4.1.2 Executing SQL queries"
                },
                {
                  "name": "4.1.3 Exercise: Create a simple database application"
                }
              ]
            },
            {
              "name": "4.2 Introduction to Spring Framework (Optional)",
              "children": [
                {
                  "name": "4.2.1 Dependency Injection"
                },
                {
                  "name": "4.2.2 Inversion of Control"
                },
                {
                  "name": "4.2.3 Basic Spring Boot Application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Projects",
          "children": [
            {
              "name": "5.1 Small Projects",
              "children": [
                {
                  "name": "5.1.1 To-Do List Application"
                },
                {
                  "name": "5.1.2 Simple Inventory Management System"
                },
                {
                  "name": "5.1.3 Basic Text-Based Game"
                }
              ]
            },
            {
              "name": "5.2 Larger Projects (Capstone)",
              "children": [
                {
                  "name": "5.2.1 Choose a project based on your interest (e.g., E-commerce app, social media platform, etc.)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn git and github",
    "output": {
      "name": "Learn Git and GitHub",
      "children": [
        {
          "name": "1. Git Basics",
          "children": [
            {
              "name": "1.1 Git Installation and Configuration",
              "children": [
                {
                  "name": "1.1.1 Installing Git on your operating system"
                },
                {
                  "name": "1.1.2 Configuring your username and email"
                },
                {
                  "name": "1.1.3 Setting up SSH keys for GitHub"
                }
              ]
            },
            {
              "name": "1.2 Core Git Commands",
              "children": [
                {
                  "name": "1.2.1 `git init`, `git clone`, `git add`"
                },
                {
                  "name": "1.2.2 `git commit`, `git status`, `git log`"
                },
                {
                  "name": "1.2.3 `git push`, `git pull`, `git fetch`"
                },
                {
                  "name": "1.2.4 Practical Exercise: Create a simple project, make changes, and commit them to a local repository."
                }
              ]
            },
            {
              "name": "1.3 Understanding the Git Workflow",
              "children": [
                {
                  "name": "1.3.1 Local vs. Remote repositories"
                },
                {
                  "name": "1.3.2 Working directory, staging area, and repository"
                },
                {
                  "name": "1.3.3 Branching and merging (basic concepts)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. GitHub Fundamentals",
          "children": [
            {
              "name": "2.1 Creating a GitHub Account and Repository",
              "children": [
                {
                  "name": "2.1.1 Signing up for a GitHub account"
                },
                {
                  "name": "2.1.2 Creating a new repository"
                },
                {
                  "name": "2.1.3 Understanding repository settings (public vs. private)"
                }
              ]
            },
            {
              "name": "2.2 Working with Remote Repositories",
              "children": [
                {
                  "name": "2.2.1 Cloning a repository from GitHub"
                },
                {
                  "name": "2.2.2 Pushing local commits to GitHub"
                },
                {
                  "name": "2.2.3 Pulling changes from GitHub"
                },
                {
                  "name": "2.2.4 Practical Exercise: Clone a repository, make changes, commit, and push them to GitHub."
                }
              ]
            },
            {
              "name": "2.3 GitHub Features",
              "children": [
                {
                  "name": "2.3.1 Issues and Pull Requests"
                },
                {
                  "name": "2.3.2 Markdown for README files"
                },
                {
                  "name": "2.3.3 Collaborating on projects using GitHub"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Branching and Merging",
          "children": [
            {
              "name": "3.1 Creating and Switching Branches",
              "children": [
                {
                  "name": "3.1.1 `git branch`, `git checkout`, `git switch`"
                },
                {
                  "name": "3.1.2 Understanding the importance of branches for feature development"
                }
              ]
            },
            {
              "name": "3.2 Merging Branches",
              "children": [
                {
                  "name": "3.2.1 `git merge`"
                },
                {
                  "name": "3.2.2 Resolving merge conflicts"
                },
                {
                  "name": "3.2.3 Practical Exercise: Create a feature branch, make changes, and merge it into the main branch."
                }
              ]
            },
            {
              "name": "3.3 Rebasing (Intermediate)",
              "children": [
                {
                  "name": "3.3.1 `git rebase`"
                },
                {
                  "name": "3.3.2 Understanding the benefits and drawbacks of rebasing"
                },
                {
                  "name": "3.3.3  Practical Exercise: Rebase a feature branch onto the main branch (carefully!)."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Git and GitHub",
          "children": [
            {
              "name": "4.1 Git Workflow Strategies",
              "children": [
                {
                  "name": "4.1.1 Gitflow Workflow"
                },
                {
                  "name": "4.1.2 GitHub Flow"
                }
              ]
            },
            {
              "name": "4.2 Working with Pull Requests",
              "children": [
                {
                  "name": "4.2.1 Creating and reviewing pull requests"
                },
                {
                  "name": "4.2.2 Using pull request comments for collaboration"
                },
                {
                  "name": "4.2.3 Merging pull requests"
                }
              ]
            },
            {
              "name": "4.3 Git Collaboration and Version Control Best Practices",
              "children": [
                {
                  "name": "4.3.1  Managing large projects with Git"
                },
                {
                  "name": "4.3.2  Using GitHub for project management"
                },
                {
                  "name": "4.3.3 Understanding and implementing effective Git branching strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Further Exploration",
          "children": [
            {
              "name": "5.1  GitHub Actions (CI/CD)",
              "children": [
                {
                  "name": "5.1.1 Introduction to GitHub Actions"
                },
                {
                  "name": "5.1.2 Setting up automated workflows"
                }
              ]
            },
            {
              "name": "5.2 Git LFS (Large File Storage)",
              "children": [
                {
                  "name": "5.2.1 Managing large files effectively with Git LFS"
                },
                {
                  "name": "5.2.2 Installing and configuring Git LFS"
                }
              ]
            },
            {
              "name": "5.3  Advanced Git Commands and Techniques",
              "children": [
                {
                  "name": "5.3.1  `git cherry-pick`"
                },
                {
                  "name": "5.3.2  `git bisect`"
                },
                {
                  "name": "5.3.3  `git revert`"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn react",
    "output": {
      "name": "Learn React",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Functions, Arrays, Objects"
                },
                {
                  "name": "1.1.3 DOM Manipulation (basic understanding)"
                }
              ]
            },
            {
              "name": "1.2 Core React Concepts",
              "children": [
                {
                  "name": "1.2.1 Components, JSX"
                },
                {
                  "name": "1.2.2 Props and State"
                },
                {
                  "name": "1.2.3 Rendering elements"
                }
              ]
            },
            {
              "name": "1.3 Setting up a React Development Environment",
              "children": [
                {
                  "name": "1.3.1 Node.js and npm installation"
                },
                {
                  "name": "1.3.2 Create React App (CRA) setup"
                },
                {
                  "name": "1.3.3 Basic project structure understanding"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Building Components",
          "children": [
            {
              "name": "2.1 Component Lifecycle Methods",
              "children": [
                {
                  "name": "2.1.1 Mounting, Updating, Unmounting"
                },
                {
                  "name": "2.1.2 useEffect Hook"
                }
              ]
            },
            {
              "name": "2.2 Handling Events",
              "children": [
                {
                  "name": "2.2.1 Event handlers in components"
                },
                {
                  "name": "2.2.2 Synthetic events"
                }
              ]
            },
            {
              "name": "2.3 Conditional Rendering",
              "children": [
                {
                  "name": "2.3.1 if/else statements, ternary operator"
                },
                {
                  "name": "2.3.2 Logical AND operator for conditional rendering"
                }
              ]
            },
            {
              "name": "2.4 Project: Simple To-Do List App",
              "children": []
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Working with Forms",
              "children": [
                {
                  "name": "3.1.1 Controlled vs. Uncontrolled components"
                },
                {
                  "name": "3.1.2 Form validation"
                }
              ]
            },
            {
              "name": "3.2 State Management with Context API or Redux",
              "children": [
                {
                  "name": "3.2.1 Understanding Context API"
                },
                {
                  "name": "3.2.2 Introduction to Redux (optional)"
                },
                {
                  "name": "3.2.3 Using a state management library"
                }
              ]
            },
            {
              "name": "3.3 Routing with React Router",
              "children": [
                {
                  "name": "3.3.1 Setting up routing"
                },
                {
                  "name": "3.3.2 Navigating between pages"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Techniques & Best Practices",
          "children": [
            {
              "name": "4.1 Hooks in Depth",
              "children": [
                {
                  "name": "4.1.1 Custom Hooks"
                },
                {
                  "name": "4.1.2 useReducer Hook"
                }
              ]
            },
            {
              "name": "4.2 Testing React Components",
              "children": [
                {
                  "name": "4.2.1 Unit testing with Jest and React Testing Library"
                },
                {
                  "name": "4.2.2 Integration testing"
                }
              ]
            },
            {
              "name": "4.3 Optimization Techniques",
              "children": [
                {
                  "name": "4.3.1 Memoization"
                },
                {
                  "name": "4.3.2 Code splitting and lazy loading"
                }
              ]
            },
            {
              "name": "4.4 Project:  More complex application (e.g., blog, e-commerce product page)",
              "children": []
            }
          ]
        },
        {
          "name": "5. Deployment and Beyond",
          "children": [
            {
              "name": "5.1 Deploying a React App",
              "children": [
                {
                  "name": "5.1.1 Deploying to Netlify, Vercel, or other platforms"
                },
                {
                  "name": "5.1.2  Understanding build process"
                }
              ]
            },
            {
              "name": "5.2  Learning Advanced Libraries and Frameworks",
              "children": [
                {
                  "name": "5.2.1 Exploring MUI, Material UI, Ant Design"
                },
                {
                  "name": "5.2.2  Integrating with backend APIs"
                },
                {
                  "name": "5.2.3 Next.js or Remix (Optional)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn node.js",
    "output": {
      "name": "Learn Node.js",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Data Types & Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions & Scope"
                },
                {
                  "name": "1.1.4 Object-Oriented Programming (OOP) concepts"
                },
                {
                  "name": "Exercise: Build a simple JavaScript calculator"
                }
              ]
            },
            {
              "name": "1.2 Node.js Introduction",
              "children": [
                {
                  "name": "1.2.1 Installation and Setup"
                },
                {
                  "name": "1.2.2 Running your first Node.js script"
                },
                {
                  "name": "1.2.3 Understanding the Node.js REPL"
                },
                {
                  "name": "1.2.4 Using npm (Node Package Manager)"
                },
                {
                  "name": "Exercise: Create a simple 'Hello, World!' server"
                }
              ]
            },
            {
              "name": "1.3 Asynchronous Programming",
              "children": [
                {
                  "name": "1.3.1 Callbacks"
                },
                {
                  "name": "1.3.2 Promises"
                },
                {
                  "name": "1.3.3 Async/Await"
                },
                {
                  "name": "Exercise: Fetch data from an API using async/await"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Modules",
          "children": [
            {
              "name": "2.1 HTTP Module",
              "children": [
                {
                  "name": "2.1.1 Creating HTTP servers"
                },
                {
                  "name": "2.1.2 Handling requests and responses"
                },
                {
                  "name": "2.1.3 Routing and middleware"
                },
                {
                  "name": "Exercise: Build a simple REST API with GET and POST endpoints"
                }
              ]
            },
            {
              "name": "2.2 File System Module",
              "children": [
                {
                  "name": "2.2.1 Reading and writing files"
                },
                {
                  "name": "2.2.2 File system operations"
                },
                {
                  "name": "Exercise: Create a program to read and write data to a file"
                }
              ]
            },
            {
              "name": "2.3 Events Module",
              "children": [
                {
                  "name": "2.3.1 Understanding event emitters"
                },
                {
                  "name": "2.3.2 Listening for and emitting events"
                },
                {
                  "name": "Exercise: Create a simple event-driven application"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Frameworks and Libraries",
          "children": [
            {
              "name": "3.1 Express.js",
              "children": [
                {
                  "name": "3.1.1 Setting up an Express.js application"
                },
                {
                  "name": "3.1.2 Defining routes and handling requests"
                },
                {
                  "name": "3.1.3 Using middleware"
                },
                {
                  "name": "Exercise: Build a blog application using Express.js"
                }
              ]
            },
            {
              "name": "3.2 Database Integration (MongoDB/PostgreSQL)",
              "children": [
                {
                  "name": "3.2.1 Choosing a database"
                },
                {
                  "name": "3.2.2 Connecting to the database"
                },
                {
                  "name": "3.2.3 Performing CRUD operations"
                },
                {
                  "name": "Exercise: Integrate a database into your Express.js blog application"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Testing and Deployment",
          "children": [
            {
              "name": "4.1 Unit Testing",
              "children": [
                {
                  "name": "4.1.1 Using Jest or Mocha"
                },
                {
                  "name": "4.1.2 Writing effective unit tests"
                },
                {
                  "name": "Exercise: Write unit tests for your Express.js application"
                }
              ]
            },
            {
              "name": "4.2 Deployment",
              "children": [
                {
                  "name": "4.2.1 Deploying to Heroku/Netlify/AWS"
                },
                {
                  "name": "4.2.2 Setting up a CI/CD pipeline"
                },
                {
                  "name": "Exercise: Deploy your blog application to a cloud platform"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Security",
              "children": [
                {
                  "name": "5.1.1 Authentication and Authorization"
                },
                {
                  "name": "5.1.2 Protecting against common vulnerabilities (SQL injection, XSS)"
                },
                {
                  "name": "5.1.3 Input validation"
                }
              ]
            },
            {
              "name": "5.2 Microservices",
              "children": [
                {
                  "name": "5.2.1 Principles of Microservices architecture"
                },
                {
                  "name": "5.2.2 Communication between microservices"
                }
              ]
            },
            {
              "name": "5.3 Scaling Node.js Applications",
              "children": [
                {
                  "name": "5.3.1 Load balancing"
                },
                {
                  "name": "5.3.2 Clustering"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a junior software developer",
    "output": {
      "name": "I want to become a junior software developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction",
                  "children": [
                    {
                      "name": "1.2.3.1 Practical Exercise: Create a simple OOP program (e.g., a banking system)"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Data Structures",
              "children": [
                {
                  "name": "1.3.1 Arrays and Lists"
                },
                {
                  "name": "1.3.2 Stacks and Queues"
                },
                {
                  "name": "1.3.3 Hash Tables and Dictionaries"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choose a Language & Environment",
          "children": [
            {
              "name": "2.1 Select a Language (e.g., Python, JavaScript, Java)",
              "children": [
                {
                  "name": "2.1.1 Research popular languages and their uses"
                },
                {
                  "name": "2.1.2 Consider job market demand and personal interest"
                },
                {
                  "name": "2.1.3 Begin learning the chosen language's syntax and features"
                }
              ]
            },
            {
              "name": "2.2 Set up Development Environment",
              "children": [
                {
                  "name": "2.2.1 Install necessary software (IDE, compiler/interpreter)"
                },
                {
                  "name": "2.2.2 Configure your environment (editor settings, version control)"
                },
                {
                  "name": "2.2.3 Practice running simple programs"
                }
              ]
            },
            {
              "name": "2.3 Version Control (Git)",
              "children": [
                {
                  "name": "2.3.1 Learn basic Git commands (init, add, commit, push, pull)"
                },
                {
                  "name": "2.3.2 Understand branching and merging"
                },
                {
                  "name": "2.3.3 Use GitHub or GitLab to host your projects"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Build Projects",
          "children": [
            {
              "name": "3.1 Small Projects",
              "children": [
                {
                  "name": "3.1.1 Calculator"
                },
                {
                  "name": "3.1.2 To-do list"
                },
                {
                  "name": "3.1.3 Simple game"
                }
              ]
            },
            {
              "name": "3.2 Intermediate Projects",
              "children": [
                {
                  "name": "3.2.1 Simple web application (e.g., a blog)"
                },
                {
                  "name": "3.2.2 Basic database interaction (CRUD operations)"
                },
                {
                  "name": "3.2.3 API integration"
                }
              ]
            },
            {
              "name": "3.3 Portfolio Project",
              "children": [
                {
                  "name": "3.3.1 Choose a project that showcases your skills"
                },
                {
                  "name": "3.3.2 Document your code and process"
                },
                {
                  "name": "3.3.3 Deploy your project (e.g., on Netlify, Heroku)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Databases and Web Development (Optional but Highly Recommended)",
          "children": [
            {
              "name": "4.1 SQL Databases",
              "children": [
                {
                  "name": "4.1.1 Basic SQL commands (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "4.1.2 Database design principles"
                },
                {
                  "name": "4.1.3 Project: Create a simple database application"
                }
              ]
            },
            {
              "name": "4.2 Web Development Fundamentals (HTML, CSS, JavaScript)",
              "children": [
                {
                  "name": "4.2.1 Build a static website"
                },
                {
                  "name": "4.2.2 Learn basic front-end frameworks (React, Angular, Vue.js - Choose one to start)"
                },
                {
                  "name": "4.2.3 Project: Develop a simple interactive web page"
                }
              ]
            },
            {
              "name": "4.3 Backend Frameworks (Node.js, Spring Boot, Django - Choose one based on your language choice)",
              "children": [
                {
                  "name": "4.3.1 Learn RESTful API principles"
                },
                {
                  "name": "4.3.2 Build a simple API"
                },
                {
                  "name": "4.3.3 Integrate frontend and backend"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Job Search and Preparation",
          "children": [
            {
              "name": "5.1 Refine Resume and Portfolio",
              "children": [
                {
                  "name": "5.1.1 Highlight relevant skills and projects"
                },
                {
                  "name": "5.1.2 Tailor your resume for each job application"
                },
                {
                  "name": "5.1.3 Showcase your best work in your portfolio"
                }
              ]
            },
            {
              "name": "5.2 Practice Coding Challenges",
              "children": [
                {
                  "name": "5.2.1 LeetCode, HackerRank, Codewars"
                },
                {
                  "name": "5.2.2 Focus on data structures and algorithms"
                },
                {
                  "name": "5.2.3 Time yourself and review solutions"
                }
              ]
            },
            {
              "name": "5.3 Prepare for Interviews",
              "children": [
                {
                  "name": "5.3.1 Practice behavioral questions"
                },
                {
                  "name": "5.3.2 Prepare technical questions related to your skills and projects"
                },
                {
                  "name": "5.3.3 Mock interviews with friends or mentors"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a senior software developer",
    "output": {
      "name": "i want to become a senior software developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Data Structures (Arrays, Linked Lists, Trees, Graphs)"
                },
                {
                  "name": "1.1.2 Algorithms (Sorting, Searching, Graph Traversal)"
                },
                {
                  "name": "1.1.3 Object-Oriented Programming (OOP) Principles (Encapsulation, Inheritance, Polymorphism)"
                }
              ]
            },
            {
              "name": "1.2 Programming Language Proficiency",
              "children": [
                {
                  "name": "1.2.1 Choose a Language (e.g., Java, Python, C++, JavaScript)"
                },
                {
                  "name": "1.2.2 Master Syntax and Fundamentals"
                },
                {
                  "name": "1.2.3 Practice with coding challenges (LeetCode, HackerRank)"
                }
              ]
            },
            {
              "name": "1.3 Databases",
              "children": [
                {
                  "name": "1.3.1 Relational Databases (SQL, MySQL, PostgreSQL)"
                },
                {
                  "name": "1.3.2 NoSQL Databases (MongoDB, Cassandra)"
                },
                {
                  "name": "1.3.3 Database Design and Normalization"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Software Development Practices",
          "children": [
            {
              "name": "2.1 Version Control (Git)",
              "children": [
                {
                  "name": "2.1.1 Git Basics (Clone, Commit, Push, Pull)"
                },
                {
                  "name": "2.1.2 Branching and Merging"
                },
                {
                  "name": "2.1.3 Collaborative workflows (GitHub, GitLab)"
                }
              ]
            },
            {
              "name": "2.2 Software Design Patterns",
              "children": [
                {
                  "name": "2.2.1 Creational Patterns (Singleton, Factory, Abstract Factory)"
                },
                {
                  "name": "2.2.2 Structural Patterns (Adapter, Decorator, Facade)"
                },
                {
                  "name": "2.2.3 Behavioral Patterns (Observer, Strategy, Command)"
                }
              ]
            },
            {
              "name": "2.3 Testing",
              "children": [
                {
                  "name": "2.3.1 Unit Testing"
                },
                {
                  "name": "2.3.2 Integration Testing"
                },
                {
                  "name": "2.3.3 Test-Driven Development (TDD)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Web Development (Optional, but highly recommended)",
          "children": [
            {
              "name": "3.1 Frontend Development",
              "children": [
                {
                  "name": "3.1.1 HTML, CSS, JavaScript"
                },
                {
                  "name": "3.1.2 Frameworks (React, Angular, Vue.js)"
                },
                {
                  "name": "3.1.3 Build Tools (Webpack, Parcel)"
                }
              ]
            },
            {
              "name": "3.2 Backend Development",
              "children": [
                {
                  "name": "3.2.1 REST APIs"
                },
                {
                  "name": "3.2.2 Frameworks (Node.js, Spring Boot, Django)"
                },
                {
                  "name": "3.2.3 Server-side technologies"
                }
              ]
            },
            {
              "name": "3.3 Deployment and DevOps",
              "children": [
                {
                  "name": "3.3.1 Cloud Platforms (AWS, Azure, GCP)"
                },
                {
                  "name": "3.3.2 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "3.3.3 CI/CD Pipelines"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics and Specialization",
          "children": [
            {
              "name": "4.1 System Design",
              "children": [
                {
                  "name": "4.1.1 Scalability and Performance"
                },
                {
                  "name": "4.1.2 Microservices Architecture"
                },
                {
                  "name": "4.1.3 Designing large-scale systems"
                },
                {
                  "name": "4.1.4 Practice with system design interviews"
                }
              ]
            },
            {
              "name": "4.2 Advanced Algorithms and Data Structures",
              "children": [
                {
                  "name": "4.2.1 Dynamic Programming"
                },
                {
                  "name": "4.2.2 Graph Algorithms"
                },
                {
                  "name": "4.2.3 Advanced Data Structures (Tries, Heaps)"
                }
              ]
            },
            {
              "name": "4.3 Choose a Specialization",
              "children": [
                {
                  "name": "4.3.1 Mobile Development (iOS, Android)"
                },
                {
                  "name": "4.3.2 Machine Learning/AI"
                },
                {
                  "name": "4.3.3 Cybersecurity"
                },
                {
                  "name": "4.3.4 Cloud Computing"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Experience and Portfolio",
          "children": [
            {
              "name": "5.1 Personal Projects",
              "children": [
                {
                  "name": "5.1.1 Build multiple projects showcasing your skills"
                },
                {
                  "name": "5.1.2 Contribute to open-source projects"
                }
              ]
            },
            {
              "name": "5.2 Internships or Entry-Level Roles",
              "children": [
                {
                  "name": "5.2.1 Gain practical experience"
                },
                {
                  "name": "5.2.2 Learn from senior developers"
                }
              ]
            },
            {
              "name": "5.3 Networking",
              "children": [
                {
                  "name": "5.3.1 Attend conferences and meetups"
                },
                {
                  "name": "5.3.2 Build relationships with other developers"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn software development",
    "output": {
      "name": "i want to learn software development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                }
              ]
            },
            {
              "name": "1.2 Introduction to Algorithms and Data Structures",
              "children": [
                {
                  "name": "1.2.1 Basic Algorithms (searching, sorting)"
                },
                {
                  "name": "1.2.2 Arrays and Lists"
                },
                {
                  "name": "1.2.3 Simple Project: Implement a sorting algorithm"
                }
              ]
            },
            {
              "name": "1.3 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.3.1 Classes and Objects"
                },
                {
                  "name": "1.3.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.3.3 Project: Create a simple class-based application (e.g., a library system)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Language & Environment",
          "children": [
            {
              "name": "2.1 Selecting a Programming Language",
              "children": [
                {
                  "name": "2.1.1 Researching Popular Languages (Python, JavaScript, Java, C#)"
                },
                {
                  "name": "2.1.2 Considering Job Market Demand and Personal Interests"
                }
              ]
            },
            {
              "name": "2.2 Setting up your Development Environment",
              "children": [
                {
                  "name": "2.2.1 Installing IDE (Integrated Development Environment)"
                },
                {
                  "name": "2.2.2 Setting up a Version Control System (Git)"
                },
                {
                  "name": "2.2.3 Configuring your terminal or command prompt"
                }
              ]
            },
            {
              "name": "2.3 First Program in your Chosen Language",
              "children": [
                {
                  "name": "2.3.1 Hello World Program"
                },
                {
                  "name": "2.3.2 Simple Input/Output Operations"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Web Development Fundamentals (Optional, but highly recommended)",
          "children": [
            {
              "name": "3.1 Front-End Development",
              "children": [
                {
                  "name": "3.1.1 HTML, CSS, and JavaScript Basics"
                },
                {
                  "name": "3.1.2 Responsive Web Design Principles"
                },
                {
                  "name": "3.1.3 Project: Build a simple webpage"
                }
              ]
            },
            {
              "name": "3.2 Back-End Development",
              "children": [
                {
                  "name": "3.2.1 Server-Side Programming (Node.js, Python (Flask/Django), Java (Spring) etc.)"
                },
                {
                  "name": "3.2.2 Databases (SQL, NoSQL)"
                },
                {
                  "name": "3.2.3 APIs and RESTful Services"
                }
              ]
            },
            {
              "name": "3.3 Full Stack Development",
              "children": [
                {
                  "name": "3.3.1 Connecting Front-end and Back-end"
                },
                {
                  "name": "3.3.2 Project: Build a simple web application (e.g., to-do list, blog)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Databases and Data Modeling",
              "children": [
                {
                  "name": "4.1.1 Relational Databases (SQL)"
                },
                {
                  "name": "4.1.2 NoSQL Databases (MongoDB, Cassandra)"
                },
                {
                  "name": "4.1.3 Project: Design and implement a database for a real-world application"
                }
              ]
            },
            {
              "name": "4.2 Software Design Patterns",
              "children": [
                {
                  "name": "4.2.1 Understanding common design patterns"
                },
                {
                  "name": "4.2.2 Applying patterns to improve code quality"
                }
              ]
            },
            {
              "name": "4.3 Version Control with Git",
              "children": [
                {
                  "name": "4.3.1 Branching, merging, and conflict resolution"
                },
                {
                  "name": "4.3.2 Collaboration using Git platforms (GitHub, GitLab, Bitbucket)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Deployment and Beyond",
          "children": [
            {
              "name": "5.1 Deploying your Applications",
              "children": [
                {
                  "name": "5.1.1 Cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.1.2 Containerization (Docker)"
                },
                {
                  "name": "5.1.3 Project: Deploy a simple application to a cloud platform"
                }
              ]
            },
            {
              "name": "5.2 Testing and Debugging",
              "children": [
                {
                  "name": "5.2.1 Unit testing and Integration testing"
                },
                {
                  "name": "5.2.2 Debugging techniques"
                }
              ]
            },
            {
              "name": "5.3 Continuous Integration/Continuous Deployment (CI/CD)",
              "children": [
                {
                  "name": "5.3.1 Introduction to CI/CD pipelines"
                },
                {
                  "name": "5.3.2 Setting up a CI/CD pipeline for a simple project"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a network engineer",
    "output": {
      "name": "Become a Network Engineer",
      "children": [
        {
          "name": "1. Networking Fundamentals",
          "children": [
            {
              "name": "1.1 Networking Models & Protocols",
              "children": [
                {
                  "name": "1.1.1 OSI Model & TCP/IP Model"
                },
                {
                  "name": "1.1.2 IP Addressing (IPv4 & IPv6)"
                },
                {
                  "name": "1.1.3 Subnetting & VLSM"
                }
              ]
            },
            {
              "name": "1.2 Network Devices",
              "children": [
                {
                  "name": "1.2.1 Routers & their functions"
                },
                {
                  "name": "1.2.2 Switches & their functions"
                },
                {
                  "name": "1.2.3 Firewalls & their functions"
                },
                {
                  "name": "1.2.4 Network Troubleshooting: Basic Packet Tracing (using tools like Wireshark)"
                }
              ]
            },
            {
              "name": "1.3 Network Topologies",
              "children": [
                {
                  "name": "1.3.1 Bus, Star, Ring, Mesh topologies"
                },
                {
                  "name": "1.3.2 Understanding Network Diagrams"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Network Technologies",
          "children": [
            {
              "name": "2.1 Routing Protocols",
              "children": [
                {
                  "name": "2.1.1 RIP, OSPF, EIGRP"
                },
                {
                  "name": "2.1.2 BGP (Basic Understanding)"
                },
                {
                  "name": "2.1.3 Practical Exercise: Configuring OSPF on a router simulator (e.g., GNS3, Cisco Packet Tracer)"
                }
              ]
            },
            {
              "name": "2.2 Switching Technologies",
              "children": [
                {
                  "name": "2.2.1 VLANs & Trunking"
                },
                {
                  "name": "2.2.2 Spanning Tree Protocol (STP)"
                },
                {
                  "name": "2.2.3 Practical Exercise: Configuring VLANs and Trunking on a switch simulator"
                }
              ]
            },
            {
              "name": "2.3 Network Security Basics",
              "children": [
                {
                  "name": "2.3.1 Firewalls (deep dive): Stateful inspection, ACLs"
                },
                {
                  "name": "2.3.2 Network Security Threats & Mitigation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Network Concepts",
          "children": [
            {
              "name": "3.1 WAN Technologies",
              "children": [
                {
                  "name": "3.1.1 VPNs (IPsec, SSL/TLS)"
                },
                {
                  "name": "3.1.2 MPLS"
                },
                {
                  "name": "3.1.3 WAN Optimization Techniques"
                }
              ]
            },
            {
              "name": "3.2 Network Automation & Scripting",
              "children": [
                {
                  "name": "3.2.1 Introduction to Python for Network Automation"
                },
                {
                  "name": "3.2.2 Using Ansible or Netmiko for network configuration management"
                },
                {
                  "name": "3.2.3 Practical Project: Automating network device configuration"
                }
              ]
            },
            {
              "name": "3.3 Cloud Networking",
              "children": [
                {
                  "name": "3.3.1 Virtual Networks (VPC) in AWS or Azure"
                },
                {
                  "name": "3.3.2 Cloud Load Balancers"
                },
                {
                  "name": "3.3.3 Cloud Security Groups"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Specialization & Practical Experience",
          "children": [
            {
              "name": "4.1 Choose a Specialization",
              "children": [
                {
                  "name": "4.1.1 Cloud Networking (AWS, Azure, GCP)"
                },
                {
                  "name": "4.1.2 Network Security (Firewall administration, intrusion detection)"
                },
                {
                  "name": "4.1.3 SDN/NFV"
                }
              ]
            },
            {
              "name": "4.2 Hands-on Experience",
              "children": [
                {
                  "name": "4.2.1 Network Lab Setup (Physical or Virtual)"
                },
                {
                  "name": "4.2.2 Contributing to Open Source Network Projects"
                },
                {
                  "name": "4.2.3 Internships or Volunteer Work"
                }
              ]
            },
            {
              "name": "4.3 Certifications",
              "children": [
                {
                  "name": "4.3.1 CompTIA Network+"
                },
                {
                  "name": "4.3.2 Cisco CCNA/CCNP"
                },
                {
                  "name": "4.3.3 Other vendor-specific certifications"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a iot data scientist",
    "output": {
      "name": "I want to become an IoT Data Scientist",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals (data structures, control flow)"
                },
                {
                  "name": "1.1.2 Python Libraries (NumPy, Pandas)"
                },
                {
                  "name": "1.1.3 Project: Analyze a simple CSV dataset"
                }
              ]
            },
            {
              "name": "1.2 Data Wrangling & Visualization",
              "children": [
                {
                  "name": "1.2.1 Data Cleaning and Preprocessing"
                },
                {
                  "name": "1.2.2 Data Visualization with Matplotlib and Seaborn"
                },
                {
                  "name": "1.2.3 Project: Clean and visualize a real-world dataset (e.g., sensor data)"
                }
              ]
            },
            {
              "name": "1.3  Databases & SQL",
              "children": [
                {
                  "name": "1.3.1 Relational Databases (SQL Basics)"
                },
                {
                  "name": "1.3.2 SQL Queries (SELECT, JOIN, WHERE)"
                },
                {
                  "name": "1.3.3 Project: Query a database containing IoT sensor data"
                }
              ]
            }
          ]
        },
        {
          "name": "2. IoT Fundamentals",
          "children": [
            {
              "name": "2.1 IoT Architectures and Protocols",
              "children": [
                {
                  "name": "2.1.1 Understanding MQTT, CoAP, HTTP"
                },
                {
                  "name": "2.1.2 Cloud Platforms (AWS IoT Core, Azure IoT Hub, Google Cloud IoT Core)"
                },
                {
                  "name": "2.1.3 Project: Setup a simple IoT device and send data to a cloud platform"
                }
              ]
            },
            {
              "name": "2.2 Embedded Systems & Sensor Technologies",
              "children": [
                {
                  "name": "2.2.1 Basic Electronics and Microcontrollers (Arduino, Raspberry Pi)"
                },
                {
                  "name": "2.2.2 Common Sensors (Temperature, Humidity, Pressure, Accelerometer)"
                },
                {
                  "name": "2.2.3 Project: Build a simple IoT device with a sensor and send data wirelessly"
                }
              ]
            },
            {
              "name": "2.3 Data Transmission and Communication",
              "children": [
                {
                  "name": "2.3.1 Network Protocols (TCP/IP, UDP)"
                },
                {
                  "name": "2.3.2 Wireless Communication Technologies (Wi-Fi, Bluetooth, LoRaWAN)"
                },
                {
                  "name": "2.3.3 Project: Experiment with different communication protocols and analyze data transmission quality"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning for IoT",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "3.1.1 Regression (Linear Regression, Random Forest Regression)"
                },
                {
                  "name": "3.1.2 Classification (Logistic Regression, Support Vector Machines, Random Forest Classification)"
                },
                {
                  "name": "3.1.3 Project: Build a predictive model for sensor data (e.g., predicting equipment failure)"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "3.2.1 Clustering (K-means, DBSCAN)"
                },
                {
                  "name": "3.2.2 Anomaly Detection"
                },
                {
                  "name": "3.2.3 Project: Detect anomalies in IoT sensor data"
                }
              ]
            },
            {
              "name": "3.3 Time Series Analysis",
              "children": [
                {
                  "name": "3.3.1 Time Series Forecasting (ARIMA, Prophet)"
                },
                {
                  "name": "3.3.2 Time Series Decomposition"
                },
                {
                  "name": "3.3.3 Project: Forecast future values from IoT sensor data"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Cloud Computing & Big Data",
          "children": [
            {
              "name": "4.1 Cloud Platforms for IoT Data Science",
              "children": [
                {
                  "name": "4.1.1 AWS SageMaker, Azure Machine Learning, Google Cloud AI Platform"
                },
                {
                  "name": "4.1.2 Serverless Computing (AWS Lambda, Azure Functions, Google Cloud Functions)"
                },
                {
                  "name": "4.1.3 Project: Deploy a machine learning model on a cloud platform"
                }
              ]
            },
            {
              "name": "4.2 Big Data Technologies",
              "children": [
                {
                  "name": "4.2.1 Apache Spark"
                },
                {
                  "name": "4.2.2 Apache Hadoop"
                },
                {
                  "name": "4.2.3 Project: Process and analyze a large IoT dataset using Spark"
                }
              ]
            },
            {
              "name": "4.3 Data Streaming and Real-time Analytics",
              "children": [
                {
                  "name": "4.3.1 Apache Kafka"
                },
                {
                  "name": "4.3.2 Apache Flink"
                },
                {
                  "name": "4.3.3 Project: Build a real-time analytics pipeline for IoT data"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Deep Learning for IoT",
              "children": [
                {
                  "name": "5.1.1 Recurrent Neural Networks (RNNs) for time series data"
                },
                {
                  "name": "5.1.2 Convolutional Neural Networks (CNNs) for image data from IoT sensors"
                },
                {
                  "name": "5.1.3 Project: Develop a deep learning model for a specific IoT application"
                }
              ]
            },
            {
              "name": "5.2 Edge Computing",
              "children": [
                {
                  "name": "5.2.1 Processing data closer to the source"
                },
                {
                  "name": "5.2.2 Reducing latency and bandwidth consumption"
                },
                {
                  "name": "5.2.3 Project: Implement a model on an edge device (e.g., Raspberry Pi)"
                }
              ]
            },
            {
              "name": "5.3 IoT Security",
              "children": [
                {
                  "name": "5.3.1 Secure communication protocols"
                },
                {
                  "name": "5.3.2 Data encryption and authentication"
                },
                {
                  "name": "5.3.3 Project: Implement security measures in an IoT system"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn sql\\",
    "output": {
      "name": "Learn SQL",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Databases and Tables"
                },
                {
                  "name": "1.1.2 Relational Model"
                },
                {
                  "name": "1.1.3 Primary and Foreign Keys"
                }
              ]
            },
            {
              "name": "1.2 Basic SQL Syntax",
              "children": [
                {
                  "name": "1.2.1 SELECT Statements"
                },
                {
                  "name": "1.2.2 WHERE Clause"
                },
                {
                  "name": "1.2.3 ORDER BY Clause"
                },
                {
                  "name": "1.2.4 LIMIT Clause (or TOP in some databases)"
                }
              ]
            },
            {
              "name": "1.3 Data Types and Operators",
              "children": [
                {
                  "name": "1.3.1 Common Data Types (INT, VARCHAR, DATE, etc.)"
                },
                {
                  "name": "1.3.2 Arithmetic, Comparison, and Logical Operators"
                },
                {
                  "name": "1.3.3  Practice: Create a simple table and insert data with different data types."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Manipulation",
          "children": [
            {
              "name": "2.1 INSERT, UPDATE, and DELETE Statements",
              "children": [
                {
                  "name": "2.1.1 Inserting new rows"
                },
                {
                  "name": "2.1.2 Updating existing rows"
                },
                {
                  "name": "2.1.3 Deleting rows"
                },
                {
                  "name": "2.1.4 Practice:  Update and delete data in the table created in section 1.3.3"
                }
              ]
            },
            {
              "name": "2.2 Aggregate Functions",
              "children": [
                {
                  "name": "2.2.1 COUNT, SUM, AVG, MIN, MAX"
                },
                {
                  "name": "2.2.2 GROUP BY and HAVING Clauses"
                },
                {
                  "name": "2.2.3 Practice: Calculate the average, sum, and count of values in a column"
                }
              ]
            },
            {
              "name": "2.3 Joining Tables",
              "children": [
                {
                  "name": "2.3.1 INNER JOIN"
                },
                {
                  "name": "2.3.2 LEFT (OUTER) JOIN"
                },
                {
                  "name": "2.3.3 RIGHT (OUTER) JOIN"
                },
                {
                  "name": "2.3.4 Practice: Join two tables to retrieve related data"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced SQL",
          "children": [
            {
              "name": "3.1 Subqueries",
              "children": [
                {
                  "name": "3.1.1 Using subqueries in SELECT, FROM, and WHERE clauses"
                },
                {
                  "name": "3.1.2 Correlated subqueries"
                },
                {
                  "name": "3.1.3 Practice: Use subqueries to filter data based on complex conditions"
                }
              ]
            },
            {
              "name": "3.2 Common Table Expressions (CTEs)",
              "children": [
                {
                  "name": "3.2.1 Defining and using CTEs for complex queries"
                },
                {
                  "name": "3.2.2 Recursive CTEs (for hierarchical data)"
                },
                {
                  "name": "3.2.3 Practice: Simplify a complex query using a CTE"
                }
              ]
            },
            {
              "name": "3.3 Window Functions",
              "children": [
                {
                  "name": "3.3.1  ROW_NUMBER(), RANK(), DENSE_RANK()"
                },
                {
                  "name": "3.3.2  PARTITION BY and ORDER BY clauses with window functions"
                },
                {
                  "name": "3.3.3 Practice: Use window functions to rank data within groups"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Database Design & Normalization",
          "children": [
            {
              "name": "4.1 Database Design Principles",
              "children": [
                {
                  "name": "4.1.1 Entity-Relationship Diagrams (ERDs)"
                },
                {
                  "name": "4.1.2 Data Modeling"
                },
                {
                  "name": "4.1.3 Project: Design a database schema for a simple application"
                }
              ]
            },
            {
              "name": "4.2 Database Normalization",
              "children": [
                {
                  "name": "4.2.1 First Normal Form (1NF)"
                },
                {
                  "name": "4.2.2 Second Normal Form (2NF)"
                },
                {
                  "name": "4.2.3 Third Normal Form (3NF)"
                },
                {
                  "name": "4.2.4 Project: Normalize a given database schema"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Putting it all together:  A Mini-Project",
          "children": [
            {
              "name": "5.1 Project: Build a small database application",
              "children": [
                {
                  "name": "5.1.1 Choose a simple application (e.g., library management, contact list)"
                },
                {
                  "name": "5.1.2 Design the database schema"
                },
                {
                  "name": "5.1.3 Implement the application using SQL queries"
                },
                {
                  "name": "5.1.4 Test and refine your application"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn computer vision",
    "output": {
      "name": "I want to learn Computer Vision",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, and Linear Transformations"
                },
                {
                  "name": "1.1.2 Derivatives, Gradients, and Optimization"
                },
                {
                  "name": "1.1.3  Eigenvalues and Eigenvectors (for PCA)"
                }
              ]
            },
            {
              "name": "1.2 Probability & Statistics",
              "children": [
                {
                  "name": "1.2.1 Probability distributions (Gaussian, Binomial)"
                },
                {
                  "name": "1.2.2 Hypothesis testing and statistical significance"
                },
                {
                  "name": "1.2.3 Bayesian inference"
                }
              ]
            },
            {
              "name": "1.3 Programming Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Python Programming (Basic Syntax, Data Structures)"
                },
                {
                  "name": "1.3.2 NumPy for numerical computation"
                },
                {
                  "name": "1.3.3  Project: Implement basic image manipulation functions using NumPy"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Image Processing",
          "children": [
            {
              "name": "2.1 Image Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Image formats (JPEG, PNG, etc.)"
                },
                {
                  "name": "2.1.2 Color spaces (RGB, HSV, Grayscale)"
                },
                {
                  "name": "2.1.3 Image filtering (smoothing, sharpening)"
                }
              ]
            },
            {
              "name": "2.2 Feature Extraction",
              "children": [
                {
                  "name": "2.2.1 Edge detection (Sobel, Canny)"
                },
                {
                  "name": "2.2.2 Corner detection (Harris, SIFT)"
                },
                {
                  "name": "2.2.3  Feature descriptors (HOG, SIFT, SURF)"
                }
              ]
            },
            {
              "name": "2.3 Image Segmentation",
              "children": [
                {
                  "name": "2.3.1 Thresholding"
                },
                {
                  "name": "2.3.2 Region growing"
                },
                {
                  "name": "2.3.3 Project: Implement image segmentation on a sample image"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for Computer Vision",
          "children": [
            {
              "name": "3.1 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.1.1 CNN architectures (AlexNet, VGG, ResNet)"
                },
                {
                  "name": "3.1.2 Backpropagation and optimization algorithms"
                },
                {
                  "name": "3.1.3 Transfer learning"
                }
              ]
            },
            {
              "name": "3.2 Object Detection",
              "children": [
                {
                  "name": "3.2.1 Two-stage detectors (R-CNN, Fast R-CNN, Faster R-CNN)"
                },
                {
                  "name": "3.2.2 One-stage detectors (YOLO, SSD)"
                },
                {
                  "name": "3.2.3 Project: Train an object detection model on a publicly available dataset"
                }
              ]
            },
            {
              "name": "3.3 Image Classification",
              "children": [
                {
                  "name": "3.3.1 Data Augmentation"
                },
                {
                  "name": "3.3.2 Model Evaluation Metrics"
                },
                {
                  "name": "3.3.3 Project: Build an image classification model using a pre-trained CNN"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1  3D Computer Vision",
              "children": [
                {
                  "name": "4.1.1 Stereo Vision"
                },
                {
                  "name": "4.1.2 Structure from Motion (SfM)"
                },
                {
                  "name": "4.1.3 Point Cloud Processing"
                }
              ]
            },
            {
              "name": "4.2  Video Analysis",
              "children": [
                {
                  "name": "4.2.1 Optical Flow"
                },
                {
                  "name": "4.2.2 Action Recognition"
                },
                {
                  "name": "4.2.3 Video Object Detection"
                }
              ]
            },
            {
              "name": "4.3  Deep Learning Frameworks",
              "children": [
                {
                  "name": "4.3.1 TensorFlow/Keras"
                },
                {
                  "name": "4.3.2 PyTorch"
                },
                {
                  "name": "4.3.3 Project: Implement a chosen advanced technique using a deep learning framework"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Applications",
          "children": [
            {
              "name": "5.1 Model Optimization",
              "children": [
                {
                  "name": "5.1.1 Pruning"
                },
                {
                  "name": "5.1.2 Quantization"
                },
                {
                  "name": "5.1.3 Knowledge Distillation"
                }
              ]
            },
            {
              "name": "5.2 Deployment Platforms",
              "children": [
                {
                  "name": "5.2.1 Cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.2.2 Edge devices (Raspberry Pi, Jetson Nano)"
                },
                {
                  "name": "5.2.3 Mobile devices (Android, iOS)"
                }
              ]
            },
            {
              "name": "5.3 Real-world Applications",
              "children": [
                {
                  "name": "5.3.1 Autonomous driving"
                },
                {
                  "name": "5.3.2 Medical image analysis"
                },
                {
                  "name": "5.3.3 Robotics"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a  computer vision engineer",
    "output": {
      "name": "I want to become a Computer Vision Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Programming Fundamentals"
                },
                {
                  "name": "1.2.2 NumPy and Pandas"
                },
                {
                  "name": "1.2.3 Git and Version Control"
                }
              ]
            },
            {
              "name": "1.3 Computer Science Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Data Structures and Algorithms"
                },
                {
                  "name": "1.3.2 Object-Oriented Programming"
                },
                {
                  "name": "1.3.3 Introduction to Databases"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Image Processing",
          "children": [
            {
              "name": "2.1 Image Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Image Formats (JPEG, PNG, etc.)"
                },
                {
                  "name": "2.1.2 Color Spaces (RGB, HSV, etc.)"
                },
                {
                  "name": "2.1.3 Image Filtering (Smoothing, Sharpening)"
                }
              ]
            },
            {
              "name": "2.2 Image Transformations",
              "children": [
                {
                  "name": "2.2.1 Geometric Transformations (Rotation, Scaling, Translation)"
                },
                {
                  "name": "2.2.2 Image Enhancement Techniques"
                },
                {
                  "name": "2.2.3 Project: Implement basic image filters and transformations using OpenCV"
                }
              ]
            },
            {
              "name": "2.3 Feature Extraction",
              "children": [
                {
                  "name": "2.3.1 Edge Detection (Canny, Sobel)"
                },
                {
                  "name": "2.3.2 Corner Detection (Harris, SIFT)"
                },
                {
                  "name": "2.3.3 Feature Descriptors (HOG, SIFT, SURF)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for Computer Vision",
          "children": [
            {
              "name": "3.1 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.1.1 CNN Architectures (AlexNet, VGG, ResNet)"
                },
                {
                  "name": "3.1.2 Backpropagation and Optimization"
                },
                {
                  "name": "3.1.3 Project: Train a CNN for image classification using TensorFlow/PyTorch"
                }
              ]
            },
            {
              "name": "3.2 Object Detection",
              "children": [
                {
                  "name": "3.2.1 Two-stage detectors (Faster R-CNN)"
                },
                {
                  "name": "3.2.2 One-stage detectors (YOLO, SSD)"
                },
                {
                  "name": "3.2.3 Project: Train an object detection model on a custom dataset"
                }
              ]
            },
            {
              "name": "3.3 Advanced Topics",
              "children": [
                {
                  "name": "3.3.1 Semantic Segmentation"
                },
                {
                  "name": "3.3.2 Instance Segmentation"
                },
                {
                  "name": "3.3.3 Generative Adversarial Networks (GANs) for image generation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Optimization",
          "children": [
            {
              "name": "4.1 Model Deployment",
              "children": [
                {
                  "name": "4.1.1 Cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "4.1.2 Edge devices (Raspberry Pi, NVIDIA Jetson)"
                },
                {
                  "name": "4.1.3 Model Optimization for Deployment"
                }
              ]
            },
            {
              "name": "4.2 Model Optimization",
              "children": [
                {
                  "name": "4.2.1 Quantization"
                },
                {
                  "name": "4.2.2 Pruning"
                },
                {
                  "name": "4.2.3 Knowledge Distillation"
                }
              ]
            },
            {
              "name": "4.3 Performance Evaluation",
              "children": [
                {
                  "name": "4.3.1 Precision and Recall"
                },
                {
                  "name": "4.3.2 F1-score"
                },
                {
                  "name": "4.3.3 mAP (mean Average Precision)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization and Advanced Topics",
          "children": [
            {
              "name": "5.1 3D Computer Vision",
              "children": [
                {
                  "name": "5.1.1 Stereo Vision"
                },
                {
                  "name": "5.1.2 Depth Estimation"
                },
                {
                  "name": "5.1.3 Point Cloud Processing"
                }
              ]
            },
            {
              "name": "5.2  Robotics and Computer Vision",
              "children": [
                {
                  "name": "5.2.1 Visual SLAM"
                },
                {
                  "name": "5.2.2 Robot Navigation"
                },
                {
                  "name": "5.2.3 Robot Manipulation"
                }
              ]
            },
            {
              "name": "5.3 Medical Image Analysis",
              "children": [
                {
                  "name": "5.3.1 Image Segmentation in Medical Images"
                },
                {
                  "name": "5.3.2 Disease Detection"
                },
                {
                  "name": "5.3.3 3D Medical Image Analysis"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a business analyst",
    "output": {
      "name": "I want to become a Business Analyst",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Business Concepts",
              "children": [
                {
                  "name": "1.1.1 Accounting Fundamentals"
                },
                {
                  "name": "1.1.2 Financial Statements Analysis"
                },
                {
                  "name": "1.1.3 Basic Marketing Principles"
                }
              ]
            },
            {
              "name": "1.2 Data Analysis Basics",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics"
                },
                {
                  "name": "1.2.2 Data Visualization (Excel, Tableau)"
                },
                {
                  "name": "1.2.3 Project: Analyze a sample dataset"
                }
              ]
            },
            {
              "name": "1.3 Communication & Presentation Skills",
              "children": [
                {
                  "name": "1.3.1 Effective Writing"
                },
                {
                  "name": "1.3.2 Public Speaking & Presentations"
                },
                {
                  "name": "1.3.3 Active Listening & Stakeholder Management"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Business Analysis Techniques",
          "children": [
            {
              "name": "2.1 Requirements Elicitation",
              "children": [
                {
                  "name": "2.1.1 Interviews & Surveys"
                },
                {
                  "name": "2.1.2 Workshops & Focus Groups"
                },
                {
                  "name": "2.1.3 Document Analysis"
                }
              ]
            },
            {
              "name": "2.2 Requirements Modeling",
              "children": [
                {
                  "name": "2.2.1 Use Case Diagrams"
                },
                {
                  "name": "2.2.2 User Stories"
                },
                {
                  "name": "2.2.3 Data Flow Diagrams"
                }
              ]
            },
            {
              "name": "2.3 Process Modeling",
              "children": [
                {
                  "name": "2.3.1 Business Process Modeling Notation (BPMN)"
                },
                {
                  "name": "2.3.2 Flowcharts"
                },
                {
                  "name": "2.3.3 Project: Model a simple business process"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Software & Tools",
          "children": [
            {
              "name": "3.1 Spreadsheet Software (Excel)",
              "children": [
                {
                  "name": "3.1.1 Advanced Formulas & Functions"
                },
                {
                  "name": "3.1.2 Data Analysis Tools (Pivot Tables)"
                },
                {
                  "name": "3.1.3 Project: Create a financial model"
                }
              ]
            },
            {
              "name": "3.2 Data Visualization Tools (Tableau/Power BI)",
              "children": [
                {
                  "name": "3.2.1 Data Cleaning & Preparation"
                },
                {
                  "name": "3.2.2 Dashboard Creation"
                },
                {
                  "name": "3.2.3 Project: Create a data visualization dashboard"
                }
              ]
            },
            {
              "name": "3.3 Project Management Software (Jira/Asana)",
              "children": [
                {
                  "name": "3.3.1 Task Management"
                },
                {
                  "name": "3.3.2 Agile Methodologies"
                },
                {
                  "name": "3.3.3 Project: Manage a simulated project"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specialization",
          "children": [
            {
              "name": "4.1 Business Intelligence (BI)",
              "children": [
                {
                  "name": "4.1.1 Data Warehousing"
                },
                {
                  "name": "4.1.2 Data Mining"
                },
                {
                  "name": "4.1.3 OLAP and Data Cubes"
                }
              ]
            },
            {
              "name": "4.2 Agile & Scrum Methodologies",
              "children": [
                {
                  "name": "4.2.1 Scrum Roles & Events"
                },
                {
                  "name": "4.2.2 Sprint Planning & Execution"
                },
                {
                  "name": "4.2.3 Project: Participate in a simulated Scrum project"
                }
              ]
            },
            {
              "name": "4.3  Specific Industry Knowledge",
              "children": [
                {
                  "name": "4.3.1 Choose an industry (e.g., Finance, Healthcare, Tech)"
                },
                {
                  "name": "4.3.2 Research industry-specific best practices and terminology"
                },
                {
                  "name": "4.3.3 Network with professionals in your chosen industry"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Job Search & Career Development",
          "children": [
            {
              "name": "5.1 Building Your Resume & Portfolio",
              "children": [
                {
                  "name": "5.1.1 Highlight relevant skills and projects"
                },
                {
                  "name": "5.1.2 Tailor your resume to each job application"
                },
                {
                  "name": "5.1.3 Showcase your analytical abilities through case studies"
                }
              ]
            },
            {
              "name": "5.2 Networking and Interviewing",
              "children": [
                {
                  "name": "5.2.1 Attend industry events and connect with professionals"
                },
                {
                  "name": "5.2.2 Practice common interview questions (behavioral and technical)"
                },
                {
                  "name": "5.2.3 Prepare compelling answers that showcase your skills and experience"
                }
              ]
            },
            {
              "name": "5.3 Continuous Learning",
              "children": [
                {
                  "name": "5.3.1 Stay updated with industry trends and new technologies"
                },
                {
                  "name": "5.3.2 Pursue certifications (e.g., CBAP, CCBA)"
                },
                {
                  "name": "5.3.3 Engage in professional development activities"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn data structure",
    "output": {
      "name": "i want to learn data structure",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Abstract Data Types (ADT)"
                },
                {
                  "name": "1.1.2 Time and Space Complexity (Big O Notation)"
                },
                {
                  "name": "1.1.3 Algorithm Analysis"
                }
              ]
            },
            {
              "name": "1.2 Basic Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays"
                },
                {
                  "name": "1.2.2 Linked Lists (Singly, Doubly, Circular)"
                },
                {
                  "name": "1.2.3 Stacks and Queues"
                },
                {
                  "name": "1.2.4 Practical Exercise: Implement a simple LRU Cache using a linked list and a hashmap"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Data Structures",
          "children": [
            {
              "name": "2.1 Trees",
              "children": [
                {
                  "name": "2.1.1 Binary Trees"
                },
                {
                  "name": "2.1.2 Binary Search Trees (BST)"
                },
                {
                  "name": "2.1.3 Tree Traversals (Inorder, Preorder, Postorder)"
                },
                {
                  "name": "2.1.4 Balanced Trees (AVL, Red-Black Trees) - Introduction"
                }
              ]
            },
            {
              "name": "2.2 Graphs",
              "children": [
                {
                  "name": "2.2.1 Graph Representations (Adjacency Matrix, Adjacency List)"
                },
                {
                  "name": "2.2.2 Graph Traversal Algorithms (BFS, DFS)"
                },
                {
                  "name": "2.2.3 Shortest Path Algorithms (Dijkstra's, Bellman-Ford) - Introduction"
                },
                {
                  "name": "2.2.4 Practical Exercise: Implement a graph to represent a social network and find the shortest path between two users"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Data Structures",
          "children": [
            {
              "name": "3.1 Heaps",
              "children": [
                {
                  "name": "3.1.1 Min-Heaps and Max-Heaps"
                },
                {
                  "name": "3.1.2 Heapify and Heap Sort"
                },
                {
                  "name": "3.1.3 Priority Queues"
                }
              ]
            },
            {
              "name": "3.2 Hash Tables",
              "children": [
                {
                  "name": "3.2.1 Hash Functions and Collision Handling"
                },
                {
                  "name": "3.2.2 Open Addressing and Separate Chaining"
                },
                {
                  "name": "3.2.3 Practical Exercise: Implement a hash table for a simple dictionary"
                }
              ]
            },
            {
              "name": "3.3 Tries",
              "children": [
                {
                  "name": "3.3.1 Basic Trie Implementation"
                },
                {
                  "name": "3.3.2 Applications (Auto-completion, Spell checking)"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Specialized Structures and Applications",
          "children": [
            {
              "name": "4.1 Self-Balancing Trees",
              "children": [
                {
                  "name": "4.1.1 AVL Trees - Detailed Implementation"
                },
                {
                  "name": "4.1.2 Red-Black Trees - Detailed Implementation"
                }
              ]
            },
            {
              "name": "4.2 Disjoint Set Union (DSU)",
              "children": [
                {
                  "name": "4.2.1 Basic Operations (Union, Find)"
                },
                {
                  "name": "4.2.2 Path Compression and Union by Rank"
                },
                {
                  "name": "4.2.3 Applications (Finding Connected Components)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Practice and Projects",
          "children": [
            {
              "name": "5.1 LeetCode/HackerRank Challenges",
              "children": [
                {
                  "name": "5.1.1 Focus on problems related to each data structure learned"
                },
                {
                  "name": "5.1.2 Gradually increase difficulty level"
                }
              ]
            },
            {
              "name": "5.2  Build a Data Structure Focused Project",
              "children": [
                {
                  "name": "5.2.1  Design and implement a system using multiple data structures"
                },
                {
                  "name": "5.2.2 Examples: Simple database, game AI, or a custom data visualization tool"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a database developer",
    "output": {
      "name": "i want to become a database developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Database Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Databases (RDBMS)"
                },
                {
                  "name": "1.1.2 SQL Fundamentals (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "1.1.3 Database Normalization (1NF, 2NF, 3NF)"
                }
              ]
            },
            {
              "name": "1.2 Data Modeling",
              "children": [
                {
                  "name": "1.2.1 Entity-Relationship Diagrams (ERDs)"
                },
                {
                  "name": "1.2.2 Conceptual, Logical, and Physical Data Models"
                },
                {
                  "name": "1.2.3 Practical Exercise: Design an ERD for a simple e-commerce system"
                }
              ]
            },
            {
              "name": "1.3 Relational Algebra and SQL",
              "children": [
                {
                  "name": "1.3.1 Basic Relational Algebra Operations"
                },
                {
                  "name": "1.3.2 Advanced SQL (JOINs, Subqueries, Aggregate Functions)"
                },
                {
                  "name": "1.3.3 Practical Exercise: Write complex SQL queries for a sample database"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Database Systems",
          "children": [
            {
              "name": "2.1 Choosing a Database System",
              "children": [
                {
                  "name": "2.1.1 MySQL"
                },
                {
                  "name": "2.1.2 PostgreSQL"
                },
                {
                  "name": "2.1.3 SQL Server"
                },
                {
                  "name": "2.1.4 Oracle Database"
                }
              ]
            },
            {
              "name": "2.2 Installation and Configuration",
              "children": [
                {
                  "name": "2.2.1 Setting up a local development environment"
                },
                {
                  "name": "2.2.2 Connecting to a database using different tools (e.g., command line, GUI tools)"
                },
                {
                  "name": "2.2.3 User management and security"
                }
              ]
            },
            {
              "name": "2.3 Database Administration",
              "children": [
                {
                  "name": "2.3.1 Backup and Recovery"
                },
                {
                  "name": "2.3.2 Performance Tuning"
                },
                {
                  "name": "2.3.3 Monitoring and Troubleshooting"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced SQL and Techniques",
          "children": [
            {
              "name": "3.1 Indexing and Query Optimization",
              "children": [
                {
                  "name": "3.1.1 Different types of indexes"
                },
                {
                  "name": "3.1.2 Query execution plans"
                },
                {
                  "name": "3.1.3 Practical Exercise: Optimize slow queries in a database"
                }
              ]
            },
            {
              "name": "3.2 Transactions and Concurrency Control",
              "children": [
                {
                  "name": "3.2.1 ACID properties"
                },
                {
                  "name": "3.2.2 Isolation levels"
                },
                {
                  "name": "3.2.3 Locking mechanisms"
                }
              ]
            },
            {
              "name": "3.3 Stored Procedures and Functions",
              "children": [
                {
                  "name": "3.3.1 Creating and using stored procedures"
                },
                {
                  "name": "3.3.2 Creating and using user-defined functions"
                },
                {
                  "name": "3.3.3 Practical Exercise: Develop stored procedures for common database operations"
                }
              ]
            }
          ]
        },
        {
          "name": "4. NoSQL Databases and Cloud",
          "children": [
            {
              "name": "4.1 Introduction to NoSQL Databases",
              "children": [
                {
                  "name": "4.1.1 Different NoSQL database types (Document, Key-Value, Graph, Column-family)"
                },
                {
                  "name": "4.1.2 Use cases for NoSQL databases"
                },
                {
                  "name": "4.1.3 Practical Exercise: Explore a NoSQL database like MongoDB"
                }
              ]
            },
            {
              "name": "4.2 Cloud Databases",
              "children": [
                {
                  "name": "4.2.1 Cloud database services (AWS RDS, Azure SQL Database, Google Cloud SQL)"
                },
                {
                  "name": "4.2.2 Setting up and managing cloud databases"
                },
                {
                  "name": "4.2.3 Cost optimization and scaling"
                }
              ]
            },
            {
              "name": "4.3 Data Security and Privacy",
              "children": [
                {
                  "name": "4.3.1 Implementing security best practices"
                },
                {
                  "name": "4.3.2 Data encryption and access control"
                },
                {
                  "name": "4.3.3 Compliance with data privacy regulations"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics & Projects",
          "children": [
            {
              "name": "5.1 Database Design Patterns",
              "children": [
                {
                  "name": "5.1.1 Understanding common database design patterns"
                },
                {
                  "name": "5.1.2 Applying patterns to real-world scenarios"
                }
              ]
            },
            {
              "name": "5.2 Data Warehousing and Business Intelligence",
              "children": [
                {
                  "name": "5.2.1 ETL processes"
                },
                {
                  "name": "5.2.2 Data visualization tools"
                }
              ]
            },
            {
              "name": "5.3 Capstone Project",
              "children": [
                {
                  "name": "5.3.1 Design, implement, and deploy a complete database application"
                },
                {
                  "name": "5.3.2 Document the entire process"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a network administrator",
    "output": {
      "name": "Become a Network Administrator",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP Model"
                },
                {
                  "name": "1.1.2 OSI Model"
                },
                {
                  "name": "1.1.3 Subnetting and IP Addressing"
                }
              ]
            },
            {
              "name": "1.2 Computer Networking Hardware",
              "children": [
                {
                  "name": "1.2.1 Routers"
                },
                {
                  "name": "1.2.2 Switches"
                },
                {
                  "name": "1.2.3 Firewalls"
                },
                {
                  "name": "1.2.4 Network Interface Cards (NICs)"
                }
              ]
            },
            {
              "name": "1.3 Basic Networking Commands",
              "children": [
                {
                  "name": "1.3.1 ping"
                },
                {
                  "name": "1.3.2 ipconfig/ifconfig"
                },
                {
                  "name": "1.3.3 traceroute/tracert"
                },
                {
                  "name": "1.3.4 nslookup"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Network Operating Systems (NOS)",
          "children": [
            {
              "name": "2.1 Windows Server",
              "children": [
                {
                  "name": "2.1.1 Active Directory"
                },
                {
                  "name": "2.1.2 DHCP Server"
                },
                {
                  "name": "2.1.3 DNS Server"
                },
                {
                  "name": "2.1.4 Project: Configure a basic Windows Server network"
                }
              ]
            },
            {
              "name": "2.2 Linux Server (e.g., Ubuntu, CentOS)",
              "children": [
                {
                  "name": "2.2.1 Basic Linux commands"
                },
                {
                  "name": "2.2.2 Network configuration (using ifconfig/ip, netplan etc.)"
                },
                {
                  "name": "2.2.3 Setting up a DHCP server"
                },
                {
                  "name": "2.2.4 Project: Build a small Linux-based network"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Network Security",
          "children": [
            {
              "name": "3.1 Firewall Configuration",
              "children": [
                {
                  "name": "3.1.1 Understanding Firewall Rules"
                },
                {
                  "name": "3.1.2 Port Forwarding"
                },
                {
                  "name": "3.1.3 Implementing basic firewall security on a router/firewall"
                }
              ]
            },
            {
              "name": "3.2 Network Intrusion Detection/Prevention",
              "children": [
                {
                  "name": "3.2.1 Basic concepts of IDS/IPS"
                },
                {
                  "name": "3.2.2 Log analysis"
                }
              ]
            },
            {
              "name": "3.3 VPNs and Tunneling",
              "children": [
                {
                  "name": "3.3.1 VPN protocols (PPTP, OpenVPN, IPsec)"
                },
                {
                  "name": "3.3.2 Setting up a simple VPN"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Networking Concepts",
          "children": [
            {
              "name": "4.1 Routing Protocols",
              "children": [
                {
                  "name": "4.1.1 RIP"
                },
                {
                  "name": "4.1.2 OSPF"
                },
                {
                  "name": "4.1.3 BGP"
                }
              ]
            },
            {
              "name": "4.2 Network Monitoring and Management",
              "children": [
                {
                  "name": "4.2.1 Network monitoring tools (e.g., Nagios, Zabbix)"
                },
                {
                  "name": "4.2.2 Log management"
                }
              ]
            },
            {
              "name": "4.3 Cloud Networking",
              "children": [
                {
                  "name": "4.3.1 Virtual Private Clouds (VPCs)"
                },
                {
                  "name": "4.3.2 Cloud firewalls"
                },
                {
                  "name": "4.3.3 Basic AWS/Azure networking concepts"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Practical Experience",
          "children": [
            {
              "name": "5.1 Hands-on Labs",
              "children": [
                {
                  "name": "5.1.1 Setting up a home lab network"
                },
                {
                  "name": "5.1.2 Working with Virtual Machines (VMware, VirtualBox)"
                },
                {
                  "name": "5.1.3 Participating in Capture the Flag (CTF) competitions"
                }
              ]
            },
            {
              "name": "5.2 Certifications",
              "children": [
                {
                  "name": "5.2.1 CompTIA Network+"
                },
                {
                  "name": "5.2.2 Cisco CCNA"
                }
              ]
            },
            {
              "name": "5.3 Networking Internships/Jobs",
              "children": [
                {
                  "name": "5.3.1 Seek entry-level networking roles"
                },
                {
                  "name": "5.3.2 Network related Volunteer opportunities"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a network administrator",
    "output": {
      "name": "I want to become a Network Administrator",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP Model"
                },
                {
                  "name": "1.1.2 Subnetting and IP Addressing"
                },
                {
                  "name": "1.1.3 Network Topologies (Star, Bus, Ring, Mesh)"
                }
              ]
            },
            {
              "name": "1.2 Operating Systems",
              "children": [
                {
                  "name": "1.2.1 Linux Fundamentals (command line, basic administration)"
                },
                {
                  "name": "1.2.2 Windows Server Fundamentals (Active Directory basics)"
                },
                {
                  "name": "1.2.3 Practical Exercise: Setting up a basic Linux server"
                }
              ]
            },
            {
              "name": "1.3 Network Devices",
              "children": [
                {
                  "name": "1.3.1 Routers: Basic configuration and routing protocols (RIP, Static Routing)"
                },
                {
                  "name": "1.3.2 Switches: VLANs, trunking, spanning tree protocol"
                },
                {
                  "name": "1.3.3 Firewalls: Basic firewall rules and concepts"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Network Security",
          "children": [
            {
              "name": "2.1 Security Concepts",
              "children": [
                {
                  "name": "2.1.1 Access Control Lists (ACLs)"
                },
                {
                  "name": "2.1.2 Firewalls (Stateful inspection, application-level firewalls)"
                },
                {
                  "name": "2.1.3 VPNs (IPsec, SSL/TLS VPNs)"
                }
              ]
            },
            {
              "name": "2.2 Network Monitoring and Intrusion Detection",
              "children": [
                {
                  "name": "2.2.1 Network Monitoring Tools (SNMP, Nagios, Zabbix)"
                },
                {
                  "name": "2.2.2 Intrusion Detection Systems (IDS/IPS)"
                },
                {
                  "name": "2.2.3 Practical Exercise: Setting up basic network monitoring on a small network"
                }
              ]
            },
            {
              "name": "2.3 Security Best Practices",
              "children": [
                {
                  "name": "2.3.1 Security Audits"
                },
                {
                  "name": "2.3.2 Vulnerability Scanning"
                },
                {
                  "name": "2.3.3 Penetration Testing (basics)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Network Administration Tools",
          "children": [
            {
              "name": "3.1 Command-Line Tools",
              "children": [
                {
                  "name": "3.1.1 ping, traceroute, nslookup"
                },
                {
                  "name": "3.1.2 ipconfig/ifconfig, netstat"
                },
                {
                  "name": "3.1.3 Practical Exercise: Troubleshooting network connectivity using command-line tools"
                }
              ]
            },
            {
              "name": "3.2 Network Management Systems (NMS)",
              "children": [
                {
                  "name": "3.2.1 SolarWinds, PRTG, ManageEngine"
                },
                {
                  "name": "3.2.2 Learning to use at least one NMS for monitoring and management"
                },
                {
                  "name": "3.2.3 Practical Exercise:  Monitoring a small network using an NMS"
                }
              ]
            },
            {
              "name": "3.3 Automation Tools",
              "children": [
                {
                  "name": "3.3.1 Ansible, Puppet, Chef (basics)"
                },
                {
                  "name": "3.3.2 Scripting (Bash, PowerShell)"
                },
                {
                  "name": "3.3.3 Practical Exercise: Automate a simple network task using scripting"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Cloud Networking",
          "children": [
            {
              "name": "4.1 Cloud Providers",
              "children": [
                {
                  "name": "4.1.1 AWS, Azure, Google Cloud Platform (GCP): Basic Concepts"
                },
                {
                  "name": "4.1.2 Virtual Private Clouds (VPCs)"
                },
                {
                  "name": "4.1.3 Cloud Networking Services"
                }
              ]
            },
            {
              "name": "4.2 Cloud Security",
              "children": [
                {
                  "name": "4.2.1 Cloud Security Best Practices"
                },
                {
                  "name": "4.2.2 IAM (Identity and Access Management)"
                },
                {
                  "name": "4.2.3 Security Groups and Network ACLs in cloud environments"
                }
              ]
            },
            {
              "name": "4.3 Hybrid Cloud Networking",
              "children": [
                {
                  "name": "4.3.1 Connecting on-premises networks to cloud environments"
                },
                {
                  "name": "4.3.2 VPN Connections"
                },
                {
                  "name": "4.3.3 Hybrid Cloud Security Considerations"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Certification",
          "children": [
            {
              "name": "5.1 Advanced Routing Protocols",
              "children": [
                {
                  "name": "5.1.1 OSPF, EIGRP, BGP"
                },
                {
                  "name": "5.1.2  Practical Exercise: Configure OSPF on a router simulator"
                }
              ]
            },
            {
              "name": "5.2 Network Design and Implementation",
              "children": [
                {
                  "name": "5.2.1 Designing and implementing larger networks"
                },
                {
                  "name": "5.2.2 Network documentation and diagrams"
                }
              ]
            },
            {
              "name": "5.3 Certifications",
              "children": [
                {
                  "name": "5.3.1 CompTIA Network+, CCNA, CCNP"
                },
                {
                  "name": "5.3.2  Choose a certification path based on your career goals"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a cloud data architect",
    "output": {
      "name": "i want to become a cloud data architect",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Database Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Databases (SQL, MySQL, PostgreSQL)"
                },
                {
                  "name": "1.1.2 NoSQL Databases (MongoDB, Cassandra, Redis)"
                },
                {
                  "name": "1.1.3 Data Modeling (ER Diagrams, Schema Design)"
                }
              ]
            },
            {
              "name": "1.2 Data Warehousing and ETL",
              "children": [
                {
                  "name": "1.2.1 Data Warehousing Principles (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "1.2.2 ETL Processes (Extract, Transform, Load)"
                },
                {
                  "name": "1.2.3 ETL Tools (Informatica PowerCenter, Apache Kafka, Apache NiFi)"
                }
              ]
            },
            {
              "name": "1.3 Cloud Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Cloud Computing Models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.3.2 Cloud Providers (AWS, Azure, GCP) - choose one to focus on initially"
                },
                {
                  "name": "1.3.3 Basic Networking Concepts (Virtual Networks, Subnets, Security Groups)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Cloud Data Services",
          "children": [
            {
              "name": "2.1 Cloud Data Storage",
              "children": [
                {
                  "name": "2.1.1 Object Storage (S3, Azure Blob Storage, Google Cloud Storage)"
                },
                {
                  "name": "2.1.2 Data Lakes (AWS S3, Azure Data Lake Storage, Google Cloud Storage)"
                },
                {
                  "name": "2.1.3 Data Warehousing Services (Snowflake, Redshift, BigQuery) - Hands-on project: build a data warehouse on chosen cloud provider"
                }
              ]
            },
            {
              "name": "2.2 Data Processing and Analytics",
              "children": [
                {
                  "name": "2.2.1 Big Data Technologies (Hadoop, Spark, Hive)"
                },
                {
                  "name": "2.2.2 Serverless Computing (AWS Lambda, Azure Functions, Google Cloud Functions)"
                },
                {
                  "name": "2.2.3 Stream Processing (Apache Flink, Apache Kafka Streams)"
                }
              ]
            },
            {
              "name": "2.3 Data Integration and Orchestration",
              "children": [
                {
                  "name": "2.3.1 Cloud-based ETL/ELT Tools"
                },
                {
                  "name": "2.3.2 Data Pipelines (Airflow, Dataflow)"
                },
                {
                  "name": "2.3.3 API Integrations"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Data Governance and Security",
              "children": [
                {
                  "name": "3.1.1 Data Security Best Practices"
                },
                {
                  "name": "3.1.2 Access Control and Identity Management"
                },
                {
                  "name": "3.1.3 Data Encryption and Compliance (GDPR, HIPAA)"
                }
              ]
            },
            {
              "name": "3.2 Data Modeling for the Cloud",
              "children": [
                {
                  "name": "3.2.1 Designing for Scalability and Performance"
                },
                {
                  "name": "3.2.2 Data Partitioning and Sharding"
                },
                {
                  "name": "3.2.3 Choosing the right database for the task"
                }
              ]
            },
            {
              "name": "3.3 Cloud Architecture Design Principles",
              "children": [
                {
                  "name": "3.3.1 Designing for High Availability and Disaster Recovery"
                },
                {
                  "name": "3.3.2 Cost Optimization Strategies"
                },
                {
                  "name": "3.3.3 Monitoring and Logging"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialization and Deployment",
          "children": [
            {
              "name": "4.1 Choose a Specialization",
              "children": [
                {
                  "name": "4.1.1 Data warehousing and Business Intelligence"
                },
                {
                  "name": "4.1.2 Machine Learning on Big Data"
                },
                {
                  "name": "4.1.3 Real-time Data Streaming and Analytics"
                }
              ]
            },
            {
              "name": "4.2 Deployment and Operations",
              "children": [
                {
                  "name": "4.2.1 Infrastructure as Code (Terraform, CloudFormation)"
                },
                {
                  "name": "4.2.2 CI/CD for Data Pipelines"
                },
                {
                  "name": "4.2.3 Monitoring and Alerting"
                }
              ]
            },
            {
              "name": "4.3  Networking and Security in depth",
              "children": [
                {
                  "name": "4.3.1 VPCs, Subnets, and Security Groups"
                },
                {
                  "name": "4.3.2 IAM Roles and Policies"
                },
                {
                  "name": "4.3.3 Network Security best practices for cloud data"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio and Career Development",
          "children": [
            {
              "name": "5.1 Building a Portfolio",
              "children": [
                {
                  "name": "5.1.1 Personal Projects (e.g., building a data pipeline, ETL process, dashboard)"
                },
                {
                  "name": "5.1.2 Contributing to Open Source"
                },
                {
                  "name": "5.1.3 Participating in Kaggle Competitions"
                }
              ]
            },
            {
              "name": "5.2 Networking and Job Search",
              "children": [
                {
                  "name": "5.2.1 Attending industry events and conferences"
                },
                {
                  "name": "5.2.2 Building your professional network on LinkedIn"
                },
                {
                  "name": "5.2.3 Tailoring your resume and cover letter"
                }
              ]
            },
            {
              "name": "5.3 Certifications",
              "children": [
                {
                  "name": "5.3.1 Cloud Provider Certifications (AWS, Azure, GCP)"
                },
                {
                  "name": "5.3.2 Data Engineering Certifications"
                },
                {
                  "name": "5.3.3 Big Data Certifications"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want become a robotics engineer",
    "output": {
      "name": "Become a Robotics Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus (Differential and Integral)"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Physics",
              "children": [
                {
                  "name": "1.2.1 Classical Mechanics"
                },
                {
                  "name": "1.2.2 Dynamics and Kinematics"
                },
                {
                  "name": "1.2.3 Electricity and Magnetism"
                }
              ]
            },
            {
              "name": "1.3 Computer Science Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Programming (Python, C++)"
                },
                {
                  "name": "1.3.2 Data Structures and Algorithms"
                },
                {
                  "name": "1.3.3 Introduction to Operating Systems"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Robotics Core Concepts",
          "children": [
            {
              "name": "2.1 Robotics Kinematics",
              "children": [
                {
                  "name": "2.1.1 Forward and Inverse Kinematics"
                },
                {
                  "name": "2.1.2 Jacobian Matrix"
                },
                {
                  "name": "2.1.3 Trajectory Planning (Project: Simulate a robot arm moving to a target)"
                }
              ]
            },
            {
              "name": "2.2 Robotics Dynamics",
              "children": [
                {
                  "name": "2.2.1 Lagrangian and Euler-Lagrange Equations"
                },
                {
                  "name": "2.2.2 Robot Control (PID Control)"
                },
                {
                  "name": "2.2.3 Dynamic Simulation (Project: Simulate a robot arm's dynamic behavior)"
                }
              ]
            },
            {
              "name": "2.3 Sensors and Actuators",
              "children": [
                {
                  "name": "2.3.1 Types of Sensors (IMU, LiDAR, Camera)"
                },
                {
                  "name": "2.3.2 Actuator Types (Motors, Servos)"
                },
                {
                  "name": "2.3.3 Sensor Fusion (Project: Integrate sensor data to estimate robot pose)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Robotics Software and Hardware",
          "children": [
            {
              "name": "3.1 Embedded Systems",
              "children": [
                {
                  "name": "3.1.1 Microcontrollers (Arduino, Raspberry Pi)"
                },
                {
                  "name": "3.1.2 Real-Time Operating Systems (RTOS)"
                },
                {
                  "name": "3.1.3 Low-level Programming (Project: Control a robot using a microcontroller)"
                }
              ]
            },
            {
              "name": "3.2 Robot Operating System (ROS)",
              "children": [
                {
                  "name": "3.2.1 ROS Basics (Topics, Nodes, Services)"
                },
                {
                  "name": "3.2.2 ROS packages and libraries"
                },
                {
                  "name": "3.2.3 ROS Navigation (Project: Implement basic navigation in a simulated environment)"
                }
              ]
            },
            {
              "name": "3.3 Computer Vision for Robotics",
              "children": [
                {
                  "name": "3.3.1 Image Processing"
                },
                {
                  "name": "3.3.2 Object Detection and Recognition"
                },
                {
                  "name": "3.3.3 SLAM (Simultaneous Localization and Mapping) (Project: Implement object detection for a robot arm)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized Areas and Applications",
          "children": [
            {
              "name": "4.1 Mobile Robotics",
              "children": [
                {
                  "name": "4.1.1 Mobile Robot Platforms"
                },
                {
                  "name": "4.1.2 Navigation Algorithms"
                },
                {
                  "name": "4.1.3 Path Planning (Project: Implement path planning for a mobile robot in a simulated environment)"
                }
              ]
            },
            {
              "name": "4.2 Manipulation Robotics",
              "children": [
                {
                  "name": "4.2.1 Grasp Planning"
                },
                {
                  "name": "4.2.2 Force Control"
                },
                {
                  "name": "4.2.3 Advanced Robot Arm Control (Project: Design and build a robotic arm that performs a specific task)"
                }
              ]
            },
            {
              "name": "4.3 AI and Machine Learning in Robotics",
              "children": [
                {
                  "name": "4.3.1 Reinforcement Learning"
                },
                {
                  "name": "4.3.2 Deep Learning for Robotics"
                },
                {
                  "name": "4.3.3 Robot Learning from Demonstration (Project: Train a robot to perform a task using reinforcement learning)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Career Development",
          "children": [
            {
              "name": "5.1 Internship and Research",
              "children": [
                {
                  "name": "5.1.1 Seek internships at robotics companies"
                },
                {
                  "name": "5.1.2 Participate in research projects related to robotics"
                }
              ]
            },
            {
              "name": "5.2 Networking and Collaboration",
              "children": [
                {
                  "name": "5.2.1 Attend robotics conferences and workshops"
                },
                {
                  "name": "5.2.2 Join online robotics communities"
                }
              ]
            },
            {
              "name": "5.3 Portfolio Building",
              "children": [
                {
                  "name": "5.3.1 Document your projects and share them online"
                },
                {
                  "name": "5.3.2 Build a strong online presence"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want become a robotics engineer",
    "output": {
      "name": "I want to become a Robotics Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus (Differential & Integral)"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Physics",
              "children": [
                {
                  "name": "1.2.1 Classical Mechanics"
                },
                {
                  "name": "1.2.2 Dynamics and Kinematics"
                },
                {
                  "name": "1.2.3 Electricity and Magnetism"
                }
              ]
            },
            {
              "name": "1.3 Computer Science Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Programming (Python, C++)"
                },
                {
                  "name": "1.3.2 Data Structures and Algorithms"
                },
                {
                  "name": "1.3.3 Introduction to Operating Systems"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Robotics Core Concepts",
          "children": [
            {
              "name": "2.1 Robotics Kinematics",
              "children": [
                {
                  "name": "2.1.1 Forward and Inverse Kinematics"
                },
                {
                  "name": "2.1.2 Jacobian Matrix"
                },
                {
                  "name": "2.1.3 Trajectory Planning - Project: Simulate a robotic arm moving along a path"
                }
              ]
            },
            {
              "name": "2.2 Robotics Dynamics",
              "children": [
                {
                  "name": "2.2.1 Lagrangian and Euler-Lagrange Equations"
                },
                {
                  "name": "2.2.2 Robot Control Systems"
                },
                {
                  "name": "2.2.3 Dynamic Simulation - Project: Simulate a robot's movement under gravity and external forces"
                }
              ]
            },
            {
              "name": "2.3 Sensors and Actuators",
              "children": [
                {
                  "name": "2.3.1 Types of Sensors (e.g., IMU, LiDAR, Cameras)"
                },
                {
                  "name": "2.3.2 Actuator Technologies (e.g., Motors, Servos)"
                },
                {
                  "name": "2.3.3 Sensor Fusion and Data Integration - Project: Integrate data from multiple sensors to estimate robot pose"
                }
              ]
            }
          ]
        },
        {
          "name": "3.  Control Systems and Programming",
          "children": [
            {
              "name": "3.1 Control Theory",
              "children": [
                {
                  "name": "3.1.1 PID Control"
                },
                {
                  "name": "3.1.2 State-Space Representation"
                },
                {
                  "name": "3.1.3 Advanced Control Techniques (e.g., Model Predictive Control)"
                }
              ]
            },
            {
              "name": "3.2 Embedded Systems",
              "children": [
                {
                  "name": "3.2.1 Microcontroller Programming (e.g., Arduino, Raspberry Pi)"
                },
                {
                  "name": "3.2.2 Real-Time Operating Systems (RTOS)"
                },
                {
                  "name": "3.2.3 Interfacing with Hardware - Project: Build a simple robotic arm controlled by a microcontroller"
                }
              ]
            },
            {
              "name": "3.3 Robot Software Frameworks",
              "children": [
                {
                  "name": "3.3.1 ROS (Robot Operating System)"
                },
                {
                  "name": "3.3.2 Gazebo (Robot Simulator)"
                },
                {
                  "name": "3.3.3 RViz (3D Visualization Tool) - Project: Build a simple robot simulation using ROS and Gazebo"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specializations and Advanced Topics",
          "children": [
            {
              "name": "4.1 Mobile Robotics",
              "children": [
                {
                  "name": "4.1.1 SLAM (Simultaneous Localization and Mapping)"
                },
                {
                  "name": "4.1.2 Navigation Algorithms"
                },
                {
                  "name": "4.1.3 Path Planning - Project: Implement a navigation algorithm for a simulated mobile robot"
                }
              ]
            },
            {
              "name": "4.2 Computer Vision for Robotics",
              "children": [
                {
                  "name": "4.2.1 Image Processing"
                },
                {
                  "name": "4.2.2 Object Detection and Recognition"
                },
                {
                  "name": "4.2.3 3D Vision - Project: Implement object recognition and tracking for a robotic manipulator"
                }
              ]
            },
            {
              "name": "4.3 AI and Machine Learning in Robotics",
              "children": [
                {
                  "name": "4.3.1 Reinforcement Learning"
                },
                {
                  "name": "4.3.2 Deep Learning for Robotics"
                },
                {
                  "name": "4.3.3 Robotics applications of AI - Project: Train a reinforcement learning agent to control a simple robot"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Career Development",
          "children": [
            {
              "name": "5.1 Building a Portfolio",
              "children": [
                {
                  "name": "5.1.1 Personal Projects"
                },
                {
                  "name": "5.1.2 Open Source Contributions"
                },
                {
                  "name": "5.1.3 Competitions (e.g., RoboCup)"
                }
              ]
            },
            {
              "name": "5.2 Networking and Industry Connections",
              "children": [
                {
                  "name": "5.2.1 Attending Conferences and Workshops"
                },
                {
                  "name": "5.2.2 Joining Robotics Communities"
                },
                {
                  "name": "5.2.3 Internships"
                }
              ]
            },
            {
              "name": "5.3 Advanced Degrees (Optional)",
              "children": [
                {
                  "name": "5.3.1 Masters in Robotics"
                },
                {
                  "name": "5.3.2 PhD in Robotics"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a chatbot developer",
    "output": {
      "name": "I want to become a chatbot developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals (variables, data types, loops, functions)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (classes, objects, inheritance)"
                },
                {
                  "name": "1.1.3 Basic Data Structures (lists, dictionaries, sets)"
                },
                {
                  "name": "1.1.4 Project: Build a simple calculator application"
                }
              ]
            },
            {
              "name": "1.2 Natural Language Processing (NLP) Basics",
              "children": [
                {
                  "name": "1.2.1 Text preprocessing (tokenization, stemming, lemmatization)"
                },
                {
                  "name": "1.2.2 Regular expressions"
                },
                {
                  "name": "1.2.3 Part-of-speech tagging"
                },
                {
                  "name": "1.2.4 Project: Create a simple text analyzer"
                }
              ]
            },
            {
              "name": "1.3  Introduction to Machine Learning",
              "children": [
                {
                  "name": "1.3.1 Supervised Learning (classification, regression)"
                },
                {
                  "name": "1.3.2 Unsupervised Learning (clustering)"
                },
                {
                  "name": "1.3.3 Model Evaluation Metrics"
                },
                {
                  "name": "1.3.4 Project: Build a simple sentiment analysis model"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Chatbot Architectures & Frameworks",
          "children": [
            {
              "name": "2.1 Rule-based Chatbots",
              "children": [
                {
                  "name": "2.1.1 Defining intent and entities"
                },
                {
                  "name": "2.1.2 Building dialogue flows"
                },
                {
                  "name": "2.1.3 Implementing a rule-based chatbot using Python"
                }
              ]
            },
            {
              "name": "2.2  Retrieval-based Chatbots",
              "children": [
                {
                  "name": "2.2.1 Building a knowledge base"
                },
                {
                  "name": "2.2.2 Implementing cosine similarity for matching"
                },
                {
                  "name": "2.2.3 Using a vector database (e.g., FAISS, Pinecone)"
                }
              ]
            },
            {
              "name": "2.3 Generative Chatbots (Large Language Models)",
              "children": [
                {
                  "name": "2.3.1 Understanding Transformer architectures"
                },
                {
                  "name": "2.3.2 Using pre-trained models (e.g., GPT-3, BERT)"
                },
                {
                  "name": "2.3.3 Fine-tuning models for specific tasks"
                },
                {
                  "name": "2.3.4 Project: Build a simple generative chatbot using a pre-trained model"
                }
              ]
            }
          ]
        },
        {
          "name": "3.  Deployment and APIs",
          "children": [
            {
              "name": "3.1 API Integration",
              "children": [
                {
                  "name": "3.1.1 REST APIs"
                },
                {
                  "name": "3.1.2 Webhooks"
                },
                {
                  "name": "3.1.3 Integrating chatbot with messaging platforms (e.g., Slack, Telegram)"
                }
              ]
            },
            {
              "name": "3.2 Cloud Deployment",
              "children": [
                {
                  "name": "3.2.1  Deploying using platforms like AWS, Google Cloud, or Azure"
                },
                {
                  "name": "3.2.2 Containerization using Docker"
                },
                {
                  "name": "3.2.3 Serverless functions"
                }
              ]
            },
            {
              "name": "3.3  Testing and Monitoring",
              "children": [
                {
                  "name": "3.3.1 Unit testing"
                },
                {
                  "name": "3.3.2 Integration testing"
                },
                {
                  "name": "3.3.3 Monitoring chatbot performance"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Dialogue Management",
              "children": [
                {
                  "name": "4.1.1 Contextual understanding"
                },
                {
                  "name": "4.1.2 Dialogue state tracking"
                },
                {
                  "name": "4.1.3 Policy learning"
                }
              ]
            },
            {
              "name": "4.2  Multimodal Chatbots",
              "children": [
                {
                  "name": "4.2.1 Integrating voice recognition"
                },
                {
                  "name": "4.2.2 Integrating image recognition"
                },
                {
                  "name": "4.2.3 Handling different input modalities"
                }
              ]
            },
            {
              "name": "4.3  Ethical Considerations",
              "children": [
                {
                  "name": "4.3.1 Bias in datasets"
                },
                {
                  "name": "4.3.2 Privacy concerns"
                },
                {
                  "name": "4.3.3 Responsible AI practices"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Portfolio and Job Search",
          "children": [
            {
              "name": "5.1 Building a Portfolio",
              "children": [
                {
                  "name": "5.1.1 Showcase your chatbot projects"
                },
                {
                  "name": "5.1.2  Create a GitHub repository"
                },
                {
                  "name": "5.1.3  Write a compelling project description"
                }
              ]
            },
            {
              "name": "5.2  Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1 Networking"
                },
                {
                  "name": "5.2.2 Applying for relevant job postings"
                },
                {
                  "name": "5.2.3  Preparing for technical interviews"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a game designer",
    "output": {
      "name": "I want to become a Game Designer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Game Design Principles",
              "children": [
                {
                  "name": "1.1.1 Game Mechanics"
                },
                {
                  "name": "1.1.2 Game Balance"
                },
                {
                  "name": "1.1.3 Player Experience (UX/UI)"
                },
                {
                  "name": "1.1.4 Game Genres and Conventions"
                }
              ]
            },
            {
              "name": "1.2 Game Design Theory",
              "children": [
                {
                  "name": "1.2.1 Game Design Documents (GDDs)"
                },
                {
                  "name": "1.2.2 Game Loops and Player Progression"
                },
                {
                  "name": "1.2.3 Level Design Principles"
                },
                {
                  "name": "1.2.4  Iterative Design and Playtesting"
                }
              ]
            },
            {
              "name": "1.3 Storytelling and Narrative Design",
              "children": [
                {
                  "name": "1.3.1 Narrative Structure (e.g., Three-Act Structure)"
                },
                {
                  "name": "1.3.2 Character Development"
                },
                {
                  "name": "1.3.3 World-building"
                },
                {
                  "name": "1.3.4  Project: Design a simple narrative for a card game"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Skill Development",
          "children": [
            {
              "name": "2.1 Game Engines",
              "children": [
                {
                  "name": "2.1.1 Unity Basics (Tutorials & Simple Projects)"
                },
                {
                  "name": "2.1.2 Unreal Engine Basics (Tutorials & Simple Projects)"
                },
                {
                  "name": "2.1.3  Choosing the right engine for your project"
                }
              ]
            },
            {
              "name": "2.2 Programming Fundamentals",
              "children": [
                {
                  "name": "2.2.1 C# for Unity"
                },
                {
                  "name": "2.2.2 C++ for Unreal Engine"
                },
                {
                  "name": "2.2.3  Basic Scripting for Game Logic"
                }
              ]
            },
            {
              "name": "2.3 Art and Visual Design",
              "children": [
                {
                  "name": "2.3.1 Basic 2D Art Skills (Pixel Art, Sprite Creation)"
                },
                {
                  "name": "2.3.2 Basic 3D Modeling (Blender, Maya, 3ds Max)"
                },
                {
                  "name": "2.3.3  Understanding Color Theory and Composition"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Project Portfolio",
          "children": [
            {
              "name": "3.1 Small Game Projects",
              "children": [
                {
                  "name": "3.1.1  Simple Board Game Design"
                },
                {
                  "name": "3.1.2  Simple 2D Platformer (Unity or other engine)"
                },
                {
                  "name": "3.1.3  Small Card Game Design and Prototyping"
                }
              ]
            },
            {
              "name": "3.2 Intermediate Game Projects",
              "children": [
                {
                  "name": "3.2.1  2D RPG"
                },
                {
                  "name": "3.2.2  3D Puzzle Game"
                },
                {
                  "name": "3.2.3  Focus on one genre to build a strong portfolio"
                }
              ]
            },
            {
              "name": "3.3 Advanced Game Projects",
              "children": [
                {
                  "name": "3.3.1 Larger Scale Game Project"
                },
                {
                  "name": "3.3.2  Collaboration with other game developers"
                },
                {
                  "name": "3.3.3  Portfolios and online presence creation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Industry Knowledge",
          "children": [
            {
              "name": "4.1 Game Industry Trends",
              "children": [
                {
                  "name": "4.1.1 Following industry news and publications"
                },
                {
                  "name": "4.1.2 Attending game development conferences (GDC, etc.)"
                },
                {
                  "name": "4.1.3 Understanding monetization strategies"
                }
              ]
            },
            {
              "name": "4.2 Networking and Job Hunting",
              "children": [
                {
                  "name": "4.2.1 Building connections with other game developers"
                },
                {
                  "name": "4.2.2 Creating a professional online presence (LinkedIn, portfolio website)"
                },
                {
                  "name": "4.2.3  Applying for internships and jobs"
                }
              ]
            },
            {
              "name": "4.3 Game Design Tools and Software",
              "children": [
                {
                  "name": "4.3.1  Version control systems (Git)"
                },
                {
                  "name": "4.3.2  Project management tools (Trello, Jira)"
                },
                {
                  "name": "4.3.3  Specialized game design software"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning",
          "children": [
            {
              "name": "5.1  Online Courses and Tutorials",
              "children": [
                {
                  "name": "5.1.1 Udemy, Coursera, etc."
                },
                {
                  "name": "5.1.2  YouTube tutorials"
                },
                {
                  "name": "5.1.3  Following industry blogs and forums"
                }
              ]
            },
            {
              "name": "5.2  Mentorship and Feedback",
              "children": [
                {
                  "name": "5.2.1  Seeking feedback from experienced game designers"
                },
                {
                  "name": "5.2.2  Joining game development communities"
                },
                {
                  "name": "5.2.3  Participating in game jams"
                }
              ]
            },
            {
              "name": "5.3  Staying Updated",
              "children": [
                {
                  "name": "5.3.1  Reading game design books"
                },
                {
                  "name": "5.3.2  Following industry trends"
                },
                {
                  "name": "5.3.3  Continuously improving skills"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn flutter",
    "output": {
      "name": "Learn Flutter",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Dart Programming Language",
              "children": [
                {
                  "name": "1.1.1 Data Types & Variables"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions & OOP Concepts (Classes, Objects)"
                },
                {
                  "name": "1.1.4 Null Safety & Exception Handling"
                }
              ]
            },
            {
              "name": "1.2 Flutter Basics",
              "children": [
                {
                  "name": "1.2.1 Setting up Development Environment"
                },
                {
                  "name": "1.2.2 Widgets and Widget Tree"
                },
                {
                  "name": "1.2.3 Layouts (Row, Column, Stack, etc.)"
                },
                {
                  "name": "1.2.4 Basic UI Elements (Text, Buttons, Images)"
                }
              ]
            },
            {
              "name": "1.3 Project: Simple Calculator App",
              "children": [
                {
                  "name": "1.3.1 Design UI with basic widgets"
                },
                {
                  "name": "1.3.2 Implement basic arithmetic operations"
                },
                {
                  "name": "1.3.3 Handle user input"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Flutter",
          "children": [
            {
              "name": "2.1 State Management",
              "children": [
                {
                  "name": "2.1.1 setState() and StatefulWidget"
                },
                {
                  "name": "2.1.2 Provider"
                },
                {
                  "name": "2.1.3 BLoC Pattern (optional, more advanced)"
                }
              ]
            },
            {
              "name": "2.2 Navigation and Routing",
              "children": [
                {
                  "name": "2.2.1 Navigator and Route"
                },
                {
                  "name": "2.2.2 Named Routes"
                },
                {
                  "name": "2.2.3 Passing data between screens"
                }
              ]
            },
            {
              "name": "2.3 Asynchronous Programming",
              "children": [
                {
                  "name": "2.3.1 Futures and Async/Await"
                },
                {
                  "name": "2.3.2 HTTP requests with http package"
                },
                {
                  "name": "2.3.3 Handling errors in asynchronous operations"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Flutter",
          "children": [
            {
              "name": "3.1 Animations and Transitions",
              "children": [
                {
                  "name": "3.1.1 Animated widgets"
                },
                {
                  "name": "3.1.2 Hero animations"
                },
                {
                  "name": "3.1.3 Custom animations"
                }
              ]
            },
            {
              "name": "3.2 Testing",
              "children": [
                {
                  "name": "3.2.1 Widget testing"
                },
                {
                  "name": "3.2.2 Integration testing"
                },
                {
                  "name": "3.2.3 Unit testing"
                }
              ]
            },
            {
              "name": "3.3 Platform Channels (Native communication)",
              "children": [
                {
                  "name": "3.3.1 Method Channels"
                },
                {
                  "name": "3.3.2 Event Channels"
                },
                {
                  "name": "3.3.3 Platform specific code"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Building Real-World Apps",
          "children": [
            {
              "name": "4.1 Project: To-Do List App",
              "children": [
                {
                  "name": "4.1.1 Database Integration (e.g., SQLite, Firebase)"
                },
                {
                  "name": "4.1.2 User Authentication"
                },
                {
                  "name": "4.1.3 Implementing CRUD operations"
                }
              ]
            },
            {
              "name": "4.2 Project: E-commerce App (simplified)",
              "children": [
                {
                  "name": "4.2.1  Product listing and details screens"
                },
                {
                  "name": "4.2.2 Shopping cart implementation"
                },
                {
                  "name": "4.2.3 Payment gateway integration (optional, advanced)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Beyond",
          "children": [
            {
              "name": "5.1 Publishing to App Stores",
              "children": [
                {
                  "name": "5.1.1 Android App Bundle"
                },
                {
                  "name": "5.1.2 iOS App Store Connect"
                },
                {
                  "name": "5.1.3 Code Signing and Provisioning"
                }
              ]
            },
            {
              "name": "5.2 State Management Advanced",
              "children": [
                {
                  "name": "5.2.1 Riverpod"
                },
                {
                  "name": "5.2.2 BLoC with Cubit"
                }
              ]
            },
            {
              "name": "5.3 Advanced UI Techniques",
              "children": [
                {
                  "name": "5.3.1 Custom Painters"
                },
                {
                  "name": "5.3.2 Custom Scroll Views"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn prompt engineering",
    "output": {
      "name": "i want to learn prompt engineering",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Understanding Large Language Models (LLMs)"
                },
                {
                  "name": "1.1.2 Prompt Types (Instruction, Question, Completion)"
                },
                {
                  "name": "1.1.3 Basic Prompt Structure and Syntax"
                }
              ]
            },
            {
              "name": "1.2 Practical Prompting Techniques",
              "children": [
                {
                  "name": "1.2.1 Few-Shot Learning"
                },
                {
                  "name": "1.2.2 Chain-of-Thought Prompting"
                },
                {
                  "name": "1.2.3 Zero-Shot and One-Shot Prompting"
                }
              ]
            },
            {
              "name": "1.3 Prompt Engineering Tools",
              "children": [
                {
                  "name": "1.3.1 Choosing the Right LLM (OpenAI, Google AI, etc.)"
                },
                {
                  "name": "1.3.2 Using APIs and SDKs"
                },
                {
                  "name": "1.3.3 Experimenting with different prompt formats"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Techniques",
          "children": [
            {
              "name": "2.1 Advanced Prompting Strategies",
              "children": [
                {
                  "name": "2.1.1 Prompt Chaining"
                },
                {
                  "name": "2.1.2 Self-Consistency"
                },
                {
                  "name": "2.1.3 Tree-of-Thought Prompting"
                }
              ]
            },
            {
              "name": "2.2 Controlling Output Style and Format",
              "children": [
                {
                  "name": "2.2.1 Specifying Desired Length and Tone"
                },
                {
                  "name": "2.2.2 Formatting Output (JSON, Markdown, etc.)"
                },
                {
                  "name": "2.2.3 Controlling Creativity and Specificity"
                }
              ]
            },
            {
              "name": "2.3 Prompt Debugging and Refinement",
              "children": [
                {
                  "name": "2.3.1 Identifying and Addressing Ambiguity"
                },
                {
                  "name": "2.3.2 Iterative Prompt Improvement"
                },
                {
                  "name": "2.3.3 Analyzing Model Output for Errors"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Applications and Use Cases",
          "children": [
            {
              "name": "3.1 Text Generation",
              "children": [
                {
                  "name": "3.1.1 Story Writing"
                },
                {
                  "name": "3.1.2 Article Summarization"
                },
                {
                  "name": "3.1.3 Creative Content Generation (Poetry, Code, etc.)"
                }
              ]
            },
            {
              "name": "3.2 Question Answering and Information Retrieval",
              "children": [
                {
                  "name": "3.2.1 Building a FAQ chatbot"
                },
                {
                  "name": "3.2.2 Extracting Information from Documents"
                },
                {
                  "name": "3.2.3 Knowledge Base Question Answering"
                }
              ]
            },
            {
              "name": "3.3 Other Applications",
              "children": [
                {
                  "name": "3.3.1 Code Generation"
                },
                {
                  "name": "3.3.2 Data Augmentation"
                },
                {
                  "name": "3.3.3 Translation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Practical Projects",
          "children": [
            {
              "name": "4.1 Build a Simple Chatbot",
              "children": [
                {
                  "name": "4.1.1 Design conversations flows"
                },
                {
                  "name": "4.1.2 Implement with an API"
                },
                {
                  "name": "4.1.3 Test and iterate"
                }
              ]
            },
            {
              "name": "4.2 Create a Content Summarizer",
              "children": [
                {
                  "name": "4.2.1 Choose a data source"
                },
                {
                  "name": "4.2.2 Design prompts for summarization"
                },
                {
                  "name": "4.2.3 Evaluate performance"
                }
              ]
            },
            {
              "name": "4.3 Develop a Creative Writing Tool",
              "children": [
                {
                  "name": "4.3.1 Choose a creative writing style"
                },
                {
                  "name": "4.3.2 Craft prompts for story generation"
                },
                {
                  "name": "4.3.3 Refine based on user feedback"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning",
          "children": [
            {
              "name": "5.1 Stay Updated with Research",
              "children": [
                {
                  "name": "5.1.1 Follow key researchers and publications"
                },
                {
                  "name": "5.1.2 Attend conferences and workshops"
                }
              ]
            },
            {
              "name": "5.2 Engage with the Community",
              "children": [
                {
                  "name": "5.2.1 Participate in online forums and discussions"
                },
                {
                  "name": "5.2.2 Share your work and learn from others"
                }
              ]
            },
            {
              "name": "5.3 Explore Advanced Topics",
              "children": [
                {
                  "name": "5.3.1 Prompt Tuning"
                },
                {
                  "name": "5.3.2 Reinforcement Learning from Human Feedback (RLHF)"
                },
                {
                  "name": "5.3.3 Multimodal Prompt Engineering"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a  prompt engineer",
    "output": {
      "name": "I want to become a Prompt Engineer",
      "children": [
        {
          "name": "1. Foundation: Language Models & Prompting Basics",
          "children": [
            {
              "name": "1.1 Understanding Large Language Models (LLMs)",
              "children": [
                {
                  "name": "1.1.1 LLM Architectures (Transformers, etc.)"
                },
                {
                  "name": "1.1.2 How LLMs Generate Text"
                },
                {
                  "name": "1.1.3 Common LLM APIs (OpenAI, Cohere, etc.)"
                }
              ]
            },
            {
              "name": "1.2 Prompt Engineering Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Prompt Types (Instruction, Few-Shot, Chain-of-Thought)"
                },
                {
                  "name": "1.2.2 Prompt Crafting Techniques (Specificity, Clarity, Context)"
                },
                {
                  "name": "1.2.3  Experimentation and Iteration in Prompt Design"
                }
              ]
            },
            {
              "name": "1.3 Practical Exercises",
              "children": [
                {
                  "name": "1.3.1  Write prompts for different tasks (summarization, translation, question answering) using a chosen API"
                },
                {
                  "name": "1.3.2 Compare different prompt formats for the same task and analyze the results"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Prompting Techniques",
          "children": [
            {
              "name": "2.1 Few-Shot Learning and Chain-of-Thought Prompting",
              "children": [
                {
                  "name": "2.1.1 Implementing Few-Shot Learning for improved accuracy"
                },
                {
                  "name": "2.1.2 Mastering Chain-of-Thought prompting for complex reasoning tasks"
                }
              ]
            },
            {
              "name": "2.2 Prompt Tuning and Parameter Optimization",
              "children": [
                {
                  "name": "2.2.1  Understanding the impact of prompt parameters on output"
                },
                {
                  "name": "2.2.2 Experimenting with different parameters (temperature, top-p, etc.)"
                }
              ]
            },
            {
              "name": "2.3  Handling Ambiguity and Bias in LLMs",
              "children": [
                {
                  "name": "2.3.1 Techniques to mitigate biases in LLM outputs"
                },
                {
                  "name": "2.3.2 Strategies to reduce ambiguity in prompts and responses"
                }
              ]
            }
          ]
        },
        {
          "name": "3.  Prompt Engineering for Specific Applications",
          "children": [
            {
              "name": "3.1  Prompting for Text Generation",
              "children": [
                {
                  "name": "3.1.1  Creative writing prompts"
                },
                {
                  "name": "3.1.2  Technical documentation generation prompts"
                }
              ]
            },
            {
              "name": "3.2 Prompting for Code Generation",
              "children": [
                {
                  "name": "3.2.1  Generating code from natural language descriptions"
                },
                {
                  "name": "3.2.2  Debugging and improving generated code through prompting"
                }
              ]
            },
            {
              "name": "3.3 Prompting for Chatbots and Conversational AI",
              "children": [
                {
                  "name": "3.3.1  Designing engaging and natural-sounding chatbot conversations"
                },
                {
                  "name": "3.3.2  Handling complex user inputs and unexpected scenarios"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Evaluation and Optimization",
          "children": [
            {
              "name": "4.1  Metrics for Evaluating Prompts",
              "children": [
                {
                  "name": "4.1.1  Quantitative metrics (e.g., BLEU, ROUGE, accuracy)"
                },
                {
                  "name": "4.1.2  Qualitative metrics (e.g., fluency, coherence, relevance)"
                }
              ]
            },
            {
              "name": "4.2  A/B Testing and Iterative Improvement",
              "children": [
                {
                  "name": "4.2.1  Designing and running A/B tests for prompts"
                },
                {
                  "name": "4.2.2  Analyzing results and iteratively refining prompts"
                }
              ]
            },
            {
              "name": "4.3  Prompt Engineering Tools and Resources",
              "children": [
                {
                  "name": "4.3.1  Exploring prompt engineering libraries and frameworks"
                },
                {
                  "name": "4.3.2  Utilizing available online resources and communities"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics and Future Trends",
          "children": [
            {
              "name": "5.1  Prompt Chaining and Decomposition",
              "children": [
                {
                  "name": "5.1.1  Breaking down complex tasks into smaller, manageable prompts"
                },
                {
                  "name": "5.1.2  Managing the flow of information between chained prompts"
                }
              ]
            },
            {
              "name": "5.2  Prompt Programming and Generative AI Development",
              "children": [
                {
                  "name": "5.2.1  Understanding the capabilities and limitations of prompt programming"
                },
                {
                  "name": "5.2.2  Integrating prompt engineering into larger AI applications"
                }
              ]
            },
            {
              "name": "5.3  Ethical Considerations in Prompt Engineering",
              "children": [
                {
                  "name": "5.3.1  Mitigating biases and harmful outputs"
                },
                {
                  "name": "5.3.2  Responsible use of LLMs and prompt engineering techniques"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn a software  engineering",
    "output": {
      "name": "i want to learn software engineering",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                },
                {
                  "name": "1.1.4 Basic Data Structures (Arrays, Lists)"
                },
                {
                  "name": "Exercise: Build a simple calculator application."
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction"
                },
                {
                  "name": "Exercise: Create a simple game using OOP principles (e.g., a text-based adventure)."
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Resolving Conflicts"
                },
                {
                  "name": "Exercise: Create a GitHub account and push a project to a repository."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Structures and Algorithms",
          "children": [
            {
              "name": "2.1 Arrays, Linked Lists, Stacks, Queues",
              "children": [
                {
                  "name": "2.1.1 Implementations and use cases"
                },
                {
                  "name": "2.1.2 Time and space complexity analysis"
                }
              ]
            },
            {
              "name": "2.2 Trees and Graphs",
              "children": [
                {
                  "name": "2.2.1 Tree traversal algorithms"
                },
                {
                  "name": "2.2.2 Graph representation and algorithms (BFS, DFS)"
                }
              ]
            },
            {
              "name": "2.3 Sorting and Searching Algorithms",
              "children": [
                {
                  "name": "2.3.1 Bubble Sort, Insertion Sort, Merge Sort, Quick Sort"
                },
                {
                  "name": "2.3.2 Binary Search"
                },
                {
                  "name": "Exercise: Implement and compare the performance of different sorting algorithms."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Database Management",
          "children": [
            {
              "name": "3.1 Relational Databases (SQL)",
              "children": [
                {
                  "name": "3.1.1 SQL commands (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "3.1.2 Database design (normalization)"
                },
                {
                  "name": "Exercise: Design and implement a database schema for a simple application."
                }
              ]
            },
            {
              "name": "3.2 NoSQL Databases",
              "children": [
                {
                  "name": "3.2.1 Introduction to NoSQL concepts"
                },
                {
                  "name": "3.2.2 MongoDB basics"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Web Development Fundamentals",
          "children": [
            {
              "name": "4.1 Front-End Development (HTML, CSS, JavaScript)",
              "children": [
                {
                  "name": "4.1.1 HTML structure"
                },
                {
                  "name": "4.1.2 CSS styling"
                },
                {
                  "name": "4.1.3 JavaScript interactivity"
                },
                {
                  "name": "Exercise: Build a simple website with interactive elements."
                }
              ]
            },
            {
              "name": "4.2 Back-End Development (Node.js, Python/Flask or Django)",
              "children": [
                {
                  "name": "4.2.1 Server-side programming concepts"
                },
                {
                  "name": "4.2.2 RESTful APIs"
                },
                {
                  "name": "Exercise: Build a simple REST API for a to-do list application."
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Software Design Patterns",
              "children": [
                {
                  "name": "5.1.1 Creational, Structural, Behavioral patterns"
                },
                {
                  "name": "5.1.2 Practical application in projects"
                }
              ]
            },
            {
              "name": "5.2 Cloud Computing (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "5.2.1 Basic concepts and services"
                },
                {
                  "name": "5.2.2 Deployment and scaling of applications"
                }
              ]
            },
            {
              "name": "5.3  Specialization (e.g., Mobile Development, Data Science, DevOps)",
              "children": [
                {
                  "name": "5.3.1 Choose a specialization based on your interests"
                },
                {
                  "name": "5.3.2 Learn relevant technologies and frameworks"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn react",
    "output": {
      "name": "Learn React",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Functions, Arrays, Objects"
                },
                {
                  "name": "1.1.3 ES6+ Features (Arrow functions, destructuring, spread syntax)"
                }
              ]
            },
            {
              "name": "1.2 HTML & CSS Basics",
              "children": [
                {
                  "name": "1.2.1 HTML Structure and Semantics"
                },
                {
                  "name": "1.2.2 CSS Styling and Layout"
                }
              ]
            },
            {
              "name": "1.3 Introduction to React",
              "children": [
                {
                  "name": "1.3.1 Setting up a React development environment (create-react-app)"
                },
                {
                  "name": "1.3.2 JSX: Writing HTML in JavaScript"
                },
                {
                  "name": "1.3.3 Components: Functional and Class Components"
                },
                {
                  "name": "1.3.4 Project: Simple Hello World App"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Concepts",
          "children": [
            {
              "name": "2.1 Component Lifecycle",
              "children": [
                {
                  "name": "2.1.1 Mounting, Updating, and Unmounting"
                },
                {
                  "name": "2.1.2 Using lifecycle methods (useEffect, useLayoutEffect)"
                }
              ]
            },
            {
              "name": "2.2 Props and State",
              "children": [
                {
                  "name": "2.2.1 Passing data with props"
                },
                {
                  "name": "2.2.2 Managing component state with useState hook"
                },
                {
                  "name": "2.2.3 Lifting state up"
                }
              ]
            },
            {
              "name": "2.3 Events and Handling",
              "children": [
                {
                  "name": "2.3.1 Handling user interactions"
                },
                {
                  "name": "2.3.2 Event bubbling and capturing"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Hooks",
              "children": [
                {
                  "name": "3.1.1 useEffect, useState, useContext, useReducer"
                },
                {
                  "name": "3.1.2 Custom hooks"
                }
              ]
            },
            {
              "name": "3.2 Routing",
              "children": [
                {
                  "name": "3.2.1 Using React Router"
                },
                {
                  "name": "3.2.2 Navigating between different views"
                }
              ]
            },
            {
              "name": "3.3 Forms and Data Handling",
              "children": [
                {
                  "name": "3.3.1 Controlled and uncontrolled components"
                },
                {
                  "name": "3.3.2 Form validation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. State Management & Data Fetching",
          "children": [
            {
              "name": "4.1 Context API",
              "children": [
                {
                  "name": "4.1.1 Managing global state"
                },
                {
                  "name": "4.1.2 Sharing data across components"
                }
              ]
            },
            {
              "name": "4.2 Redux (or other state management libraries)",
              "children": [
                {
                  "name": "4.2.1 Understanding the Redux principles"
                },
                {
                  "name": "4.2.2 Setting up Redux in a React app"
                },
                {
                  "name": "4.2.3 Project: Simple E-commerce App using Redux"
                }
              ]
            },
            {
              "name": "4.3 Data Fetching",
              "children": [
                {
                  "name": "4.3.1 Making API calls with `fetch` or `axios`"
                },
                {
                  "name": "4.3.2 Handling asynchronous operations with async/await"
                },
                {
                  "name": "4.3.3 Error handling and loading states"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Testing and Deployment",
          "children": [
            {
              "name": "5.1 Testing with Jest and React Testing Library",
              "children": [
                {
                  "name": "5.1.1 Writing unit tests for components"
                },
                {
                  "name": "5.1.2 Testing component interactions"
                }
              ]
            },
            {
              "name": "5.2 Deployment to Netlify or Vercel",
              "children": [
                {
                  "name": "5.2.1 Setting up a deployment pipeline"
                },
                {
                  "name": "5.2.2 Deploying your React app"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "data engineer",
    "output": {
      "name": "Data Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals (Data Structures, Control Flow, Functions)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) in Python"
                },
                {
                  "name": "1.1.3  Practical Exercise: Build a simple data processing script in Python"
                }
              ]
            },
            {
              "name": "1.2 SQL & Databases",
              "children": [
                {
                  "name": "1.2.1 Relational Database Concepts (tables, keys, relationships)"
                },
                {
                  "name": "1.2.2 SQL Querying (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "1.2.3  Practical Exercise: Design a database schema and write SQL queries to manipulate data"
                }
              ]
            },
            {
              "name": "1.3 Linux Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Navigating the command line (cd, ls, pwd, etc.)"
                },
                {
                  "name": "1.3.2 File manipulation (creating, moving, deleting files)"
                },
                {
                  "name": "1.3.3 Basic system administration tasks (user management, process monitoring)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Warehousing & ETL",
          "children": [
            {
              "name": "2.1 Data Warehousing Concepts",
              "children": [
                {
                  "name": "2.1.1 Data Modeling (star schema, snowflake schema)"
                },
                {
                  "name": "2.1.2 Dimensional Modeling"
                },
                {
                  "name": "2.1.3 ETL Process Overview"
                }
              ]
            },
            {
              "name": "2.2 ETL Tools",
              "children": [
                {
                  "name": "2.2.1 Apache Airflow (workflow management)"
                },
                {
                  "name": "2.2.2 Apache Spark (data processing)"
                },
                {
                  "name": "2.2.3  Practical Project: Build an ETL pipeline to extract, transform, and load data into a data warehouse"
                }
              ]
            },
            {
              "name": "2.3 Data Lake Concepts",
              "children": [
                {
                  "name": "2.3.1 Understanding Data Lakes"
                },
                {
                  "name": "2.3.2 Data Lake Architectures"
                },
                {
                  "name": "2.3.3  Practical Exercise: Configure a simple data lake using cloud storage"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Technologies",
          "children": [
            {
              "name": "3.1 Cloud Platforms (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "3.1.1 Choose one cloud platform and learn its core services"
                },
                {
                  "name": "3.1.2 Compute Services (EC2, Virtual Machines)"
                },
                {
                  "name": "3.1.3 Storage Services (S3, Blob Storage, Cloud Storage)"
                }
              ]
            },
            {
              "name": "3.2 Cloud Data Warehouses",
              "children": [
                {
                  "name": "3.2.1 Snowflake, BigQuery, Redshift"
                },
                {
                  "name": "3.2.2 Data warehouse-as-a-service (DaaS) offerings"
                },
                {
                  "name": "3.2.3 Practical Exercise: Create and manage a data warehouse in the chosen cloud platform"
                }
              ]
            },
            {
              "name": "3.3 Serverless Computing",
              "children": [
                {
                  "name": "3.3.1 Lambda functions, Cloud Functions"
                },
                {
                  "name": "3.3.2 Serverless architecture for data pipelines"
                },
                {
                  "name": "3.3.3 Practical Exercise: Build a serverless ETL pipeline"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Data Modeling & Design",
              "children": [
                {
                  "name": "4.1.1 Advanced Data Modeling Techniques"
                },
                {
                  "name": "4.1.2 Data Governance"
                },
                {
                  "name": "4.1.3 Data Quality Management"
                }
              ]
            },
            {
              "name": "4.2 Big Data Technologies",
              "children": [
                {
                  "name": "4.2.1 Hadoop Ecosystem (HDFS, YARN, MapReduce)"
                },
                {
                  "name": "4.2.2 Apache Kafka (real-time data streaming)"
                },
                {
                  "name": "4.2.3 Practical Project: Design and implement a big data solution for a specific problem"
                }
              ]
            },
            {
              "name": "4.3 Monitoring and Observability",
              "children": [
                {
                  "name": "4.3.1 Setting up monitoring tools for data pipelines"
                },
                {
                  "name": "4.3.2 Implementing logging and alerting"
                },
                {
                  "name": "4.3.3 Performance optimization and tuning"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio Building",
          "children": [
            {
              "name": "5.1 Personal Projects",
              "children": [
                {
                  "name": "5.1.1 Develop several projects showcasing your skills"
                },
                {
                  "name": "5.1.2 Focus on practical applications and real-world datasets"
                },
                {
                  "name": "5.1.3 Host projects on GitHub to demonstrate your work"
                }
              ]
            },
            {
              "name": "5.2 Networking",
              "children": [
                {
                  "name": "5.2.1 Attend data engineering meetups and conferences"
                },
                {
                  "name": "5.2.2 Connect with other professionals on LinkedIn"
                },
                {
                  "name": "5.2.3 Contribute to open-source projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a data engineer",
    "output": {
      "name": "I want to become a Data Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals (Data Structures, Control Flow)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) in Python"
                },
                {
                  "name": "1.1.3  Practice: Build a simple data processing script"
                }
              ]
            },
            {
              "name": "1.2 Databases",
              "children": [
                {
                  "name": "1.2.1 SQL (SELECT, INSERT, UPDATE, DELETE, JOINs)"
                },
                {
                  "name": "1.2.2 Relational Database Design (Normalization)"
                },
                {
                  "name": "1.2.3 Practice: Design and implement a simple database schema"
                }
              ]
            },
            {
              "name": "1.3 Linux Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Navigating the command line (bash/zsh)"
                },
                {
                  "name": "1.3.2 File management and permissions"
                },
                {
                  "name": "1.3.3 Practice: Automate a file processing task using shell scripting"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Warehousing & ETL",
          "children": [
            {
              "name": "2.1 Data Warehousing Concepts",
              "children": [
                {
                  "name": "2.1.1 Dimensional Modeling (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "2.1.2 Data Lake vs. Data Warehouse"
                },
                {
                  "name": "2.1.3 Practice: Design a simple dimensional model for a retail dataset"
                }
              ]
            },
            {
              "name": "2.2 ETL Processes",
              "children": [
                {
                  "name": "2.2.1 Extract, Transform, Load (ETL) pipeline design"
                },
                {
                  "name": "2.2.2 Data cleaning and transformation techniques"
                },
                {
                  "name": "2.2.3 Practice: Build a simple ETL pipeline using Python and a database"
                }
              ]
            },
            {
              "name": "2.3 Cloud Storage",
              "children": [
                {
                  "name": "2.3.1 AWS S3, Azure Blob Storage, or Google Cloud Storage"
                },
                {
                  "name": "2.3.2 Data organization and management in cloud storage"
                },
                {
                  "name": "2.3.3 Practice: Upload and manage data in a cloud storage service"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Big Data Technologies",
          "children": [
            {
              "name": "3.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "3.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "3.1.2 MapReduce"
                },
                {
                  "name": "3.1.3 Practice: Process a large dataset using Hadoop MapReduce (optional, can use alternatives)"
                }
              ]
            },
            {
              "name": "3.2 Spark",
              "children": [
                {
                  "name": "3.2.1 Spark Core, RDDs, DataFrames"
                },
                {
                  "name": "3.2.2 Spark SQL"
                },
                {
                  "name": "3.2.3 Practice: Perform data analysis and transformations using PySpark"
                }
              ]
            },
            {
              "name": "3.3 Cloud-based Big Data Services",
              "children": [
                {
                  "name": "3.3.1 AWS EMR, Azure HDInsight, or Google Dataproc"
                },
                {
                  "name": "3.3.2 Managed Spark clusters"
                },
                {
                  "name": "3.3.3 Practice: Deploy and run a Spark job on a managed cloud service"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Data Engineering Tools & Practices",
          "children": [
            {
              "name": "4.1 Data Pipelines",
              "children": [
                {
                  "name": "4.1.1 Apache Airflow"
                },
                {
                  "name": "4.1.2 Prefect"
                },
                {
                  "name": "4.1.3 Practice: Orchestrate an ETL pipeline using a chosen tool"
                }
              ]
            },
            {
              "name": "4.2 Monitoring and Logging",
              "children": [
                {
                  "name": "4.2.1 Setting up monitoring tools (e.g., Prometheus, Grafana)"
                },
                {
                  "name": "4.2.2 Implementing logging best practices"
                },
                {
                  "name": "4.2.3 Practice: Monitor and log a running data pipeline"
                }
              ]
            },
            {
              "name": "4.3 DevOps for Data Engineers",
              "children": [
                {
                  "name": "4.3.1 Infrastructure as Code (IaC)"
                },
                {
                  "name": "4.3.2 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "4.3.3 Practice: Deploy a data processing application using Docker and Kubernetes (optional, can start with simpler deployment methods)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Real-time Data Processing",
              "children": [
                {
                  "name": "5.1.1 Kafka"
                },
                {
                  "name": "5.1.2 Apache Flink or Spark Streaming"
                },
                {
                  "name": "5.1.3 Practice: Build a real-time data processing pipeline"
                }
              ]
            },
            {
              "name": "5.2 Data Governance and Security",
              "children": [
                {
                  "name": "5.2.1 Data quality management"
                },
                {
                  "name": "5.2.2 Data security and access control"
                },
                {
                  "name": "5.2.3 Data privacy and compliance (GDPR, CCPA)"
                }
              ]
            },
            {
              "name": "5.3 Machine Learning for Data Engineering",
              "children": [
                {
                  "name": "5.3.1 Feature engineering"
                },
                {
                  "name": "5.3.2 Model deployment and monitoring"
                },
                {
                  "name": "5.3.3 MLOps"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn data engineering",
    "output": {
      "name": "i want to learn data engineering",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals (Data Structures, Control Flow, Functions)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) Principles"
                },
                {
                  "name": "1.1.3  Basic Algorithms and Data Structures (Arrays, Lists, Hash Tables)"
                }
              ]
            },
            {
              "name": "1.2 Databases",
              "children": [
                {
                  "name": "1.2.1 SQL (CRUD operations, Joins, Aggregations)"
                },
                {
                  "name": "1.2.2 Relational Database Design (Normalization, ACID properties)"
                },
                {
                  "name": "1.2.3  NoSQL Databases (MongoDB, Cassandra - basic understanding)"
                }
              ]
            },
            {
              "name": "1.3 Linux Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Navigation and File Management"
                },
                {
                  "name": "1.3.2 Shell Scripting (Basic commands, loops, conditionals)"
                },
                {
                  "name": "1.3.3  Remote Access (SSH)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Warehousing and ETL",
          "children": [
            {
              "name": "2.1 Data Warehousing Concepts",
              "children": [
                {
                  "name": "2.1.1 Dimensional Modeling (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "2.1.2 Data Lake vs. Data Warehouse"
                },
                {
                  "name": "2.1.3 Data Governance and Quality"
                }
              ]
            },
            {
              "name": "2.2 ETL Processes",
              "children": [
                {
                  "name": "2.2.1 Extract, Transform, Load (ETL) Pipeline Design"
                },
                {
                  "name": "2.2.2 Data Transformation Techniques (Data Cleaning, Data Validation)"
                },
                {
                  "name": "2.2.3 Project: Build a simple ETL pipeline using Python and a database"
                }
              ]
            },
            {
              "name": "2.3 Cloud Storage",
              "children": [
                {
                  "name": "2.3.1 AWS S3, Azure Blob Storage, or Google Cloud Storage"
                },
                {
                  "name": "2.3.2 Data Partitioning and Optimization"
                },
                {
                  "name": "2.3.3 Project: Upload and manage data in cloud storage"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Big Data Technologies",
          "children": [
            {
              "name": "3.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "3.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "3.1.2 MapReduce"
                },
                {
                  "name": "3.1.3  YARN (Yet Another Resource Negotiator) - basic understanding"
                }
              ]
            },
            {
              "name": "3.2 Spark",
              "children": [
                {
                  "name": "3.2.1 Spark Core, RDDs, and DataFrames"
                },
                {
                  "name": "3.2.2 Spark SQL"
                },
                {
                  "name": "3.2.3 Project: Process large datasets using PySpark"
                }
              ]
            },
            {
              "name": "3.3 Cloud-based Big Data Services",
              "children": [
                {
                  "name": "3.3.1 AWS EMR, Azure HDInsight, or Google Dataproc"
                },
                {
                  "name": "3.3.2 Serverless computing (e.g., AWS Glue, Azure Databricks)"
                },
                {
                  "name": "3.3.3 Project: Run a Spark job on a cloud-based platform"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Data Pipelines and Orchestration",
          "children": [
            {
              "name": "4.1 Data Pipeline Design",
              "children": [
                {
                  "name": "4.1.1 Defining Data Requirements and Business Logic"
                },
                {
                  "name": "4.1.2 Designing Scalable and Reliable Pipelines"
                },
                {
                  "name": "4.1.3 Error Handling and Monitoring"
                }
              ]
            },
            {
              "name": "4.2 Orchestration Tools",
              "children": [
                {
                  "name": "4.2.1 Apache Airflow"
                },
                {
                  "name": "4.2.2 Prefect"
                },
                {
                  "name": "4.2.3  Project: Orchestrate an ETL pipeline using Airflow"
                }
              ]
            },
            {
              "name": "4.3 Monitoring and Alerting",
              "children": [
                {
                  "name": "4.3.1 Setting up Monitoring Tools"
                },
                {
                  "name": "4.3.2 Defining Alerting Rules"
                },
                {
                  "name": "4.3.3 Project: Integrate monitoring and alerting into your pipeline"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 Real-time Data Processing",
              "children": [
                {
                  "name": "5.1.1 Kafka, Apache Pulsar"
                },
                {
                  "name": "5.1.2 Stream Processing frameworks (e.g., Apache Flink, Spark Streaming)"
                }
              ]
            },
            {
              "name": "5.2 Machine Learning in Data Engineering",
              "children": [
                {
                  "name": "5.2.1 Feature Engineering"
                },
                {
                  "name": "5.2.2 Model Deployment and Monitoring"
                }
              ]
            },
            {
              "name": "5.3 Cloud-Specific Services",
              "children": [
                {
                  "name": "5.3.1 Advanced AWS Glue features"
                },
                {
                  "name": "5.3.2 Azure Data Factory, Azure Synapse Analytics"
                },
                {
                  "name": "5.3.3 Google Cloud Dataflow"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "I want to become a AI engineer",
    "output": {
      "name": "I want to become an AI Engineer",
      "children": [
        {
          "name": "1. Foundational Mathematics & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "Vectors and Matrices"
                },
                {
                  "name": "Linear Transformations"
                },
                {
                  "name": "Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "Derivatives and Gradients"
                },
                {
                  "name": "Integrals"
                },
                {
                  "name": "Partial Derivatives and Chain Rule"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "Probability Distributions"
                },
                {
                  "name": "Statistical Inference"
                },
                {
                  "name": "Hypothesis Testing"
                }
              ]
            },
            {
              "name": "1.4 Programming (Python)",
              "children": [
                {
                  "name": "Python Basics (Data Structures, Control Flow)"
                },
                {
                  "name": "NumPy and Pandas for Data Manipulation"
                },
                {
                  "name": "Project: Analyze a Public Dataset (e.g., Iris dataset)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "Linear Regression"
                },
                {
                  "name": "Logistic Regression"
                },
                {
                  "name": "Support Vector Machines (SVMs)"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "Clustering (K-Means, Hierarchical)"
                },
                {
                  "name": "Dimensionality Reduction (PCA)"
                },
                {
                  "name": "Project: Implement K-Means clustering on image data"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation and Selection",
              "children": [
                {
                  "name": "Bias-Variance Tradeoff"
                },
                {
                  "name": "Cross-Validation"
                },
                {
                  "name": "Performance Metrics (Accuracy, Precision, Recall)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "Perceptrons"
                },
                {
                  "name": "Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "Backpropagation"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "CNN Architectures (LeNet, AlexNet, ResNet)"
                },
                {
                  "name": "Image Classification and Object Detection"
                },
                {
                  "name": "Project: Build a CNN for image classification (e.g., MNIST or CIFAR-10)"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "RNN Architectures (LSTM, GRU)"
                },
                {
                  "name": "Natural Language Processing (NLP) tasks"
                },
                {
                  "name": "Project: Build an RNN for text generation or sentiment analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized AI Areas & Deployment",
          "children": [
            {
              "name": "4.1 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "Word Embeddings (Word2Vec, GloVe)"
                },
                {
                  "name": "Transformers (BERT, GPT)"
                },
                {
                  "name": "Project: Build a chatbot or sentiment analysis system"
                }
              ]
            },
            {
              "name": "4.2 Computer Vision",
              "children": [
                {
                  "name": "Object Detection (YOLO, Faster R-CNN)"
                },
                {
                  "name": "Image Segmentation"
                },
                {
                  "name": "Project: Implement an object detection model on a video stream"
                }
              ]
            },
            {
              "name": "4.3 AI Deployment and Cloud Platforms",
              "children": [
                {
                  "name": "Model Optimization and Deployment"
                },
                {
                  "name": "Cloud Platforms (AWS SageMaker, Google Cloud AI Platform, Azure Machine Learning)"
                },
                {
                  "name": "Project: Deploy a trained model to a cloud platform"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 Reinforcement Learning",
              "children": [
                {
                  "name": "Q-Learning"
                },
                {
                  "name": "Deep Q-Networks (DQN)"
                },
                {
                  "name": "Project: Train an agent to play a simple game"
                }
              ]
            },
            {
              "name": "5.2 Generative Adversarial Networks (GANs)",
              "children": [
                {
                  "name": "GAN Architectures"
                },
                {
                  "name": "Image Generation and Manipulation"
                },
                {
                  "name": "Project: Train a GAN to generate images"
                }
              ]
            },
            {
              "name": "5.3  Ethical Considerations in AI",
              "children": [
                {
                  "name": "Bias and Fairness"
                },
                {
                  "name": "Privacy and Security"
                },
                {
                  "name": "Responsible AI Development"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn reactflow",
    "output": {
      "name": "Learn ReactFlow",
      "children": [
        {
          "name": "1. Foundation: JavaScript & React",
          "children": [
            {
              "name": "1.1 Essential JavaScript",
              "children": [
                {
                  "name": "1.1.1 Data structures (arrays, objects)"
                },
                {
                  "name": "1.1.2 Functional programming concepts (map, filter, reduce)"
                },
                {
                  "name": "1.1.3 Asynchronous JavaScript (promises, async/await)"
                }
              ]
            },
            {
              "name": "1.2 Core React Concepts",
              "children": [
                {
                  "name": "1.2.1 Components and JSX"
                },
                {
                  "name": "1.2.2 State management (useState, useReducer, useContext)"
                },
                {
                  "name": "1.2.3 Props and component communication"
                }
              ]
            },
            {
              "name": "1.3 React Development Environment",
              "children": [
                {
                  "name": "1.3.1 Setting up a React project (create-react-app, Vite)"
                },
                {
                  "name": "1.3.2 Using package managers (npm, yarn)"
                },
                {
                  "name": "1.3.3 Basic project structure and file organization"
                }
              ]
            }
          ]
        },
        {
          "name": "2. ReactFlow Basics",
          "children": [
            {
              "name": "2.1 Installation and Setup",
              "children": [
                {
                  "name": "2.1.1 Installing ReactFlow"
                },
                {
                  "name": "2.1.2 Setting up a basic ReactFlow instance"
                },
                {
                  "name": "2.1.3  Rendering nodes and edges"
                }
              ]
            },
            {
              "name": "2.2 Core Components",
              "children": [
                {
                  "name": "2.2.1 Understanding Nodes and Edges"
                },
                {
                  "name": "2.2.2 Working with the ReactFlow instance"
                },
                {
                  "name": "2.2.3  Customizing node and edge appearance"
                }
              ]
            },
            {
              "name": "2.3 Basic Interactions",
              "children": [
                {
                  "name": "2.3.1 Node dragging and dropping"
                },
                {
                  "name": "2.3.2 Edge creation"
                },
                {
                  "name": "2.3.3 Panning and zooming"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced ReactFlow Features",
          "children": [
            {
              "name": "3.1 Custom Nodes and Edges",
              "children": [
                {
                  "name": "3.1.1 Creating custom node components"
                },
                {
                  "name": "3.1.2 Creating custom edge components"
                },
                {
                  "name": "3.1.3 Handling custom node and edge data"
                }
              ]
            },
            {
              "name": "3.2 Data Handling and State Management",
              "children": [
                {
                  "name": "3.2.1 Managing graph data (using Redux, Zustand, or Context API)"
                },
                {
                  "name": "3.2.2 Persisting graph data to local storage or a backend"
                },
                {
                  "name": "3.2.3  Reacting to changes in the graph"
                }
              ]
            },
            {
              "name": "3.3 Advanced Interactions and Behaviors",
              "children": [
                {
                  "name": "3.3.1 Implementing custom connection handlers"
                },
                {
                  "name": "3.3.2 Adding context menus"
                },
                {
                  "name": "3.3.3 Implementing undo/redo functionality"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Project & Deployment",
          "children": [
            {
              "name": "4.1 Building a Simple Flowchart Application",
              "children": [
                {
                  "name": "4.1.1 Design the flowchart elements"
                },
                {
                  "name": "4.1.2 Implement node and edge creation, deletion, and connection"
                },
                {
                  "name": "4.1.3 Implement data storage (optional)"
                }
              ]
            },
            {
              "name": "4.2 Deployment",
              "children": [
                {
                  "name": "4.2.1 Building for production"
                },
                {
                  "name": "4.2.2 Deploying to a hosting service (Netlify, Vercel, AWS)"
                },
                {
                  "name": "4.2.3  Setting up a backend (if needed)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Exploring ReactFlow Ecosystem",
          "children": [
            {
              "name": "5.1 Integrations and Libraries",
              "children": [
                {
                  "name": "5.1.1 Integrating with other libraries (e.g., D3)"
                },
                {
                  "name": "5.1.2 Exploring ReactFlow plugins and extensions"
                },
                {
                  "name": "5.1.3  Using ReactFlow with different state management solutions"
                }
              ]
            },
            {
              "name": "5.2 Advanced Concepts",
              "children": [
                {
                  "name": "5.2.1  Performance optimization for large graphs"
                },
                {
                  "name": "5.2.2  Advanced customization and theming"
                },
                {
                  "name": "5.2.3  Understanding the internal workings of ReactFlow"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn rust",
    "output": {
      "name": "Learn Rust",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables & Data Types"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions & Ownership"
                }
              ]
            },
            {
              "name": "1.2 Basic Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays & Vectors"
                },
                {
                  "name": "1.2.2 Tuples"
                },
                {
                  "name": "1.2.3 Strings"
                }
              ]
            },
            {
              "name": "1.3 Working with Errors",
              "children": [
                {
                  "name": "1.3.1 Result Type"
                },
                {
                  "name": "1.3.2 Panic! and Unwinding"
                },
                {
                  "name": "1.3.3 Custom Error Handling"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Ownership and Borrowing",
          "children": [
            {
              "name": "2.1 Ownership Rules",
              "children": [
                {
                  "name": "2.1.1 Move Semantics"
                },
                {
                  "name": "2.1.2 Borrowing (Mutable and Immutable)"
                },
                {
                  "name": "2.1.3 Lifetime Annotations"
                }
              ]
            },
            {
              "name": "2.2 Advanced Borrowing",
              "children": [
                {
                  "name": "2.2.1 Lifetimes and Functions"
                },
                {
                  "name": "2.2.2 References and Dereferencing"
                },
                {
                  "name": "2.2.3 Smart Pointers (Box, Rc, Arc)"
                }
              ]
            },
            {
              "name": "2.3 Practical Exercises",
              "children": [
                {
                  "name": "2.3.1 Implement a simple linked list"
                },
                {
                  "name": "2.3.2 Create a program that manages memory efficiently"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Concurrency",
          "children": [
            {
              "name": "3.1 Threads and Mutexes",
              "children": [
                {
                  "name": "3.1.1 Creating and managing threads"
                },
                {
                  "name": "3.1.2 Mutexes for data synchronization"
                }
              ]
            },
            {
              "name": "3.2 Channels",
              "children": [
                {
                  "name": "3.2.1 Sending and receiving data across channels"
                },
                {
                  "name": "3.2.2 MPSC and SPSC channels"
                }
              ]
            },
            {
              "name": "3.3 Async/Await",
              "children": [
                {
                  "name": "3.3.1 Introduction to Tokio runtime"
                },
                {
                  "name": "3.3.2 Writing asynchronous code with async/await"
                },
                {
                  "name": "3.3.3 Handling asynchronous errors"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Traits and Generics",
              "children": [
                {
                  "name": "4.1.1 Defining and implementing traits"
                },
                {
                  "name": "4.1.2 Using generics for code reusability"
                }
              ]
            },
            {
              "name": "4.2 Macros",
              "children": [
                {
                  "name": "4.2.1 Declarative macros"
                },
                {
                  "name": "4.2.2 Procedural macros"
                }
              ]
            },
            {
              "name": "4.3 Unsafe Rust",
              "children": [
                {
                  "name": "4.3.1 Understanding unsafe code blocks"
                },
                {
                  "name": "4.3.2 Working with raw pointers"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Projects",
          "children": [
            {
              "name": "5.1 Simple CLI Application",
              "children": [
                {
                  "name": "5.1.1 Design and implementation"
                }
              ]
            },
            {
              "name": "5.2 Web Server with Actix Web",
              "children": [
                {
                  "name": "5.2.1 Setting up and running a simple web server"
                }
              ]
            },
            {
              "name": "5.3  Game Development (using a library like Bevy)",
              "children": [
                {
                  "name": "5.3.1 Simple game loop and entities"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn react native",
    "output": {
      "name": "Learn React Native",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions, Arrays, Objects"
                }
              ]
            },
            {
              "name": "1.2 React Fundamentals",
              "children": [
                {
                  "name": "1.2.1 JSX Syntax and Components"
                },
                {
                  "name": "1.2.2 Props and State Management"
                },
                {
                  "name": "1.2.3 Component Lifecycle Methods"
                }
              ]
            },
            {
              "name": "1.3 Setting up Development Environment",
              "children": [
                {
                  "name": "1.3.1 Installing Node.js and npm"
                },
                {
                  "name": "1.3.2 Setting up a React Native Project (using Expo or React Native CLI)"
                },
                {
                  "name": "1.3.3 Running the project on an emulator or device"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core React Native Components",
          "children": [
            {
              "name": "2.1 Basic UI Components",
              "children": [
                {
                  "name": "2.1.1 Text, View, Image"
                },
                {
                  "name": "2.1.2 Button, ScrollView, FlatList"
                },
                {
                  "name": "2.1.3 Styling with StyleSheet"
                }
              ]
            },
            {
              "name": "2.2 Navigation",
              "children": [
                {
                  "name": "2.2.1 React Navigation Setup and Usage"
                },
                {
                  "name": "2.2.2 Navigating between screens"
                },
                {
                  "name": "2.2.3 Passing data between screens"
                }
              ]
            },
            {
              "name": "2.3 Handling User Input",
              "children": [
                {
                  "name": "2.3.1 TextInput Component"
                },
                {
                  "name": "2.3.2 Handling Text Input Changes"
                },
                {
                  "name": "2.3.3 Form Handling and Validation (Practical Exercise: Simple login form)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 State Management",
              "children": [
                {
                  "name": "3.1.1 Context API"
                },
                {
                  "name": "3.1.2 Redux or Zustand (choose one)"
                },
                {
                  "name": "3.1.3 Implementing state management in a small project"
                }
              ]
            },
            {
              "name": "3.2 API Integration",
              "children": [
                {
                  "name": "3.2.1 Fetch API or Axios"
                },
                {
                  "name": "3.2.2 Handling API Responses"
                },
                {
                  "name": "3.2.3 Building a simple app fetching data from an API (Practical Exercise: Fetching data from a public API and displaying it)"
                }
              ]
            },
            {
              "name": "3.3 Asynchronous Programming",
              "children": [
                {
                  "name": "3.3.1 Promises"
                },
                {
                  "name": "3.3.2 Async/Await"
                },
                {
                  "name": "3.3.3 Error Handling in Asynchronous Operations"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Platform Specific Code & Deployment",
          "children": [
            {
              "name": "4.1 Platform-Specific Code",
              "children": [
                {
                  "name": "4.1.1 Using Platform.OS"
                },
                {
                  "name": "4.1.2 Conditional Rendering based on platform"
                },
                {
                  "name": "4.1.3 Implementing platform-specific features"
                }
              ]
            },
            {
              "name": "4.2 Testing",
              "children": [
                {
                  "name": "4.2.1 Unit Testing"
                },
                {
                  "name": "4.2.2 Integration Testing"
                },
                {
                  "name": "4.2.3 Snapshot Testing"
                }
              ]
            },
            {
              "name": "4.3 Deployment",
              "children": [
                {
                  "name": "4.3.1 Building an APK for Android"
                },
                {
                  "name": "4.3.2 Building an IPA for iOS"
                },
                {
                  "name": "4.3.3 Publishing to app stores"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Projects and Tools",
          "children": [
            {
              "name": "5.1 Advanced UI Components",
              "children": [
                {
                  "name": "5.1.1 Animations"
                },
                {
                  "name": "5.1.2 Gestures"
                },
                {
                  "name": "5.1.3 Third-Party Libraries (e.g., react-native-paper, native-base)"
                }
              ]
            },
            {
              "name": "5.2 Working with Third-Party Libraries",
              "children": [
                {
                  "name": "5.2.1 Understanding package.json"
                },
                {
                  "name": "5.2.2 Installing and using libraries"
                },
                {
                  "name": "5.2.3 Managing library dependencies"
                }
              ]
            },
            {
              "name": "5.3 Building a Complex App (Capstone Project)",
              "children": [
                {
                  "name": "5.3.1 Project Planning and Design"
                },
                {
                  "name": "5.3.2 Implementation and Testing"
                },
                {
                  "name": "5.3.3 Deployment and Iteration"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "software engineer",
    "output": {
      "name": "Software Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures",
                  "children": [
                    {
                      "name": "Project: Build a simple calculator"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays and Lists"
                },
                {
                  "name": "1.2.2 Stacks and Queues"
                },
                {
                  "name": "1.2.3 Hash Tables and Dictionaries"
                }
              ]
            },
            {
              "name": "1.3 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.3.1 Classes and Objects"
                },
                {
                  "name": "1.3.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.3.3 Encapsulation and Abstraction",
                  "children": [
                    {
                      "name": "Project: Create a simple inventory management system"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Essential Tools and Technologies",
          "children": [
            {
              "name": "2.1 Version Control (Git)",
              "children": [
                {
                  "name": "2.1.1 Git Basics (clone, commit, push, pull)"
                },
                {
                  "name": "2.1.2 Branching and Merging"
                },
                {
                  "name": "2.1.3 Collaboration and Git workflows",
                  "children": [
                    {
                      "name": "Project: Contribute to an open-source project on GitHub"
                    }
                  ]
                }
              ]
            },
            {
              "name": "2.2 Databases",
              "children": [
                {
                  "name": "2.2.1 Relational Databases (SQL)"
                },
                {
                  "name": "2.2.2 NoSQL Databases (MongoDB, etc.)"
                },
                {
                  "name": "2.2.3 Database Design and Normalization"
                }
              ]
            },
            {
              "name": "2.3 Debugging and Testing",
              "children": [
                {
                  "name": "2.3.1 Debugging techniques"
                },
                {
                  "name": "2.3.2 Unit Testing"
                },
                {
                  "name": "2.3.3 Integration Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Web Development Fundamentals",
          "children": [
            {
              "name": "3.1 Front-End Technologies",
              "children": [
                {
                  "name": "3.1.1 HTML, CSS"
                },
                {
                  "name": "3.1.2 JavaScript"
                },
                {
                  "name": "3.1.3 Front-end Frameworks (React, Angular, Vue.js)"
                }
              ]
            },
            {
              "name": "3.2 Back-End Technologies",
              "children": [
                {
                  "name": "3.2.1 Server-side languages (Python, Java, Node.js)"
                },
                {
                  "name": "3.2.2 APIs and RESTful services"
                },
                {
                  "name": "3.2.3 Frameworks (Spring, Django, Express.js)"
                }
              ]
            },
            {
              "name": "3.3 Deployment and Hosting",
              "children": [
                {
                  "name": "3.3.1 Cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "3.3.2 Deployment strategies"
                },
                {
                  "name": "3.3.3 Setting up a web server"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized Areas (Choose one or more)",
          "children": [
            {
              "name": "4.1 Mobile Development",
              "children": [
                {
                  "name": "4.1.1 Android (Kotlin/Java)"
                },
                {
                  "name": "4.1.2 iOS (Swift)"
                },
                {
                  "name": "4.1.3 Cross-platform frameworks (React Native, Flutter)"
                }
              ]
            },
            {
              "name": "4.2 Data Science and Machine Learning",
              "children": [
                {
                  "name": "4.2.1 Python libraries (NumPy, Pandas, Scikit-learn)"
                },
                {
                  "name": "4.2.2 Machine learning algorithms"
                },
                {
                  "name": "4.2.3 Data visualization"
                }
              ]
            },
            {
              "name": "4.3 DevOps",
              "children": [
                {
                  "name": "4.3.1 Continuous Integration/Continuous Deployment (CI/CD)"
                },
                {
                  "name": "4.3.2 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "4.3.3 Infrastructure as Code (Terraform, Ansible)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Concepts & Best Practices",
          "children": [
            {
              "name": "5.1 Design Patterns",
              "children": [
                {
                  "name": "5.1.1 Creational, Structural, Behavioral"
                },
                {
                  "name": "5.1.2 Applying design patterns to improve code quality"
                }
              ]
            },
            {
              "name": "5.2 Software Architecture",
              "children": [
                {
                  "name": "5.2.1 Microservices"
                },
                {
                  "name": "5.2.2 Different architectural styles"
                },
                {
                  "name": "5.2.3 Scalability and performance considerations"
                }
              ]
            },
            {
              "name": "5.3 Security Best Practices",
              "children": [
                {
                  "name": "5.3.1 Authentication and Authorization"
                },
                {
                  "name": "5.3.2 Common vulnerabilities and how to mitigate them"
                },
                {
                  "name": "5.3.3 Secure coding practices"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "web development",
    "output": {
      "name": "web development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 HTML Semantics & Structure"
                },
                {
                  "name": "1.1.2 CSS Styling & Layout"
                },
                {
                  "name": "1.1.3 Introduction to JavaScript"
                }
              ]
            },
            {
              "name": "1.2 Version Control (Git)",
              "children": [
                {
                  "name": "1.2.1 Git Basics: Init, Add, Commit, Push"
                },
                {
                  "name": "1.2.2 Branching and Merging"
                },
                {
                  "name": "1.2.3 GitHub/GitLab Workflow"
                }
              ]
            },
            {
              "name": "1.3 Browser Developer Tools",
              "children": [
                {
                  "name": "1.3.1 Inspecting Elements & Network Requests"
                },
                {
                  "name": "1.3.2 Debugging JavaScript"
                },
                {
                  "name": "1.3.3 Performance Profiling"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Frontend Development",
          "children": [
            {
              "name": "2.1 Advanced JavaScript",
              "children": [
                {
                  "name": "2.1.1 DOM Manipulation"
                },
                {
                  "name": "2.1.2 Asynchronous JavaScript (Promises, Async/Await)"
                },
                {
                  "name": "2.1.3 Project: Simple To-Do List App"
                }
              ]
            },
            {
              "name": "2.2 JavaScript Frameworks/Libraries",
              "children": [
                {
                  "name": "2.2.1 React Introduction"
                },
                {
                  "name": "2.2.2 React Components and State Management"
                },
                {
                  "name": "2.2.3 Project: Simple React App (e.g., a blog post viewer)"
                }
              ]
            },
            {
              "name": "2.3 Responsive Web Design",
              "children": [
                {
                  "name": "2.3.1 CSS Media Queries"
                },
                {
                  "name": "2.3.2 Mobile-First Approach"
                },
                {
                  "name": "2.3.3 Project: Make a previous project responsive"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Backend Development",
          "children": [
            {
              "name": "3.1 Server-Side Fundamentals",
              "children": [
                {
                  "name": "3.1.1 HTTP Requests and Responses"
                },
                {
                  "name": "3.1.2 REST APIs"
                },
                {
                  "name": "3.1.3 Choosing a Backend Language (Node.js, Python, etc.)"
                }
              ]
            },
            {
              "name": "3.2 Databases",
              "children": [
                {
                  "name": "3.2.1 Relational Databases (SQL)"
                },
                {
                  "name": "3.2.2 NoSQL Databases (MongoDB, etc.)"
                },
                {
                  "name": "3.2.3 Database Design and Normalization"
                }
              ]
            },
            {
              "name": "3.3 API Development & Deployment",
              "children": [
                {
                  "name": "3.3.1 Building RESTful APIs"
                },
                {
                  "name": "3.3.2 API Testing and Documentation"
                },
                {
                  "name": "3.3.3 Deploying to a Server (e.g., Heroku, Netlify)"
                }
              ]
            },
            {
              "name": "3.4 Authentication & Authorization",
              "children": [
                {
                  "name": "3.4.1 JWT (JSON Web Tokens)"
                },
                {
                  "name": "3.4.2 OAuth 2.0"
                },
                {
                  "name": "3.4.3 Secure API Design"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Advanced Topics",
          "children": [
            {
              "name": "4.1 Deployment Strategies",
              "children": [
                {
                  "name": "4.1.1 Continuous Integration/Continuous Deployment (CI/CD)"
                },
                {
                  "name": "4.1.2 Cloud Platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "4.1.3 Server Management and Maintenance"
                }
              ]
            },
            {
              "name": "4.2 Testing and Debugging",
              "children": [
                {
                  "name": "4.2.1 Unit Testing"
                },
                {
                  "name": "4.2.2 Integration Testing"
                },
                {
                  "name": "4.2.3 End-to-End Testing"
                }
              ]
            },
            {
              "name": "4.3 Advanced Frontend Concepts",
              "children": [
                {
                  "name": "4.3.1 WebSockets"
                },
                {
                  "name": "4.3.2 Web Workers"
                },
                {
                  "name": "4.3.3 Server-Side Rendering (SSR)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Project Portfolio",
          "children": [
            {
              "name": "5.1 Build multiple projects showcasing different skills."
            },
            {
              "name": "5.2 Contribute to open source projects."
            },
            {
              "name": "5.3 Showcase your projects on a portfolio website."
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn web development",
    "output": {
      "name": "i want to learn web development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Client-Server Model"
                },
                {
                  "name": "1.1.2 HTTP Protocol"
                },
                {
                  "name": "1.1.3 Basic Web Security (HTTPS, XSS, CSRF)"
                }
              ]
            },
            {
              "name": "1.2 HTML & CSS",
              "children": [
                {
                  "name": "1.2.1 HTML Structure & Semantics"
                },
                {
                  "name": "1.2.2 CSS Styling & Layout (Box Model, Flexbox, Grid)"
                },
                {
                  "name": "1.2.3 Responsive Web Design (Media Queries)"
                },
                {
                  "name": "1.2.4 Project: Simple Landing Page"
                }
              ]
            },
            {
              "name": "1.3 Version Control (Git)",
              "children": [
                {
                  "name": "1.3.1 Git Basics (Init, Add, Commit, Push, Pull)"
                },
                {
                  "name": "1.3.2 Git Branching & Merging"
                },
                {
                  "name": "1.3.3 GitHub/GitLab/Bitbucket Usage"
                }
              ]
            }
          ]
        },
        {
          "name": "2. JavaScript Fundamentals",
          "children": [
            {
              "name": "2.1 JavaScript Basics",
              "children": [
                {
                  "name": "2.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "2.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "2.1.3 Functions"
                }
              ]
            },
            {
              "name": "2.2 DOM Manipulation",
              "children": [
                {
                  "name": "2.2.1 Selecting & Manipulating Elements"
                },
                {
                  "name": "2.2.2 Event Handling"
                },
                {
                  "name": "2.2.3 Project: Interactive To-Do List"
                }
              ]
            },
            {
              "name": "2.3 Asynchronous JavaScript",
              "children": [
                {
                  "name": "2.3.1 Promises"
                },
                {
                  "name": "2.3.2 Async/Await"
                },
                {
                  "name": "2.3.3 Fetch API"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Backend Development (Choose One)",
          "children": [
            {
              "name": "3.1 Node.js with Express.js",
              "children": [
                {
                  "name": "3.1.1 Node.js Installation and Setup"
                },
                {
                  "name": "3.1.2 Express.js Routing and Middleware"
                },
                {
                  "name": "3.1.3 Working with Databases (e.g., MongoDB)"
                },
                {
                  "name": "3.1.4 Project: RESTful API"
                }
              ]
            },
            {
              "name": "3.2 Python with Django/Flask",
              "children": [
                {
                  "name": "3.2.1 Python Basics"
                },
                {
                  "name": "3.2.2 Framework Choice (Django or Flask)"
                },
                {
                  "name": "3.2.3 Database Integration (e.g., PostgreSQL, MySQL)"
                },
                {
                  "name": "3.2.4 Project: Web Application with Backend Logic"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Frontend Frameworks (Choose One)",
          "children": [
            {
              "name": "4.1 React",
              "children": [
                {
                  "name": "4.1.1 Components, JSX, Props, State"
                },
                {
                  "name": "4.1.2 Hooks (useState, useEffect)"
                },
                {
                  "name": "4.1.3 Routing and State Management (e.g., React Router, Redux)"
                },
                {
                  "name": "4.1.4 Project: Single-Page Application"
                }
              ]
            },
            {
              "name": "4.2 Angular",
              "children": [
                {
                  "name": "4.2.1 Components, Modules, Services"
                },
                {
                  "name": "4.2.2 Data Binding and Dependency Injection"
                },
                {
                  "name": "4.2.3 Routing and HTTP"
                },
                {
                  "name": "4.2.4 Project: Single-Page Application"
                }
              ]
            },
            {
              "name": "4.3 Vue.js",
              "children": [
                {
                  "name": "4.3.1 Components, Templates, Data"
                },
                {
                  "name": "4.3.2 Directives and Computed Properties"
                },
                {
                  "name": "4.3.3 Routing and Vuex"
                },
                {
                  "name": "4.3.4 Project: Single-Page Application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Advanced Topics",
          "children": [
            {
              "name": "5.1 Deployment to Platforms (e.g., Netlify, Heroku, AWS)",
              "children": [
                {
                  "name": "5.1.1 Choosing a Platform"
                },
                {
                  "name": "5.1.2 Deployment Process"
                },
                {
                  "name": "5.1.3 Continuous Integration/Continuous Deployment (CI/CD)"
                }
              ]
            },
            {
              "name": "5.2 Testing (Unit, Integration, End-to-End)",
              "children": [
                {
                  "name": "5.2.1 Understanding Testing Principles"
                },
                {
                  "name": "5.2.2 Test Frameworks and Tools"
                },
                {
                  "name": "5.2.3 Writing Effective Tests"
                }
              ]
            },
            {
              "name": "5.3 Advanced JavaScript Concepts (e.g., Design Patterns, WebSockets)",
              "children": [
                {
                  "name": "5.3.1 Design Patterns"
                },
                {
                  "name": "5.3.2 WebSockets and Real-Time Applications"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a  web developer",
    "output": {
      "name": "I want to become a Web Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Web Concepts",
              "children": [
                {
                  "name": "1.1.1 Client-Server Model"
                },
                {
                  "name": "1.1.2 HTTP Requests and Responses"
                },
                {
                  "name": "1.1.3 Understanding URLs and Domains"
                }
              ]
            },
            {
              "name": "1.2 Basic HTML, CSS, and JavaScript",
              "children": [
                {
                  "name": "1.2.1 HTML Structure and Semantics"
                },
                {
                  "name": "1.2.2 CSS Styling and Layout (Box Model, Flexbox, Grid)"
                },
                {
                  "name": "1.2.3 JavaScript Fundamentals (Variables, Data Types, Operators, Control Flow)"
                },
                {
                  "name": "1.2.4 Project: Simple Static Website"
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics (Init, Add, Commit, Push, Pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Using GitHub or GitLab"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Front-End Development",
          "children": [
            {
              "name": "2.1 Advanced JavaScript",
              "children": [
                {
                  "name": "2.1.1 DOM Manipulation"
                },
                {
                  "name": "2.1.2 Event Handling"
                },
                {
                  "name": "2.1.3 Asynchronous JavaScript (Promises, Async/Await)"
                },
                {
                  "name": "2.1.4 Project: Interactive Web Page"
                }
              ]
            },
            {
              "name": "2.2 JavaScript Frameworks/Libraries",
              "children": [
                {
                  "name": "2.2.1 React (or Vue, Angular): Learn the basics, component structure, state management"
                },
                {
                  "name": "2.2.2 Project: Single Page Application (SPA) with chosen framework"
                }
              ]
            },
            {
              "name": "2.3 Responsive Web Design",
              "children": [
                {
                  "name": "2.3.1 Mobile-first Approach"
                },
                {
                  "name": "2.3.2 Media Queries"
                },
                {
                  "name": "2.3.3 Responsive Images"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Back-End Development",
          "children": [
            {
              "name": "3.1 Server-Side Languages",
              "children": [
                {
                  "name": "3.1.1 Node.js (with Express.js)"
                },
                {
                  "name": "3.1.2 Python (with Django or Flask)"
                },
                {
                  "name": "3.1.3 Choosing a language based on project requirements"
                }
              ]
            },
            {
              "name": "3.2 Databases",
              "children": [
                {
                  "name": "3.2.1 Relational Databases (SQL, PostgreSQL, MySQL)"
                },
                {
                  "name": "3.2.2 NoSQL Databases (MongoDB)"
                },
                {
                  "name": "3.2.3 Database Design and Normalization"
                }
              ]
            },
            {
              "name": "3.3 APIs and RESTful Services",
              "children": [
                {
                  "name": "3.3.1 Understanding REST principles"
                },
                {
                  "name": "3.3.2 Building and consuming APIs"
                },
                {
                  "name": "3.3.3 Project: Simple API with CRUD operations"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and DevOps",
          "children": [
            {
              "name": "4.1 Hosting Platforms",
              "children": [
                {
                  "name": "4.1.1 Netlify"
                },
                {
                  "name": "4.1.2 Vercel"
                },
                {
                  "name": "4.1.3 Heroku"
                },
                {
                  "name": "4.1.4 AWS/Google Cloud/Azure (basics)"
                }
              ]
            },
            {
              "name": "4.2 Deployment Process",
              "children": [
                {
                  "name": "4.2.1 Setting up a production environment"
                },
                {
                  "name": "4.2.2 Continuous Integration/Continuous Deployment (CI/CD) – basic understanding"
                },
                {
                  "name": "4.2.3 Project: Deploying a web application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Security",
              "children": [
                {
                  "name": "5.1.1 OWASP Top 10"
                },
                {
                  "name": "5.1.2 Authentication and Authorization"
                },
                {
                  "name": "5.1.3 Input Validation and Sanitization"
                }
              ]
            },
            {
              "name": "5.2 Testing",
              "children": [
                {
                  "name": "5.2.1 Unit Testing"
                },
                {
                  "name": "5.2.2 Integration Testing"
                },
                {
                  "name": "5.2.3 End-to-End Testing"
                }
              ]
            },
            {
              "name": "5.3 Specialization",
              "children": [
                {
                  "name": "5.3.1 Full Stack Development"
                },
                {
                  "name": "5.3.2 Front-End Specialization (e.g., UI/UX, advanced frameworks)"
                },
                {
                  "name": "5.3.3 Back-End Specialization (e.g., Serverless, Microservices)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a java developer",
    "output": {
      "name": "I want to become a Java Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Java Concepts",
              "children": [
                {
                  "name": "1.1.1 Data Types & Variables"
                },
                {
                  "name": "1.1.2 Operators & Control Flow"
                },
                {
                  "name": "1.1.3 Object-Oriented Programming (OOP) Principles: Classes, Objects, Inheritance, Polymorphism, Encapsulation, Abstraction"
                },
                {
                  "name": "1.1.4  Exception Handling"
                }
              ]
            },
            {
              "name": "1.2 Working with Data",
              "children": [
                {
                  "name": "1.2.1 Arrays & Collections (ArrayList, HashMap, etc.)"
                },
                {
                  "name": "1.2.2 Input/Output (IO) Operations"
                },
                {
                  "name": "1.2.3 String Manipulation"
                }
              ]
            },
            {
              "name": "1.3 Practice Projects",
              "children": [
                {
                  "name": "1.3.1 Simple Calculator"
                },
                {
                  "name": "1.3.2 Student Management System (basic)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Java",
          "children": [
            {
              "name": "2.1 Advanced OOP Concepts",
              "children": [
                {
                  "name": "2.1.1 Interfaces and Abstract Classes"
                },
                {
                  "name": "2.1.2 Generics"
                },
                {
                  "name": "2.1.3 Lambda Expressions and Streams"
                }
              ]
            },
            {
              "name": "2.2 Databases and JDBC",
              "children": [
                {
                  "name": "2.2.1 Introduction to SQL"
                },
                {
                  "name": "2.2.2 Connecting to Databases using JDBC"
                },
                {
                  "name": "2.2.3 CRUD operations with JDBC"
                }
              ]
            },
            {
              "name": "2.3 Practice Projects",
              "children": [
                {
                  "name": "2.3.1 Library Management System (using JDBC)"
                },
                {
                  "name": "2.3.2 Simple E-commerce Application (basic functionality)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Frameworks and Technologies",
          "children": [
            {
              "name": "3.1 Spring Framework Basics",
              "children": [
                {
                  "name": "3.1.1 Dependency Injection"
                },
                {
                  "name": "3.1.2 Inversion of Control"
                },
                {
                  "name": "3.1.3 Spring Boot (Getting Started)"
                }
              ]
            },
            {
              "name": "3.2 Web Development with Spring MVC or Spring Boot",
              "children": [
                {
                  "name": "3.2.1 RESTful APIs"
                },
                {
                  "name": "3.2.2 Controllers and Views"
                },
                {
                  "name": "3.2.3 Data Binding and Validation"
                }
              ]
            },
            {
              "name": "3.3 Testing",
              "children": [
                {
                  "name": "3.3.1 Unit Testing with JUnit"
                },
                {
                  "name": "3.3.2 Integration Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Java and Deployment",
          "children": [
            {
              "name": "4.1 Concurrency and Multithreading",
              "children": [
                {
                  "name": "4.1.1 Threads and Synchronization"
                },
                {
                  "name": "4.1.2 Concurrent Collections"
                },
                {
                  "name": "4.1.3 Executor Framework"
                }
              ]
            },
            {
              "name": "4.2 Design Patterns",
              "children": [
                {
                  "name": "4.2.1 Creational Patterns"
                },
                {
                  "name": "4.2.2 Structural Patterns"
                },
                {
                  "name": "4.2.3 Behavioral Patterns"
                }
              ]
            },
            {
              "name": "4.3 Deployment and DevOps",
              "children": [
                {
                  "name": "4.3.1 Building JAR/WAR files"
                },
                {
                  "name": "4.3.2 Deploying to Application Servers (Tomcat, JBoss, etc.)"
                },
                {
                  "name": "4.3.3 Introduction to CI/CD"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization and Continuous Learning",
          "children": [
            {
              "name": "5.1 Choose a Specialization",
              "children": [
                {
                  "name": "5.1.1 Android Development"
                },
                {
                  "name": "5.1.2 Big Data with Java"
                },
                {
                  "name": "5.1.3 Microservices with Spring Cloud"
                },
                {
                  "name": "5.1.4 DevOps for Java Applications"
                }
              ]
            },
            {
              "name": "5.2 Stay Updated",
              "children": [
                {
                  "name": "5.2.1 Follow Java Blogs and Communities"
                },
                {
                  "name": "5.2.2 Attend Conferences and Workshops"
                },
                {
                  "name": "5.2.3 Contribute to Open Source Projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Big Data Engineer",
    "output": {
      "name": "i want to become a Big Data Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals (Data Structures, Control Flow)"
                },
                {
                  "name": "1.1.2 SQL for Data Manipulation"
                },
                {
                  "name": "1.1.3 Basic Linux Commands"
                }
              ]
            },
            {
              "name": "1.2 Mathematics and Statistics",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics"
                },
                {
                  "name": "1.2.2 Probability and Distributions"
                },
                {
                  "name": "1.2.3 Linear Algebra basics"
                }
              ]
            },
            {
              "name": "1.3 Data Wrangling and Visualization",
              "children": [
                {
                  "name": "1.3.1 Data Cleaning Techniques"
                },
                {
                  "name": "1.3.2 Pandas/NumPy for Data Manipulation"
                },
                {
                  "name": "1.3.3 Data Visualization with Matplotlib/Seaborn.  Project: Create visualizations from a public dataset."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Big Data Technologies",
          "children": [
            {
              "name": "2.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "2.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "2.1.2 MapReduce"
                },
                {
                  "name": "2.1.3 YARN (Yet Another Resource Negotiator)"
                }
              ]
            },
            {
              "name": "2.2 Spark Fundamentals",
              "children": [
                {
                  "name": "2.2.1 Spark RDDs and Transformations"
                },
                {
                  "name": "2.2.2 Spark SQL and DataFrames"
                },
                {
                  "name": "2.2.3 Spark Streaming. Project: Process a streaming dataset using Spark Streaming."
                }
              ]
            },
            {
              "name": "2.3 NoSQL Databases",
              "children": [
                {
                  "name": "2.3.1 Introduction to NoSQL (Document, Key-Value, Graph)"
                },
                {
                  "name": "2.3.2 MongoDB"
                },
                {
                  "name": "2.3.3 Cassandra"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Platforms and Services",
          "children": [
            {
              "name": "3.1 Cloud Storage",
              "children": [
                {
                  "name": "3.1.1 AWS S3"
                },
                {
                  "name": "3.1.2 Azure Blob Storage"
                },
                {
                  "name": "3.1.3 Google Cloud Storage"
                }
              ]
            },
            {
              "name": "3.2 Cloud-based Big Data Services",
              "children": [
                {
                  "name": "3.2.1 AWS EMR (Elastic MapReduce)"
                },
                {
                  "name": "3.2.2 Azure HDInsight"
                },
                {
                  "name": "3.2.3 Google Cloud Dataproc"
                }
              ]
            },
            {
              "name": "3.3 Cloud Data Warehousing",
              "children": [
                {
                  "name": "3.3.1 Snowflake"
                },
                {
                  "name": "3.3.2 BigQuery"
                },
                {
                  "name": "3.3.3 Redshift"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics and Specialization",
          "children": [
            {
              "name": "4.1 Data Pipelines and ETL",
              "children": [
                {
                  "name": "4.1.1 Apache Airflow"
                },
                {
                  "name": "4.1.2 Apache Kafka"
                },
                {
                  "name": "4.1.3 Project: Build a data pipeline to ingest, transform, and load data."
                }
              ]
            },
            {
              "name": "4.2 Machine Learning for Big Data",
              "children": [
                {
                  "name": "4.2.1 Introduction to ML algorithms"
                },
                {
                  "name": "4.2.2 Scikit-learn"
                },
                {
                  "name": "4.2.3 MLlib (Spark's ML library)"
                }
              ]
            },
            {
              "name": "4.3 Big Data Security and Governance",
              "children": [
                {
                  "name": "4.3.1 Data Security Best Practices"
                },
                {
                  "name": "4.3.2 Access Control and Authorization"
                },
                {
                  "name": "4.3.3 Data Governance Policies"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio Building and Job Search",
          "children": [
            {
              "name": "5.1 Building a Portfolio",
              "children": [
                {
                  "name": "5.1.1 GitHub repository with code examples and projects"
                },
                {
                  "name": "5.1.2 Kaggle competitions"
                },
                {
                  "name": "5.1.3 Personal website showcasing skills and projects"
                }
              ]
            },
            {
              "name": "5.2 Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1 Networking"
                },
                {
                  "name": "5.2.2 Tailoring resumes and cover letters"
                },
                {
                  "name": "5.2.3 Interview preparation (technical and behavioral questions)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a cyber security analyst",
    "output": {
      "name": "I want to become a cybersecurity analyst",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP Model"
                },
                {
                  "name": "1.1.2 Subnetting and IP Addressing"
                },
                {
                  "name": "1.1.3 Network Protocols (HTTP, HTTPS, DNS, etc.)"
                }
              ]
            },
            {
              "name": "1.2 Operating Systems",
              "children": [
                {
                  "name": "1.2.1 Windows Security Features"
                },
                {
                  "name": "1.2.2 Linux Command Line & Security Hardening"
                },
                {
                  "name": "1.2.3 Basic System Administration"
                }
              ]
            },
            {
              "name": "1.3 Cybersecurity Concepts",
              "children": [
                {
                  "name": "1.3.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.3.2 Risk Management and Assessment"
                },
                {
                  "name": "1.3.3 Common Security Threats and Vulnerabilities"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Security Skills",
          "children": [
            {
              "name": "2.1 Security Tools",
              "children": [
                {
                  "name": "2.1.1 Nmap (Port Scanning)"
                },
                {
                  "name": "2.1.2 Wireshark (Packet Analysis)"
                },
                {
                  "name": "2.1.3 Practice: Network Vulnerability Scan using Nmap"
                }
              ]
            },
            {
              "name": "2.2 Ethical Hacking & Penetration Testing",
              "children": [
                {
                  "name": "2.2.1 Reconnaissance Techniques"
                },
                {
                  "name": "2.2.2 Vulnerability Scanning and Exploitation"
                },
                {
                  "name": "2.2.3 Report Writing & Penetration Testing Methodology (e.g., OWASP)"
                }
              ]
            },
            {
              "name": "2.3 Incident Response",
              "children": [
                {
                  "name": "2.3.1 Incident Handling Process"
                },
                {
                  "name": "2.3.2 Log Analysis"
                },
                {
                  "name": "2.3.3 Malware Analysis (Basic)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Specialized Knowledge",
          "children": [
            {
              "name": "3.1 Cloud Security",
              "children": [
                {
                  "name": "3.1.1 AWS/Azure/GCP Security Services"
                },
                {
                  "name": "3.1.2 Cloud Security Posture Management (CSPM)"
                },
                {
                  "name": "3.1.3 Practice: Secure Cloud Configuration"
                }
              ]
            },
            {
              "name": "3.2 Database Security",
              "children": [
                {
                  "name": "3.2.1 SQL Injection Prevention"
                },
                {
                  "name": "3.2.2 Database Auditing and Monitoring"
                },
                {
                  "name": "3.2.3 Secure Database Configuration"
                }
              ]
            },
            {
              "name": "3.3 Security Monitoring and SIEM",
              "children": [
                {
                  "name": "3.3.1 Log Management and Analysis"
                },
                {
                  "name": "3.3.2 Security Information and Event Management (SIEM) tools"
                },
                {
                  "name": "3.3.3 Threat Detection and Response"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Certification & Experience",
          "children": [
            {
              "name": "4.1 Certifications",
              "children": [
                {
                  "name": "4.1.1 CompTIA Security+"
                },
                {
                  "name": "4.1.2 Certified Ethical Hacker (CEH)"
                },
                {
                  "name": "4.1.3 CISSP (Consider after significant experience)"
                }
              ]
            },
            {
              "name": "4.2 Practical Experience",
              "children": [
                {
                  "name": "4.2.1 Internships"
                },
                {
                  "name": "4.2.2 Capture The Flag (CTF) Competitions"
                },
                {
                  "name": "4.2.3 Volunteer work in cybersecurity related organization"
                }
              ]
            },
            {
              "name": "4.3 Networking",
              "children": [
                {
                  "name": "4.3.1 Building professional network"
                },
                {
                  "name": "4.3.2 Attending industry events"
                },
                {
                  "name": "4.3.3 Contributing to open source projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn big data",
    "output": {
      "name": "i want to learn big data",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 What is Big Data? (Volume, Velocity, Variety, Veracity, Value)"
                },
                {
                  "name": "1.1.2 Big Data Challenges and Solutions"
                },
                {
                  "name": "1.1.3 Introduction to Data Warehousing and Data Lakes"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Python for Data Science (Basic Syntax, Data Structures, Libraries)"
                },
                {
                  "name": "1.2.2 SQL for Data Management (CRUD operations, joins, aggregations)"
                },
                {
                  "name": "1.2.3 Project: Basic Data Cleaning and Analysis using Python and a small dataset"
                }
              ]
            },
            {
              "name": "1.3 Statistics and Data Analysis",
              "children": [
                {
                  "name": "1.3.1 Descriptive Statistics (Mean, Median, Mode, Standard Deviation)"
                },
                {
                  "name": "1.3.2 Inferential Statistics (Hypothesis Testing, Confidence Intervals)"
                },
                {
                  "name": "1.3.3 Data Visualization (Matplotlib, Seaborn, Tableau - Introduction)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Big Data Technologies",
          "children": [
            {
              "name": "2.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "2.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "2.1.2 MapReduce"
                },
                {
                  "name": "2.1.3 YARN (Yet Another Resource Negotiator)"
                }
              ]
            },
            {
              "name": "2.2 Spark",
              "children": [
                {
                  "name": "2.2.1 Spark Core (RDDs, Transformations, Actions)"
                },
                {
                  "name": "2.2.2 Spark SQL"
                },
                {
                  "name": "2.2.3 Project: Analyzing a larger dataset using Spark"
                }
              ]
            },
            {
              "name": "2.3 NoSQL Databases",
              "children": [
                {
                  "name": "2.3.1 MongoDB (Document Database)"
                },
                {
                  "name": "2.3.2 Cassandra (Wide-column store)"
                },
                {
                  "name": "2.3.3 Choosing the right NoSQL database for a given scenario"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Computing for Big Data",
          "children": [
            {
              "name": "3.1 Cloud Platforms (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "3.1.1 Choosing a cloud provider"
                },
                {
                  "name": "3.1.2 Setting up a cloud environment for big data processing"
                },
                {
                  "name": "3.1.3 Cost optimization strategies"
                }
              ]
            },
            {
              "name": "3.2 Cloud-based Big Data Services",
              "children": [
                {
                  "name": "3.2.1 AWS EMR (Elastic MapReduce)"
                },
                {
                  "name": "3.2.2 Azure HDInsight"
                },
                {
                  "name": "3.2.3 GCP Dataproc"
                }
              ]
            },
            {
              "name": "3.3 Serverless Computing for Big Data",
              "children": [
                {
                  "name": "3.3.1 AWS Lambda"
                },
                {
                  "name": "3.3.2 Azure Functions"
                },
                {
                  "name": "3.3.3 GCP Cloud Functions"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Machine Learning for Big Data",
              "children": [
                {
                  "name": "4.1.1 Introduction to Machine Learning Algorithms"
                },
                {
                  "name": "4.1.2 Implementing ML algorithms on Big Data using Spark MLlib"
                },
                {
                  "name": "4.1.3 Project: Building a predictive model on a large dataset"
                }
              ]
            },
            {
              "name": "4.2 Data Streaming",
              "children": [
                {
                  "name": "4.2.1 Apache Kafka"
                },
                {
                  "name": "4.2.2 Apache Flink"
                },
                {
                  "name": "4.2.3 Real-time data processing applications"
                }
              ]
            },
            {
              "name": "4.3 Big Data Security and Privacy",
              "children": [
                {
                  "name": "4.3.1 Data encryption and access control"
                },
                {
                  "name": "4.3.2 GDPR and data privacy regulations"
                },
                {
                  "name": "4.3.3 Secure data storage and transfer"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Capstone Project",
          "children": [
            {
              "name": "5.1  Identify a real-world problem suitable for Big Data solutions.",
              "children": []
            },
            {
              "name": "5.2  Design and implement a complete solution using the technologies learned.",
              "children": []
            },
            {
              "name": "5.3  Present findings and discuss challenges overcome.",
              "children": []
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Web3 Developer",
    "output": {
      "name": "i want to become a Web3 Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Blockchain Fundamentals (Decentralization, Consensus Mechanisms, Smart Contracts)"
                },
                {
                  "name": "1.1.2 Cryptography Basics (Hashing, Public-Private Key Pairs, Digital Signatures)"
                },
                {
                  "name": "1.1.3 Web3 Ecosystem Overview (DeFi, NFTs, DAOs, Metaverse)"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 JavaScript (ES6+)"
                },
                {
                  "name": "1.2.2 Solidity (Smart Contract Development)"
                },
                {
                  "name": "1.2.3  Practice: Build a simple ERC-20 token contract"
                }
              ]
            },
            {
              "name": "1.3 Essential Tools",
              "children": [
                {
                  "name": "1.3.1 Remix IDE"
                },
                {
                  "name": "1.3.2 Hardhat"
                },
                {
                  "name": "1.3.3 Truffle"
                },
                {
                  "name": "1.3.4 Metamask"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Smart Contract Development",
          "children": [
            {
              "name": "2.1 Solidity Deep Dive",
              "children": [
                {
                  "name": "2.1.1 Data Types and Structures"
                },
                {
                  "name": "2.1.2 Control Flow and Functions"
                },
                {
                  "name": "2.1.3 Modifiers and Events"
                }
              ]
            },
            {
              "name": "2.2 Advanced Solidity Concepts",
              "children": [
                {
                  "name": "2.2.1 Inheritance and Interfaces"
                },
                {
                  "name": "2.2.2 Libraries and External Calls"
                },
                {
                  "name": "2.2.3 Security Best Practices (Reentrancy, Gas Optimization)"
                },
                {
                  "name": "2.2.4 Practice: Develop a decentralized voting contract"
                }
              ]
            },
            {
              "name": "2.3 Testing and Deployment",
              "children": [
                {
                  "name": "2.3.1 Unit Testing with Hardhat or Truffle"
                },
                {
                  "name": "2.3.2 Deployment to Testnets (e.g., Rinkeby, Goerli)"
                },
                {
                  "name": "2.3.3 Deployment to Mainnet (Ethereum, Polygon etc.)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Frontend Development (DApps)",
          "children": [
            {
              "name": "3.1 Web3.js Integration",
              "children": [
                {
                  "name": "3.1.1 Connecting to MetaMask"
                },
                {
                  "name": "3.1.2 Sending Transactions"
                },
                {
                  "name": "3.1.3 Interacting with Smart Contracts"
                }
              ]
            },
            {
              "name": "3.2 React or Other Frameworks",
              "children": [
                {
                  "name": "3.2.1 Building User Interfaces"
                },
                {
                  "name": "3.2.2 State Management"
                },
                {
                  "name": "3.2.3 Integrating with backend smart contracts"
                }
              ]
            },
            {
              "name": "3.3  DApp Deployment & Hosting",
              "children": [
                {
                  "name": "3.3.1 IPFS & Decentralized Storage"
                },
                {
                  "name": "3.3.2 Decentralized Hosting"
                },
                {
                  "name": "3.3.3 Practice: Build a simple DApp using React and a smart contract"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized Areas",
          "children": [
            {
              "name": "4.1 Decentralized Finance (DeFi)",
              "children": [
                {
                  "name": "4.1.1 AMMs (Automated Market Makers)"
                },
                {
                  "name": "4.1.2 Lending and Borrowing Protocols"
                },
                {
                  "name": "4.1.3 Yield Farming and Staking"
                }
              ]
            },
            {
              "name": "4.2 Non-Fungible Tokens (NFTs)",
              "children": [
                {
                  "name": "4.2.1 ERC-721 and ERC-1155 Standards"
                },
                {
                  "name": "4.2.2 Creating and Minting NFTs"
                },
                {
                  "name": "4.2.3 NFT Marketplaces"
                }
              ]
            },
            {
              "name": "4.3 Decentralized Autonomous Organizations (DAOs)",
              "children": [
                {
                  "name": "4.3.1 DAO Governance Models"
                },
                {
                  "name": "4.3.2 Smart Contract Implementation for DAOs"
                },
                {
                  "name": "4.3.3 DAO Tools and Platforms"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics & Continuous Learning",
          "children": [
            {
              "name": "5.1 Security Auditing",
              "children": [
                {
                  "name": "5.1.1  Formal Verification"
                },
                {
                  "name": "5.1.2 Bug Bounties"
                },
                {
                  "name": "5.1.3 Security Audits"
                }
              ]
            },
            {
              "name": "5.2 Scaling Solutions",
              "children": [
                {
                  "name": "5.2.1 Layer-2 Solutions (Optimism, Arbitrum)"
                },
                {
                  "name": "5.2.2 Sharding and other scaling techniques"
                }
              ]
            },
            {
              "name": "5.3  Blockchain Interoperability",
              "children": [
                {
                  "name": "5.3.1 Cross-Chain Communication"
                },
                {
                  "name": "5.3.2 Bridge Technologies"
                }
              ]
            },
            {
              "name": "5.4 Continuous Learning and Community Engagement",
              "children": [
                {
                  "name": "5.4.1 Following Web3 News and Blogs"
                },
                {
                  "name": "5.4.2 Participating in Web3 Communities (Forums, Discord, Twitter)"
                },
                {
                  "name": "5.4.3 Contributing to Open Source Projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn Web3",
    "output": {
      "name": "Learn Web3",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Decentralization"
                },
                {
                  "name": "1.1.2 Blockchain Technology (Basics)"
                },
                {
                  "name": "1.1.3 Cryptography Fundamentals (Hashing, Public-Private Keys)"
                }
              ]
            },
            {
              "name": "1.2 Web3 Architecture",
              "children": [
                {
                  "name": "1.2.1 Understanding Client-Server vs. Peer-to-Peer"
                },
                {
                  "name": "1.2.2 Smart Contracts (Introduction)"
                },
                {
                  "name": "1.2.3 Decentralized Applications (dApps) - Overview"
                }
              ]
            },
            {
              "name": "1.3 Essential Tools",
              "children": [
                {
                  "name": "1.3.1 Setting up a MetaMask wallet"
                },
                {
                  "name": "1.3.2 Using a blockchain explorer (e.g., Etherscan)"
                },
                {
                  "name": "1.3.3 Interacting with a testnet"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Ethereum Development",
          "children": [
            {
              "name": "2.1 Solidity Programming",
              "children": [
                {
                  "name": "2.1.1 Data types, variables, and operators"
                },
                {
                  "name": "2.1.2 Control flow and functions"
                },
                {
                  "name": "2.1.3 Project: Simple ERC-20 token contract"
                }
              ]
            },
            {
              "name": "2.2 Smart Contract Security",
              "children": [
                {
                  "name": "2.2.1 Common vulnerabilities (Reentrancy, Overflow/Underflow)"
                },
                {
                  "name": "2.2.2 Secure coding practices"
                },
                {
                  "name": "2.2.3 Auditing smart contracts"
                }
              ]
            },
            {
              "name": "2.3 Remix IDE and Hardhat",
              "children": [
                {
                  "name": "2.3.1 Deploying contracts to testnets"
                },
                {
                  "name": "2.3.2 Using Hardhat for testing and development"
                },
                {
                  "name": "2.3.3 Project:  Build a simple decentralized voting system"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Decentralized Finance (DeFi)",
          "children": [
            {
              "name": "3.1 DeFi Concepts",
              "children": [
                {
                  "name": "3.1.1 AMMs (Automated Market Makers)"
                },
                {
                  "name": "3.1.2 Lending and Borrowing protocols"
                },
                {
                  "name": "3.1.3 Yield farming and staking"
                }
              ]
            },
            {
              "name": "3.2 DeFi Interactions",
              "children": [
                {
                  "name": "3.2.1 Using DeFi protocols (e.g., Uniswap, Aave)"
                },
                {
                  "name": "3.2.2 Understanding gas fees and slippage"
                },
                {
                  "name": "3.2.3 Risk management in DeFi"
                }
              ]
            },
            {
              "name": "3.3 DeFi Tools and Resources",
              "children": [
                {
                  "name": "3.3.1 DeFi dashboards and aggregators"
                },
                {
                  "name": "3.3.2 Researching DeFi projects"
                },
                {
                  "name": "3.3.3 Project:  Analyze a DeFi protocol's smart contracts"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  NFTs and the Metaverse",
          "children": [
            {
              "name": "4.1 NFT Concepts",
              "children": [
                {
                  "name": "4.1.1 Understanding NFTs and their use cases"
                },
                {
                  "name": "4.1.2 Different NFT standards (ERC-721, ERC-1155)"
                },
                {
                  "name": "4.1.3 Minting and trading NFTs"
                }
              ]
            },
            {
              "name": "4.2 Metaverse Exploration",
              "children": [
                {
                  "name": "4.2.1 Exploring different metaverse platforms"
                },
                {
                  "name": "4.2.2 Understanding virtual worlds and digital ownership"
                },
                {
                  "name": "4.2.3 The future of the metaverse"
                }
              ]
            },
            {
              "name": "4.3 NFT Tools and Platforms",
              "children": [
                {
                  "name": "4.3.1 NFT marketplaces (OpenSea, Rarible)"
                },
                {
                  "name": "4.3.2 NFT creation tools"
                },
                {
                  "name": "4.3.3 Project: Create and list your own NFT"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Scaling Solutions",
              "children": [
                {
                  "name": "5.1.1 Layer-2 scaling solutions (e.g., Optimism, Arbitrum)"
                },
                {
                  "name": "5.1.2 Rollups and state channels"
                },
                {
                  "name": "5.1.3 Understanding the trade-offs of different scaling solutions"
                }
              ]
            },
            {
              "name": "5.2 DAOs (Decentralized Autonomous Organizations)",
              "children": [
                {
                  "name": "5.2.1 Governance models and tokenomics"
                },
                {
                  "name": "5.2.2 DAO structure and operations"
                },
                {
                  "name": "5.2.3 Participating in DAO governance"
                }
              ]
            },
            {
              "name": "5.3 Web3 Security Best Practices",
              "children": [
                {
                  "name": "5.3.1 Advanced Smart Contract Security"
                },
                {
                  "name": "5.3.2  Protecting Private Keys and Wallets"
                },
                {
                  "name": "5.3.3  Identifying and Avoiding Web3 Scams"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a rust developer",
    "output": {
      "name": "I want to become a Rust developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, and Control Flow"
                },
                {
                  "name": "1.1.2 Ownership and Borrowing"
                },
                {
                  "name": "1.1.3 Functions and Modules"
                }
              ]
            },
            {
              "name": "1.2 Basic Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays and Vectors"
                },
                {
                  "name": "1.2.2 Tuples and Structs"
                },
                {
                  "name": "1.2.3 Enums"
                }
              ]
            },
            {
              "name": "1.3 Error Handling",
              "children": [
                {
                  "name": "1.3.1 Result type"
                },
                {
                  "name": "1.3.2 Panic! and unwinding"
                },
                {
                  "name": "1.3.3 Custom error types"
                }
              ]
            },
            {
              "name": "1.4. Practical Project: Simple CLI Tool",
              "children": [
                {
                  "name": "1.4.1 Design a basic command-line application (e.g., a temperature converter)"
                },
                {
                  "name": "1.4.2 Implement the application using the concepts learned above"
                },
                {
                  "name": "1.4.3 Test the application thoroughly"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Advanced Data Structures",
              "children": [
                {
                  "name": "2.1.1 HashMaps and Sets"
                },
                {
                  "name": "2.1.2 Traits and Generics"
                },
                {
                  "name": "2.1.3 Smart Pointers"
                }
              ]
            },
            {
              "name": "2.2 Concurrency",
              "children": [
                {
                  "name": "2.2.1 Threads and Mutexes"
                },
                {
                  "name": "2.2.2 Channels and Message Passing"
                },
                {
                  "name": "2.2.3 Async/Await"
                }
              ]
            },
            {
              "name": "2.3 Advanced Error Handling",
              "children": [
                {
                  "name": "2.3.1 Using the `anyhow` crate for simplified error handling"
                },
                {
                  "name": "2.3.2 Implementing custom error types with more context"
                },
                {
                  "name": "2.3.3  Best practices for error handling in large projects"
                }
              ]
            },
            {
              "name": "2.4 Practical Project: Multithreaded Application",
              "children": [
                {
                  "name": "2.4.1 Design a multithreaded application (e.g., a file downloader)"
                },
                {
                  "name": "2.4.2 Implement the application using threads and channels"
                },
                {
                  "name": "2.4.3 Profile and optimize for performance"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Rust",
          "children": [
            {
              "name": "3.1  Unsafe Rust",
              "children": [
                {
                  "name": "3.1.1 Understanding memory management"
                },
                {
                  "name": "3.1.2 Working with pointers and raw pointers"
                },
                {
                  "name": "3.1.3  When and why to use unsafe Rust"
                }
              ]
            },
            {
              "name": "3.2  Macros and Metaprogramming",
              "children": [
                {
                  "name": "3.2.1 Declarative macros"
                },
                {
                  "name": "3.2.2 Procedural macros"
                },
                {
                  "name": "3.2.3  Advanced macro techniques"
                }
              ]
            },
            {
              "name": "3.3  Testing and Debugging",
              "children": [
                {
                  "name": "3.3.1 Unit testing with `#[test]`"
                },
                {
                  "name": "3.3.2 Integration testing"
                },
                {
                  "name": "3.3.3 Using a debugger (e.g., lldb or GDB)"
                }
              ]
            },
            {
              "name": "3.4 Practical Project:  Advanced CLI Application with Error Handling",
              "children": [
                {
                  "name": "3.4.1 Design a CLI application that utilizes advanced features learned"
                },
                {
                  "name": "3.4.2 Implement robust error handling and logging"
                },
                {
                  "name": "3.4.3 Write comprehensive unit and integration tests"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Ecosystem and Libraries",
          "children": [
            {
              "name": "4.1  Cargo and Crates",
              "children": [
                {
                  "name": "4.1.1  Managing dependencies"
                },
                {
                  "name": "4.1.2  Building and publishing crates"
                },
                {
                  "name": "4.1.3  Using external libraries"
                }
              ]
            },
            {
              "name": "4.2  Web Frameworks",
              "children": [
                {
                  "name": "4.2.1  Actix Web"
                },
                {
                  "name": "4.2.2  Rocket"
                },
                {
                  "name": "4.2.3  Choosing the right framework"
                }
              ]
            },
            {
              "name": "4.3  Database Interactions",
              "children": [
                {
                  "name": "4.3.1  SQLx"
                },
                {
                  "name": "4.3.2  Diesel"
                },
                {
                  "name": "4.3.3  NoSQL databases (e.g., MongoDB)"
                }
              ]
            },
            {
              "name": "4.4 Practical Project: Web Application",
              "children": [
                {
                  "name": "4.4.1 Design a simple web application (e.g., a to-do list)"
                },
                {
                  "name": "4.4.2 Implement the application using a chosen web framework and database"
                },
                {
                  "name": "4.4.3 Deploy the application"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Techniques and Specialization",
          "children": [
            {
              "name": "5.1  Embedded Systems Programming",
              "children": [
                {
                  "name": "5.1.1  Working with microcontrollers"
                },
                {
                  "name": "5.1.2  Low-level programming techniques"
                }
              ]
            },
            {
              "name": "5.2  Game Development",
              "children": [
                {
                  "name": "5.2.1  Using game engines (e.g., Bevy)"
                },
                {
                  "name": "5.2.2  Graphics programming"
                }
              ]
            },
            {
              "name": "5.3  Systems Programming",
              "children": [
                {
                  "name": "5.3.1  Working with operating systems"
                },
                {
                  "name": "5.3.2  Kernel development"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Angular Developer",
    "output": {
      "name": "i want to become an Angular Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core JavaScript Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions, Arrays, Objects"
                },
                {
                  "name": "1.1.4 DOM Manipulation (basic understanding)"
                }
              ]
            },
            {
              "name": "1.2 TypeScript Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Types (number, string, boolean, etc.)"
                },
                {
                  "name": "1.2.2 Interfaces and Classes"
                },
                {
                  "name": "1.2.3 Generics"
                },
                {
                  "name": "1.2.4 Practice: Create a simple TypeScript application"
                }
              ]
            },
            {
              "name": "1.3 Introduction to Angular CLI",
              "children": [
                {
                  "name": "1.3.1 Installation and Setup"
                },
                {
                  "name": "1.3.2 Creating a new project"
                },
                {
                  "name": "1.3.3 Running the application"
                },
                {
                  "name": "1.3.4 Basic CLI commands (generate, serve, build)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Angular Components & Modules",
          "children": [
            {
              "name": "2.1 Components",
              "children": [
                {
                  "name": "2.1.1 Understanding components (templates, classes, selectors)"
                },
                {
                  "name": "2.1.2 Data Binding (interpolation, property binding, event binding)"
                },
                {
                  "name": "2.1.3 Component Interaction (input/output properties)"
                },
                {
                  "name": "2.1.4 Practice: Build a simple component with data binding"
                }
              ]
            },
            {
              "name": "2.2 Modules",
              "children": [
                {
                  "name": "2.2.1 Understanding NgModule and its purpose"
                },
                {
                  "name": "2.2.2 Importing and exporting modules"
                },
                {
                  "name": "2.2.3 Routing Modules"
                },
                {
                  "name": "2.2.4 Practice: Create separate modules for features"
                }
              ]
            },
            {
              "name": "2.3 Services & Dependency Injection",
              "children": [
                {
                  "name": "2.3.1 Creating and using services"
                },
                {
                  "name": "2.3.2 Dependency Injection"
                },
                {
                  "name": "2.3.3 Understanding the lifecycle hooks"
                },
                {
                  "name": "2.3.4 Practice: Refactor existing components to use services"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Routing & Navigation",
              "children": [
                {
                  "name": "3.1.1 Setting up routing in Angular"
                },
                {
                  "name": "3.1.2 Defining routes"
                },
                {
                  "name": "3.1.3 Navigating between routes"
                },
                {
                  "name": "3.1.4 Route parameters and query parameters"
                }
              ]
            },
            {
              "name": "3.2 Forms",
              "children": [
                {
                  "name": "3.2.1 Template-driven forms"
                },
                {
                  "name": "3.2.2 Reactive forms"
                },
                {
                  "name": "3.2.3 Form validation"
                },
                {
                  "name": "3.2.4 Practice: Build a form with validation"
                }
              ]
            },
            {
              "name": "3.3 HTTP Client",
              "children": [
                {
                  "name": "3.3.1 Making HTTP requests"
                },
                {
                  "name": "3.3.2 Handling responses"
                },
                {
                  "name": "3.3.3 Error handling"
                },
                {
                  "name": "3.3.4 Practice: Fetch data from a REST API"
                }
              ]
            }
          ]
        },
        {
          "name": "4. State Management & Testing",
          "children": [
            {
              "name": "4.1 State Management (NgRx or Akita)",
              "children": [
                {
                  "name": "4.1.1 Introduction to NgRx or Akita"
                },
                {
                  "name": "4.1.2 Implementing state management in a simple application"
                },
                {
                  "name": "4.1.3 Handling Asynchronous operations"
                }
              ]
            },
            {
              "name": "4.2 Testing (Unit & E2E)",
              "children": [
                {
                  "name": "4.2.1 Unit testing with Karma and Jasmine"
                },
                {
                  "name": "4.2.2 End-to-end testing with Protractor or Cypress"
                },
                {
                  "name": "4.2.3 Practice: Write unit and e2e tests for existing components"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment & Best Practices",
          "children": [
            {
              "name": "5.1 Deployment to different platforms",
              "children": [
                {
                  "name": "5.1.1 Deployment to GitHub Pages"
                },
                {
                  "name": "5.1.2 Deployment to Netlify or other platforms"
                },
                {
                  "name": "5.1.3 Using CI/CD pipelines"
                }
              ]
            },
            {
              "name": "5.2 Angular Best Practices",
              "children": [
                {
                  "name": "5.2.1 Code Style Guidelines"
                },
                {
                  "name": "5.2.2 Performance Optimization"
                },
                {
                  "name": "5.2.3 Security Best Practices"
                }
              ]
            },
            {
              "name": "5.3  Advanced topics (Optional)",
              "children": [
                {
                  "name": "5.3.1 RxJS"
                },
                {
                  "name": "5.3.2 Angular Material"
                },
                {
                  "name": "5.3.3 Lazy Loading"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Golang Developer",
    "output": {
      "name": "I want to become a Golang Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Constants"
                },
                {
                  "name": "1.1.2 Operators and Control Flow"
                },
                {
                  "name": "1.1.3 Functions and Packages"
                }
              ]
            },
            {
              "name": "1.2 Basic Syntax & Structure",
              "children": [
                {
                  "name": "1.2.1 Writing your first Go program"
                },
                {
                  "name": "1.2.2 Understanding Go Modules"
                },
                {
                  "name": "1.2.3 Working with the Go Toolchain (go build, run, test)"
                }
              ]
            },
            {
              "name": "1.3 Data Structures",
              "children": [
                {
                  "name": "1.3.1 Arrays and Slices"
                },
                {
                  "name": "1.3.2 Maps"
                },
                {
                  "name": "1.3.3 Structs"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Concurrency",
              "children": [
                {
                  "name": "2.1.1 Goroutines and Channels"
                },
                {
                  "name": "2.1.2 Synchronization primitives (mutexes, waitgroups)"
                },
                {
                  "name": "2.1.3 Project: Concurrent File Downloader"
                }
              ]
            },
            {
              "name": "2.2 Error Handling",
              "children": [
                {
                  "name": "2.2.1 Understanding Go's error handling mechanism"
                },
                {
                  "name": "2.2.2 Using custom error types"
                },
                {
                  "name": "2.2.3 Project: Robust Command Line Application with Error Handling"
                }
              ]
            },
            {
              "name": "2.3  Working with the Standard Library",
              "children": [
                {
                  "name": "2.3.1  Using packages like `io`, `os`, `net/http`"
                },
                {
                  "name": "2.3.2  Understanding package management with Go Modules"
                },
                {
                  "name": "2.3.3 Project:  Simple Web Server"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Topics",
          "children": [
            {
              "name": "3.1 Advanced Concurrency Patterns",
              "children": [
                {
                  "name": "3.1.1 Context package"
                },
                {
                  "name": "3.1.2 Select statement"
                },
                {
                  "name": "3.1.3 Project:  High-Performance Web Server with Concurrency"
                }
              ]
            },
            {
              "name": "3.2 Testing and Benchmarking",
              "children": [
                {
                  "name": "3.2.1 Unit testing with `testing` package"
                },
                {
                  "name": "3.2.2 Benchmarking with `testing` package"
                },
                {
                  "name": "3.2.3 Mocking and Integration testing"
                }
              ]
            },
            {
              "name": "3.3 Database Interactions",
              "children": [
                {
                  "name": "3.3.1 Connecting to Databases using `database/sql`"
                },
                {
                  "name": "3.3.2 Using an ORM (e.g., GORM, XORM)"
                },
                {
                  "name": "3.3.3 Project:  CRUD application with database persistence"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Building Real-World Applications",
          "children": [
            {
              "name": "4.1 Web Development with Frameworks",
              "children": [
                {
                  "name": "4.1.1 Choosing a framework (e.g., Gin, Echo, Fiber)"
                },
                {
                  "name": "4.1.2 Building REST APIs"
                },
                {
                  "name": "4.1.3 Project:  Full-stack web application"
                }
              ]
            },
            {
              "name": "4.2 CLI Application Development",
              "children": [
                {
                  "name": "4.2.1 Using the `flag` or `cobra` package"
                },
                {
                  "name": "4.2.2 Handling user input and output"
                },
                {
                  "name": "4.2.3 Project:  A command-line tool for interacting with an API"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Beyond",
          "children": [
            {
              "name": "5.1 Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Deploying to cloud platforms (e.g., AWS, GCP, Azure)"
                },
                {
                  "name": "5.1.2 Containerization using Docker"
                },
                {
                  "name": "5.1.3 Using Kubernetes for orchestration"
                }
              ]
            },
            {
              "name": "5.2 Advanced Topics",
              "children": [
                {
                  "name": "5.2.1 Go Generics"
                },
                {
                  "name": "5.2.2  Reflection"
                },
                {
                  "name": "5.2.3  Advanced design patterns in Go"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a MongoDB Developer",
    "output": {
      "name": "I Want to Become a MongoDB Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 NoSQL Databases and MongoDB's place"
                },
                {
                  "name": "1.1.2 Basic MongoDB Architecture (Sharding, Replica Sets)"
                },
                {
                  "name": "1.1.3 Data Modeling with MongoDB (Embedded vs. Referenced Documents)"
                }
              ]
            },
            {
              "name": "1.2 MongoDB Shell & Basic Operations",
              "children": [
                {
                  "name": "1.2.1 Connecting to MongoDB, CRUD operations (Create, Read, Update, Delete)"
                },
                {
                  "name": "1.2.2 Working with collections and documents"
                },
                {
                  "name": "1.2.3 Basic querying using find() and aggregation framework basics (count(), distinct())",
                  "children": []
                }
              ]
            },
            {
              "name": "1.3 Data Types and Validation",
              "children": [
                {
                  "name": "1.3.1 Understanding different data types (Arrays, Objects, etc.)"
                },
                {
                  "name": "1.3.2 Implementing data validation using schema validation"
                },
                {
                  "name": "1.3.3 Practical Exercise: Create a simple application with data validation"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Querying & Aggregation",
          "children": [
            {
              "name": "2.1 Advanced Query Operators",
              "children": [
                {
                  "name": "2.1.1 $lookup, $unwind, $group"
                },
                {
                  "name": "2.1.2 $match, $project, $sort"
                },
                {
                  "name": "2.1.3 Practical Exercise: Build complex queries using advanced operators"
                }
              ]
            },
            {
              "name": "2.2 Aggregation Framework Deep Dive",
              "children": [
                {
                  "name": "2.2.1 Pipelines and stages"
                },
                {
                  "name": "2.2.2 Advanced aggregation techniques (e.g., map-reduce, bucketing)"
                },
                {
                  "name": "2.2.3 Practical Exercise: Design and implement complex aggregation pipelines"
                }
              ]
            },
            {
              "name": "2.3 Indexing and Query Optimization",
              "children": [
                {
                  "name": "2.3.1 Understanding indexes and their impact on performance"
                },
                {
                  "name": "2.3.2 Creating different types of indexes (single field, compound, geospatial)"
                },
                {
                  "name": "2.3.3 Analyzing query execution plans and optimizing queries"
                }
              ]
            }
          ]
        },
        {
          "name": "3. MongoDB Deployment and Management",
          "children": [
            {
              "name": "3.1 Replica Sets and High Availability",
              "children": [
                {
                  "name": "3.1.1 Setting up replica sets for redundancy"
                },
                {
                  "name": "3.1.2 Understanding read preferences and failover mechanisms"
                },
                {
                  "name": "3.1.3 Practical Exercise: Deploy a replica set and test failover"
                }
              ]
            },
            {
              "name": "3.2 Sharding and Scaling",
              "children": [
                {
                  "name": "3.2.1 Understanding sharding principles"
                },
                {
                  "name": "3.2.2 Configuring and managing shards"
                },
                {
                  "name": "3.2.3 Practical Exercise: Shard a large dataset"
                }
              ]
            },
            {
              "name": "3.3 Monitoring and Backup/Restore",
              "children": [
                {
                  "name": "3.3.1 Using monitoring tools to track performance"
                },
                {
                  "name": "3.3.2 Implementing backup and restore strategies"
                },
                {
                  "name": "3.3.3 Practical Exercise: Set up monitoring and perform a backup/restore"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Working with MongoDB and Drivers",
          "children": [
            {
              "name": "4.1 Driver Selection and Usage (Node.js, Python, Java, etc.)",
              "children": [
                {
                  "name": "4.1.1 Choose a driver based on your application's needs"
                },
                {
                  "name": "4.1.2 Connecting to MongoDB, performing CRUD operations using the chosen driver"
                },
                {
                  "name": "4.1.3 Practical Exercise: Build a small application using your chosen driver"
                }
              ]
            },
            {
              "name": "4.2 Transactions and ACID Properties",
              "children": [
                {
                  "name": "4.2.1 Understanding transactions and their importance"
                },
                {
                  "name": "4.2.2 Implementing transactions using the chosen driver"
                },
                {
                  "name": "4.2.3 Practical Exercise: Build an application with transactional operations"
                }
              ]
            },
            {
              "name": "4.3 Security Best Practices",
              "children": [
                {
                  "name": "4.3.1 Authentication and authorization mechanisms"
                },
                {
                  "name": "4.3.2 Network security considerations"
                },
                {
                  "name": "4.3.3 Data encryption and security best practices"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics & Best Practices",
          "children": [
            {
              "name": "5.1  Change Streams",
              "children": [
                {
                  "name": "5.1.1 Real-time data processing and change notifications"
                },
                {
                  "name": "5.1.2 Implementing change streams in applications"
                },
                {
                  "name": "5.1.3 Practical Exercise:  Build a real-time dashboard using change streams"
                }
              ]
            },
            {
              "name": "5.2  MongoDB Atlas and Cloud Deployment",
              "children": [
                {
                  "name": "5.2.1 Setting up and managing a MongoDB Atlas cluster"
                },
                {
                  "name": "5.2.2 Understanding pricing and scalability options"
                },
                {
                  "name": "5.2.3 Practical Exercise: Deploy an application to MongoDB Atlas"
                }
              ]
            },
            {
              "name": "5.3  Performance Tuning and Optimization",
              "children": [
                {
                  "name": "5.3.1 Advanced profiling and performance analysis"
                },
                {
                  "name": "5.3.2 Database design best practices for performance"
                },
                {
                  "name": "5.3.3 Practical Exercise: Optimize the performance of an existing application"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn MongoDB",
    "output": {
      "name": "Learn MongoDB",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Documents and Collections"
                },
                {
                  "name": "1.1.2 NoSQL Databases vs. Relational Databases"
                },
                {
                  "name": "1.1.3 BSON Data Format"
                }
              ]
            },
            {
              "name": "1.2 MongoDB Installation and Setup",
              "children": [
                {
                  "name": "1.2.1 Installing MongoDB on your OS (Windows, macOS, Linux)"
                },
                {
                  "name": "1.2.2 Starting and Stopping the MongoDB Server"
                },
                {
                  "name": "1.2.3 Connecting to MongoDB using the MongoDB Shell"
                }
              ]
            },
            {
              "name": "1.3 Basic CRUD Operations",
              "children": [
                {
                  "name": "1.3.1 Inserting Documents"
                },
                {
                  "name": "1.3.2 Querying Documents (find(), findOne())"
                },
                {
                  "name": "1.3.3 Updating Documents"
                },
                {
                  "name": "1.3.4 Deleting Documents"
                },
                {
                  "name": "1.3.5 Project: Create a simple database for a library (books, authors) and perform CRUD operations."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Queries",
          "children": [
            {
              "name": "2.1 Query Operators",
              "children": [
                {
                  "name": "2.1.1 Comparison Operators ($eq, $gt, $lt, etc.)"
                },
                {
                  "name": "2.1.2 Logical Operators ($and, $or, $not)"
                },
                {
                  "name": "2.1.3 Element Operators ($exists, $type)"
                },
                {
                  "name": "2.1.4 Evaluation Operators ($where)"
                }
              ]
            },
            {
              "name": "2.2 Aggregation Framework",
              "children": [
                {
                  "name": "2.2.1 $group, $match, $project, $sort, $limit"
                },
                {
                  "name": "2.2.2 Working with different aggregation pipeline stages"
                },
                {
                  "name": "2.2.3 Project: Analyze the library database to find the most popular books and authors based on different criteria."
                }
              ]
            },
            {
              "name": "2.3 Indexing",
              "children": [
                {
                  "name": "2.3.1 Understanding Indexes"
                },
                {
                  "name": "2.3.2 Creating Indexes (single-field, compound)"
                },
                {
                  "name": "2.3.3 Index Optimization Strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Modeling and Design",
          "children": [
            {
              "name": "3.1 Choosing the Right Data Model",
              "children": [
                {
                  "name": "3.1.1 Embedded vs. Referenced Documents"
                },
                {
                  "name": "3.1.2 Schema Design Considerations"
                },
                {
                  "name": "3.1.3 Normalization in NoSQL Databases"
                }
              ]
            },
            {
              "name": "3.2 Relationships between Documents",
              "children": [
                {
                  "name": "3.2.1 One-to-one relationships"
                },
                {
                  "name": "3.2.2 One-to-many relationships"
                },
                {
                  "name": "3.2.3 Many-to-many relationships"
                },
                {
                  "name": "3.2.4 Project: Refactor the library database for better data modeling and relationships."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Working with MongoDB in Applications",
          "children": [
            {
              "name": "4.1 MongoDB Drivers",
              "children": [
                {
                  "name": "4.1.1 Choosing the right driver (Node.js, Python, Java, etc.)"
                },
                {
                  "name": "4.1.2 Basic CRUD operations using the chosen driver"
                }
              ]
            },
            {
              "name": "4.2 Connecting to MongoDB from Applications",
              "children": [
                {
                  "name": "4.2.1 Connecting to a local MongoDB instance"
                },
                {
                  "name": "4.2.2 Connecting to a cloud-based MongoDB Atlas instance"
                }
              ]
            },
            {
              "name": "4.3 Project: Build a simple web application (e.g., using Node.js and Express.js) that interacts with a MongoDB database.",
              "children": []
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Best Practices",
          "children": [
            {
              "name": "5.1 Transactions",
              "children": [
                {
                  "name": "5.1.1 Understanding MongoDB transactions"
                },
                {
                  "name": "5.1.2 Implementing transactions in your applications"
                }
              ]
            },
            {
              "name": "5.2 Security",
              "children": [
                {
                  "name": "5.2.1 Authentication and Authorization"
                },
                {
                  "name": "5.2.2 Data Encryption"
                }
              ]
            },
            {
              "name": "5.3 Monitoring and Performance Tuning",
              "children": [
                {
                  "name": "5.3.1 Monitoring MongoDB performance"
                },
                {
                  "name": "5.3.2 Performance optimization techniques"
                }
              ]
            },
            {
              "name": "5.4 MongoDB Atlas",
              "children": [
                {
                  "name": "5.4.1 Setting up a MongoDB Atlas cluster"
                },
                {
                  "name": "5.4.2 Connecting your application to Atlas"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn Business Intelligence",
    "output": {
      "name": "Learn Business Intelligence",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 What is BI & its applications"
                },
                {
                  "name": "1.1.2 Data Warehousing and Data Marts"
                },
                {
                  "name": "1.1.3 ETL (Extract, Transform, Load) Processes"
                }
              ]
            },
            {
              "name": "1.2 Data Analysis Basics",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics"
                },
                {
                  "name": "1.2.2 Data Visualization Principles"
                },
                {
                  "name": "1.2.3 Project: Analyze a sample dataset using Excel"
                }
              ]
            },
            {
              "name": "1.3 Database Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Relational Databases (SQL basics)"
                },
                {
                  "name": "1.3.2 Data Modeling"
                },
                {
                  "name": "1.3.3 Project: Create and query a simple database using SQL"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Manipulation & Analysis Tools",
          "children": [
            {
              "name": "2.1 SQL Proficiency",
              "children": [
                {
                  "name": "2.1.1 Advanced SQL queries (joins, subqueries, window functions)"
                },
                {
                  "name": "2.1.2 Database design optimization"
                },
                {
                  "name": "2.1.3 Project: Build complex queries for a larger dataset"
                }
              ]
            },
            {
              "name": "2.2 Spreadsheet Software (Excel/Google Sheets)",
              "children": [
                {
                  "name": "2.2.1 Advanced formulas and functions (Pivot Tables, VLOOKUP, etc.)"
                },
                {
                  "name": "2.2.2 Data cleaning and transformation techniques"
                },
                {
                  "name": "2.2.3 Project: Create interactive dashboards using Excel"
                }
              ]
            },
            {
              "name": "2.3 Data Visualization Tools (Tableau/Power BI)",
              "children": [
                {
                  "name": "2.3.1 Basic dashboard creation"
                },
                {
                  "name": "2.3.2 Data connection and importing"
                },
                {
                  "name": "2.3.3 Project: Create a dashboard visualizing a dataset of your choice"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Business Intelligence Platforms",
          "children": [
            {
              "name": "3.1 Choosing the Right BI Tool",
              "children": [
                {
                  "name": "3.1.1 Comparing features and functionalities of different BI tools"
                },
                {
                  "name": "3.1.2 Considering cost and scalability"
                },
                {
                  "name": "3.1.3 Understanding licensing models"
                }
              ]
            },
            {
              "name": "3.2 Advanced Data Visualization Techniques",
              "children": [
                {
                  "name": "3.2.1 Storytelling with data"
                },
                {
                  "name": "3.2.2 Interactive dashboards and reports"
                },
                {
                  "name": "3.2.3 Project: Develop a comprehensive BI report for a simulated business scenario"
                }
              ]
            },
            {
              "name": "3.3 Data Security and Governance",
              "children": [
                {
                  "name": "3.3.1 Data privacy regulations (GDPR, CCPA, etc.)"
                },
                {
                  "name": "3.3.2 Data security best practices"
                },
                {
                  "name": "3.3.3 Data governance frameworks"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Analytics & Predictive Modeling",
          "children": [
            {
              "name": "4.1 Statistical Modeling",
              "children": [
                {
                  "name": "4.1.1 Regression analysis"
                },
                {
                  "name": "4.1.2 Hypothesis testing"
                },
                {
                  "name": "4.1.3 Project: Build a regression model to predict sales"
                }
              ]
            },
            {
              "name": "4.2 Machine Learning for BI",
              "children": [
                {
                  "name": "4.2.1 Introduction to supervised and unsupervised learning"
                },
                {
                  "name": "4.2.2 Applying ML algorithms for forecasting and anomaly detection"
                },
                {
                  "name": "4.2.3 Project: Develop a predictive model using a machine learning algorithm"
                }
              ]
            },
            {
              "name": "4.3 Data Mining Techniques",
              "children": [
                {
                  "name": "4.3.1 Association rule mining"
                },
                {
                  "name": "4.3.2 Clustering techniques"
                },
                {
                  "name": "4.3.3 Project: Apply data mining techniques to a real-world dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Communication",
          "children": [
            {
              "name": "5.1 Report Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Scheduling and automation of reports"
                },
                {
                  "name": "5.1.2 Secure data access and distribution"
                },
                {
                  "name": "5.1.3 Utilizing cloud-based solutions"
                }
              ]
            },
            {
              "name": "5.2 Communicating Insights Effectively",
              "children": [
                {
                  "name": "5.2.1 Data storytelling and presentation skills"
                },
                {
                  "name": "5.2.2 Effective use of visuals and charts"
                },
                {
                  "name": "5.2.3 Project: Present your findings from a BI project to a simulated audience"
                }
              ]
            },
            {
              "name": "5.3 Continuous Learning",
              "children": [
                {
                  "name": "5.3.1 Following industry blogs and publications"
                },
                {
                  "name": "5.3.2 Attending conferences and webinars"
                },
                {
                  "name": "5.3.3 Engaging in online communities"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a  Business Intelligence Developer",
    "output": {
      "name": "Become a Business Intelligence Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Data Warehousing & Data Modeling"
                },
                {
                  "name": "1.1.2 ETL Processes (Extract, Transform, Load)"
                },
                {
                  "name": "1.1.3 Relational Databases (SQL basics)"
                }
              ]
            },
            {
              "name": "1.2 Data Analysis Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics"
                },
                {
                  "name": "1.2.2 Data Visualization (Excel, Tableau Public)"
                },
                {
                  "name": "1.2.3 Project: Analyze a Public Dataset (e.g., Kaggle)"
                }
              ]
            },
            {
              "name": "1.3 Business Acumen",
              "children": [
                {
                  "name": "1.3.1 Business Intelligence Concepts"
                },
                {
                  "name": "1.3.2 Key Performance Indicators (KPIs)"
                },
                {
                  "name": "1.3.3 Business Case Development"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Database & SQL Proficiency",
          "children": [
            {
              "name": "2.1 Advanced SQL",
              "children": [
                {
                  "name": "2.1.1 Joins, Subqueries, Window Functions"
                },
                {
                  "name": "2.1.2 Data Cleaning and Manipulation with SQL"
                },
                {
                  "name": "2.1.3 Project: Build a SQL database and perform queries"
                }
              ]
            },
            {
              "name": "2.2 Database Management Systems (DBMS)",
              "children": [
                {
                  "name": "2.2.1 Relational Databases (MySQL, PostgreSQL, SQL Server)"
                },
                {
                  "name": "2.2.2 NoSQL Databases (MongoDB, Cassandra - introductory)"
                },
                {
                  "name": "2.2.3 Database Design Principles"
                }
              ]
            }
          ]
        },
        {
          "name": "3. BI Tool Expertise",
          "children": [
            {
              "name": "3.1 Business Intelligence Tools",
              "children": [
                {
                  "name": "3.1.1 Tableau Desktop (Data connection, visualization, dashboards)"
                },
                {
                  "name": "3.1.2 Power BI (Data modeling, DAX, report creation)"
                },
                {
                  "name": "3.1.3 Project: Create interactive dashboards with chosen tool"
                }
              ]
            },
            {
              "name": "3.2 Data Visualization Best Practices",
              "children": [
                {
                  "name": "3.2.1 Effective Chart Selection"
                },
                {
                  "name": "3.2.2 Data Storytelling Techniques"
                },
                {
                  "name": "3.2.3 Accessibility and Usability Considerations"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Analytics & Cloud",
          "children": [
            {
              "name": "4.1 Data Mining & Predictive Modeling",
              "children": [
                {
                  "name": "4.1.1 Regression Analysis"
                },
                {
                  "name": "4.1.2 Classification Algorithms (Decision Trees, Logistic Regression)"
                },
                {
                  "name": "4.1.3 Project: Build a predictive model using a chosen algorithm"
                }
              ]
            },
            {
              "name": "4.2 Cloud-Based BI Solutions",
              "children": [
                {
                  "name": "4.2.1 AWS (Amazon Redshift, QuickSight)"
                },
                {
                  "name": "4.2.2 Azure (Azure Synapse Analytics, Power BI integration)"
                },
                {
                  "name": "4.2.3 GCP (BigQuery, Data Studio) - introductory overview"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Deployment & Portfolio Building",
          "children": [
            {
              "name": "5.1 Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Report Scheduling and Automation"
                },
                {
                  "name": "5.1.2 Data Governance and Security"
                },
                {
                  "name": "5.1.3 Deployment to cloud platforms"
                }
              ]
            },
            {
              "name": "5.2 Portfolio Development",
              "children": [
                {
                  "name": "5.2.1  GitHub for code and project management"
                },
                {
                  "name": "5.2.2 Building a strong online portfolio (personal website, LinkedIn)"
                },
                {
                  "name": "5.2.3 Contributing to open source projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Flutter Developer",
    "output": {
      "name": "i want to become a Flutter Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Object-Oriented Programming (OOP)"
                },
                {
                  "name": "1.1.2 Data Structures (Lists, Maps, Sets)"
                },
                {
                  "name": "1.1.3 Control Flow (if-else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Dart Programming Language",
              "children": [
                {
                  "name": "1.2.1 Variables, Data Types"
                },
                {
                  "name": "1.2.2 Functions, Methods"
                },
                {
                  "name": "1.2.3 Null Safety, Asynchronous Programming (async/await, Futures)"
                },
                {
                  "name": "1.2.4 Dart Packages and Libraries (introduction)"
                }
              ]
            },
            {
              "name": "1.3 Setting up Development Environment",
              "children": [
                {
                  "name": "1.3.1 Installing Flutter SDK"
                },
                {
                  "name": "1.3.2 Setting up an IDE (Android Studio, VS Code)"
                },
                {
                  "name": "1.3.3 Running your first Flutter app (Hello World)"
                },
                {
                  "name": "1.3.4 Emulator setup (Android and iOS)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Flutter Fundamentals",
          "children": [
            {
              "name": "2.1 Widgets and Layouts",
              "children": [
                {
                  "name": "2.1.1 Understanding Widget Tree"
                },
                {
                  "name": "2.1.2 Basic Widgets (Text, Image, Icon, Row, Column, Container)"
                },
                {
                  "name": "2.1.3 Layout building with Rows, Columns, Stacks, and Expanded"
                },
                {
                  "name": "2.1.4 Project: Build a simple layout with images and text"
                }
              ]
            },
            {
              "name": "2.2 State Management",
              "children": [
                {
                  "name": "2.2.1 Stateful vs. Stateless Widgets"
                },
                {
                  "name": "2.2.2 setState() method"
                },
                {
                  "name": "2.2.3 Simple state management with Provider (or similar basic solution)"
                },
                {
                  "name": "2.2.4 Project: Create a counter app with state management"
                }
              ]
            },
            {
              "name": "2.3 Navigation and Routing",
              "children": [
                {
                  "name": "2.3.1 Navigator and Routes"
                },
                {
                  "name": "2.3.2 Passing data between screens"
                },
                {
                  "name": "2.3.3 Named Routes"
                },
                {
                  "name": "2.3.4 Project: Create a multi-screen app with navigation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Flutter Concepts",
          "children": [
            {
              "name": "3.1 Advanced State Management",
              "children": [
                {
                  "name": "3.1.1 BLoC Pattern"
                },
                {
                  "name": "3.1.2 Provider, Riverpod or GetX"
                },
                {
                  "name": "3.1.3 StateNotifier or ChangeNotifier"
                }
              ]
            },
            {
              "name": "3.2 API Integration and Data Handling",
              "children": [
                {
                  "name": "3.2.1 HTTP requests with http package"
                },
                {
                  "name": "3.2.2 JSON serialization and deserialization"
                },
                {
                  "name": "3.2.3 Error handling and loading states"
                },
                {
                  "name": "3.2.4 Project: Fetch data from an API and display it in a list"
                }
              ]
            },
            {
              "name": "3.3 Animations and Effects",
              "children": [
                {
                  "name": "3.3.1 AnimatedContainer"
                },
                {
                  "name": "3.3.2 Tween Animations"
                },
                {
                  "name": "3.3.3 Hero Animations"
                },
                {
                  "name": "3.3.4 Project: Implement animations in your app"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Platform Specific Features & Deployment",
          "children": [
            {
              "name": "4.1 Platform Channels",
              "children": [
                {
                  "name": "4.1.1 Communicating with native code (Android/iOS)"
                },
                {
                  "name": "4.1.2 Accessing device features (camera, GPS, etc.)"
                }
              ]
            },
            {
              "name": "4.2 Testing",
              "children": [
                {
                  "name": "4.2.1 Unit Testing"
                },
                {
                  "name": "4.2.2 Widget Testing"
                },
                {
                  "name": "4.2.3 Integration Testing"
                }
              ]
            },
            {
              "name": "4.3 Deployment",
              "children": [
                {
                  "name": "4.3.1 Publishing to App Stores (Google Play Store and Apple App Store)"
                },
                {
                  "name": "4.3.2 Building release versions"
                },
                {
                  "name": "4.3.3 Code signing"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 State Management Architectures (Advanced)",
              "children": [
                {
                  "name": "5.1.1 Redux"
                },
                {
                  "name": "5.1.2 BLoC with RxDart"
                },
                {
                  "name": "5.1.3 Flutter Hooks"
                }
              ]
            },
            {
              "name": "5.2 Database Integration (Firebase, SQLite)",
              "children": [
                {
                  "name": "5.2.1 Firebase Realtime Database"
                },
                {
                  "name": "5.2.2 Firebase Firestore"
                },
                {
                  "name": "5.2.3 SQLite integration"
                }
              ]
            },
            {
              "name": "5.3 Third-Party Packages and Libraries",
              "children": [
                {
                  "name": "5.3.1 Explore common packages for networking, UI components, etc."
                },
                {
                  "name": "5.3.2 Learn how to effectively use pub.dev"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Computer Vision Engineer",
    "output": {
      "name": "i want to become a Computer Vision Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Fundamentals"
                },
                {
                  "name": "1.2.2 NumPy and Pandas"
                },
                {
                  "name": "1.2.3 Git and Version Control",
                  "children": [
                    {
                      "name": "1.2.3.1 Github Usage"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Image Processing Basics",
              "children": [
                {
                  "name": "1.3.1 Image Formats and Representation"
                },
                {
                  "name": "1.3.2 Image Manipulation (brightness, contrast, etc.)"
                },
                {
                  "name": "1.3.3 Practical Exercise: Building a simple image filter in Python"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Computer Vision Concepts",
          "children": [
            {
              "name": "2.1 Image Filtering and Enhancement",
              "children": [
                {
                  "name": "2.1.1 Convolutional operations"
                },
                {
                  "name": "2.1.2 Edge detection (Sobel, Canny)"
                },
                {
                  "name": "2.1.3 Noise reduction techniques"
                }
              ]
            },
            {
              "name": "2.2 Feature Detection and Extraction",
              "children": [
                {
                  "name": "2.2.1 SIFT, SURF, ORB"
                },
                {
                  "name": "2.2.2 Harris Corner Detection"
                },
                {
                  "name": "2.2.3 Feature Matching and Description"
                }
              ]
            },
            {
              "name": "2.3 Object Detection and Recognition",
              "children": [
                {
                  "name": "2.3.1 Introduction to OpenCV"
                },
                {
                  "name": "2.3.2 Viola-Jones object detection"
                },
                {
                  "name": "2.3.3 Practical Project: Object detection using Haar cascades"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for Computer Vision",
          "children": [
            {
              "name": "3.1 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.1.1 CNN architecture"
                },
                {
                  "name": "3.1.2 Backpropagation and optimization"
                },
                {
                  "name": "3.1.3 Transfer learning"
                }
              ]
            },
            {
              "name": "3.2 Popular CNN Architectures",
              "children": [
                {
                  "name": "3.2.1 AlexNet, VGG, ResNet, Inception"
                },
                {
                  "name": "3.2.2 Understanding model parameters and performance metrics"
                },
                {
                  "name": "3.2.3 Practical Project: Image classification using pre-trained models"
                }
              ]
            },
            {
              "name": "3.3 Object Detection with Deep Learning",
              "children": [
                {
                  "name": "3.3.1 R-CNN, Fast R-CNN, Faster R-CNN"
                },
                {
                  "name": "3.3.2 YOLO, SSD"
                },
                {
                  "name": "3.3.3 Practical Project: Object detection using a deep learning model"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Semantic Segmentation",
              "children": [
                {
                  "name": "4.1.1 U-Net, DeepLab"
                },
                {
                  "name": "4.1.2 Evaluation metrics (IoU, Dice coefficient)"
                },
                {
                  "name": "4.1.3 Practical Project: Semantic segmentation of an image"
                }
              ]
            },
            {
              "name": "4.2 Instance Segmentation",
              "children": [
                {
                  "name": "4.2.1 Mask R-CNN"
                },
                {
                  "name": "4.2.2 Evaluation metrics (AP, AR)"
                },
                {
                  "name": "4.2.3 Practical Project: Instance segmentation of an image"
                }
              ]
            },
            {
              "name": "4.3 3D Computer Vision",
              "children": [
                {
                  "name": "4.3.1 Point clouds"
                },
                {
                  "name": "4.3.2 Depth cameras"
                },
                {
                  "name": "4.3.3 3D object detection"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Specialization",
          "children": [
            {
              "name": "5.1 Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Cloud deployment (AWS, GCP, Azure)"
                },
                {
                  "name": "5.1.2 Edge device deployment (Raspberry Pi, Jetson Nano)"
                },
                {
                  "name": "5.1.3 Model optimization for deployment"
                }
              ]
            },
            {
              "name": "5.2 Specialization Areas",
              "children": [
                {
                  "name": "5.2.1 Medical Image Analysis"
                },
                {
                  "name": "5.2.2 Autonomous Driving"
                },
                {
                  "name": "5.2.3 Robotics"
                }
              ]
            },
            {
              "name": "5.3 Building a Portfolio",
              "children": [
                {
                  "name": "5.3.1 Contributing to open source projects"
                },
                {
                  "name": "5.3.2 Participating in Kaggle competitions"
                },
                {
                  "name": "5.3.3 Creating a personal website or blog"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn computer vision",
    "output": {
      "name": "I want to learn Computer Vision",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Eigenvalues and Eigenvectors"
                },
                {
                  "name": "1.1.3 Linear Transformations"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Partial Derivatives"
                },
                {
                  "name": "1.2.3 Chain Rule"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Probability Distributions"
                },
                {
                  "name": "1.3.2 Bayes' Theorem"
                },
                {
                  "name": "1.3.3 Hypothesis Testing"
                }
              ]
            },
            {
              "name": "1.4 Programming Fundamentals (Python)",
              "children": [
                {
                  "name": "1.4.1 Basic Syntax and Data Structures"
                },
                {
                  "name": "1.4.2 NumPy for Numerical Computing"
                },
                {
                  "name": "1.4.3 Matplotlib for Visualization",
                  "children": [
                    {
                      "name": "1.4.3.1 Basic Plotting",
                      "children": []
                    },
                    {
                      "name": "1.4.3.2 Image Display",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Image Processing",
          "children": [
            {
              "name": "2.1 Image Representation and Formats",
              "children": [
                {
                  "name": "2.1.1 Pixel Manipulation"
                },
                {
                  "name": "2.1.2 Color Spaces (RGB, HSV, etc.)"
                },
                {
                  "name": "2.1.3 Image File Formats (JPEG, PNG, etc.)"
                }
              ]
            },
            {
              "name": "2.2 Image Filtering and Enhancement",
              "children": [
                {
                  "name": "2.2.1 Smoothing Filters (Gaussian, Median)"
                },
                {
                  "name": "2.2.2 Sharpening Filters"
                },
                {
                  "name": "2.2.3 Noise Reduction Techniques"
                }
              ]
            },
            {
              "name": "2.3 Feature Extraction",
              "children": [
                {
                  "name": "2.3.1 Edge Detection (Canny, Sobel)"
                },
                {
                  "name": "2.3.2 Corner Detection (Harris, SIFT)"
                },
                {
                  "name": "2.3.3 Histogram of Oriented Gradients (HOG)"
                }
              ]
            },
            {
              "name": "2.4 Practical Project: Image Enhancement and Feature Extraction",
              "children": [
                {
                  "name": "2.4.1 Implement image denoising and edge detection on a set of images."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for Computer Vision",
          "children": [
            {
              "name": "3.1 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.1.1 CNN Architecture"
                },
                {
                  "name": "3.1.2 Convolution and Pooling Layers"
                },
                {
                  "name": "3.1.3 Backpropagation"
                }
              ]
            },
            {
              "name": "3.2 Popular CNN Architectures",
              "children": [
                {
                  "name": "3.2.1 AlexNet, VGG, ResNet, Inception"
                },
                {
                  "name": "3.2.2 Transfer Learning"
                },
                {
                  "name": "3.2.3 Fine-tuning pre-trained models"
                }
              ]
            },
            {
              "name": "3.3 Object Detection",
              "children": [
                {
                  "name": "3.3.1 R-CNN, Fast R-CNN, Faster R-CNN"
                },
                {
                  "name": "3.3.2 YOLO, SSD"
                },
                {
                  "name": "3.3.3 Evaluating object detectors (mAP)"
                }
              ]
            },
            {
              "name": "3.4 Practical Project: Object Detection",
              "children": [
                {
                  "name": "3.4.1 Train a pre-trained object detection model on a custom dataset."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Segmentation",
              "children": [
                {
                  "name": "4.1.1 Semantic Segmentation"
                },
                {
                  "name": "4.1.2 Instance Segmentation"
                },
                {
                  "name": "4.1.3 U-Net, Mask R-CNN"
                }
              ]
            },
            {
              "name": "4.2 Pose Estimation",
              "children": [
                {
                  "name": "4.2.1 2D Pose Estimation"
                },
                {
                  "name": "4.2.2 3D Pose Estimation"
                }
              ]
            },
            {
              "name": "4.3 Video Processing and Action Recognition",
              "children": [
                {
                  "name": "4.3.1 Optical Flow"
                },
                {
                  "name": "4.3.2 Recurrent Neural Networks (RNNs) for video"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Applications",
          "children": [
            {
              "name": "5.1 Deploying Computer Vision Models",
              "children": [
                {
                  "name": "5.1.1 Cloud platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.1.2 Edge devices (Raspberry Pi, NVIDIA Jetson)"
                }
              ]
            },
            {
              "name": "5.2 Real-world Applications",
              "children": [
                {
                  "name": "5.2.1 Autonomous driving"
                },
                {
                  "name": "5.2.2 Medical image analysis"
                },
                {
                  "name": "5.2.3 Robotics"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "computer vision",
    "output": {
      "name": "Computer Vision",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, and Linear Transformations"
                },
                {
                  "name": "1.1.2 Derivatives, Gradients, and Optimization"
                },
                {
                  "name": "1.1.3 Project: Implement matrix operations and gradient descent"
                }
              ]
            },
            {
              "name": "1.2 Probability & Statistics",
              "children": [
                {
                  "name": "1.2.1 Probability distributions (Gaussian, Binomial, etc.)"
                },
                {
                  "name": "1.2.2 Hypothesis testing and statistical significance"
                },
                {
                  "name": "1.2.3 Project: Analyze image datasets using descriptive statistics"
                }
              ]
            },
            {
              "name": "1.3 Programming Fundamentals (Python)",
              "children": [
                {
                  "name": "1.3.1 Python basics (data structures, control flow)"
                },
                {
                  "name": "1.3.2 NumPy for numerical computation"
                },
                {
                  "name": "1.3.3 Matplotlib for data visualization"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Image Processing",
          "children": [
            {
              "name": "2.1 Image Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Image formats (JPEG, PNG, etc.)"
                },
                {
                  "name": "2.1.2 Color spaces (RGB, HSV, etc.)"
                },
                {
                  "name": "2.1.3 Project: Convert images between color spaces"
                }
              ]
            },
            {
              "name": "2.2 Image Filtering",
              "children": [
                {
                  "name": "2.2.1 Convolution and kernels"
                },
                {
                  "name": "2.2.2 Noise reduction (Gaussian blur, median filter)"
                },
                {
                  "name": "2.2.3 Edge detection (Sobel, Canny)"
                }
              ]
            },
            {
              "name": "2.3 Image Transformation",
              "children": [
                {
                  "name": "2.3.1 Geometric transformations (rotation, scaling, translation)"
                },
                {
                  "name": "2.3.2 Image resizing and interpolation"
                },
                {
                  "name": "2.3.3 Project: Implement image transformations and filtering"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for Computer Vision",
          "children": [
            {
              "name": "3.1 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.1.1 CNN architecture and components (convolutional layers, pooling layers)"
                },
                {
                  "name": "3.1.2 Backpropagation and optimization algorithms"
                },
                {
                  "name": "3.1.3 Project: Train a simple CNN for image classification (MNIST, CIFAR-10)"
                }
              ]
            },
            {
              "name": "3.2 Transfer Learning",
              "children": [
                {
                  "name": "3.2.1 Fine-tuning pre-trained models"
                },
                {
                  "name": "3.2.2 Using pre-trained models for feature extraction"
                },
                {
                  "name": "3.2.3 Project: Use transfer learning for image classification on a custom dataset"
                }
              ]
            },
            {
              "name": "3.3 Object Detection",
              "children": [
                {
                  "name": "3.3.1 Region-based CNNs (R-CNN, Fast R-CNN, Faster R-CNN)"
                },
                {
                  "name": "3.3.2 Single-shot detectors (SSD, YOLO)"
                },
                {
                  "name": "3.3.3 Project: Implement object detection on a video stream"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Semantic Segmentation",
              "children": [
                {
                  "name": "4.1.1 Fully convolutional networks (FCNs)"
                },
                {
                  "name": "4.1.2 U-Net architecture"
                },
                {
                  "name": "4.1.3 Project: Implement semantic segmentation on a satellite image"
                }
              ]
            },
            {
              "name": "4.2 Instance Segmentation",
              "children": [
                {
                  "name": "4.2.1 Mask R-CNN"
                },
                {
                  "name": "4.2.2 Other instance segmentation techniques"
                },
                {
                  "name": "4.2.3 Project: Implement instance segmentation on a complex image"
                }
              ]
            },
            {
              "name": "4.3 3D Computer Vision",
              "children": [
                {
                  "name": "4.3.1 Structure from Motion (SfM)"
                },
                {
                  "name": "4.3.2 Point cloud processing"
                },
                {
                  "name": "4.3.3 Project: Reconstruct a 3D model from multiple images"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Applications",
          "children": [
            {
              "name": "5.1 Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Cloud-based deployment"
                },
                {
                  "name": "5.1.2 Edge device deployment"
                },
                {
                  "name": "5.1.3 Optimization for resource constraints"
                }
              ]
            },
            {
              "name": "5.2 Real-world Applications",
              "children": [
                {
                  "name": "5.2.1 Autonomous driving"
                },
                {
                  "name": "5.2.2 Medical image analysis"
                },
                {
                  "name": "5.2.3 Robotics"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "ui engineer",
    "output": {
      "name": "UI Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Web Fundamentals",
              "children": [
                {
                  "name": "1.1.1 HTML Semantics & Structure"
                },
                {
                  "name": "1.1.2 CSS Box Model & Selectors"
                },
                {
                  "name": "1.1.3 Responsive Design Principles (Mobile-first)"
                }
              ]
            },
            {
              "name": "1.2 JavaScript Essentials",
              "children": [
                {
                  "name": "1.2.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.2.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.2.3 DOM Manipulation (selecting, modifying elements)"
                },
                {
                  "name": "1.2.4 Project: Simple Interactive Webpage"
                }
              ]
            },
            {
              "name": "1.3 Version Control (Git)",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 GitHub/GitLab Workflow"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Frontend Frameworks",
          "children": [
            {
              "name": "2.1 React",
              "children": [
                {
                  "name": "2.1.1 Components, JSX, Props, State"
                },
                {
                  "name": "2.1.2 Hooks (useState, useEffect)"
                },
                {
                  "name": "2.1.3 Project: Simple React App (e.g., To-Do List)"
                }
              ]
            },
            {
              "name": "2.2 Advanced React",
              "children": [
                {
                  "name": "2.2.1 Context API, Redux (state management)"
                },
                {
                  "name": "2.2.2 Routing (React Router)"
                },
                {
                  "name": "2.2.3 Testing (Jest, React Testing Library)"
                },
                {
                  "name": "2.2.4 Project: More Complex React App (e.g., E-commerce product listing)"
                }
              ]
            },
            {
              "name": "2.3  Other Frameworks (Optional)",
              "children": [
                {
                  "name": "2.3.1 Angular or Vue.js fundamentals"
                },
                {
                  "name": "2.3.2 Comparative analysis of frameworks"
                }
              ]
            }
          ]
        },
        {
          "name": "3. UI Design Principles",
          "children": [
            {
              "name": "3.1 User Experience (UX) Fundamentals",
              "children": [
                {
                  "name": "3.1.1 User Research & Personas"
                },
                {
                  "name": "3.1.2 Information Architecture & Interaction Design"
                },
                {
                  "name": "3.1.3 Usability Testing"
                }
              ]
            },
            {
              "name": "3.2 UI Design Patterns & Best Practices",
              "children": [
                {
                  "name": "3.2.1 Common UI patterns (navigation, forms, modals)"
                },
                {
                  "name": "3.2.2 Accessibility (WCAG guidelines)"
                },
                {
                  "name": "3.2.3 Design Systems & Component Libraries"
                }
              ]
            },
            {
              "name": "3.3 Design Tools (Optional)",
              "children": [
                {
                  "name": "3.3.1 Figma/Sketch/Adobe XD basics"
                },
                {
                  "name": "3.3.2 Prototyping"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Performance Optimization",
              "children": [
                {
                  "name": "4.1.1 Code splitting and lazy loading"
                },
                {
                  "name": "4.1.2 Image optimization"
                },
                {
                  "name": "4.1.3 Bundler optimization (Webpack, Vite)"
                }
              ]
            },
            {
              "name": "4.2 State Management (Advanced)",
              "children": [
                {
                  "name": "4.2.1 Redux Toolkit, Zustand, Recoil"
                },
                {
                  "name": "4.2.2 Data fetching (async/await, libraries like Axios)"
                }
              ]
            },
            {
              "name": "4.3 Testing and Deployment",
              "children": [
                {
                  "name": "4.3.1 End-to-end testing (Cypress, Playwright)"
                },
                {
                  "name": "4.3.2 CI/CD pipelines"
                },
                {
                  "name": "4.3.3 Deployment to platforms like Netlify, Vercel"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Building a Portfolio",
          "children": [
            {
              "name": "5.1 Project Ideas",
              "children": [
                {
                  "name": "5.1.1 Clone popular websites"
                },
                {
                  "name": "5.1.2 Build a personal blog or portfolio"
                },
                {
                  "name": "5.1.3 Contribute to open-source projects"
                }
              ]
            },
            {
              "name": "5.2  Presenting your work",
              "children": [
                {
                  "name": "5.2.1  Creating a compelling online portfolio"
                },
                {
                  "name": "5.2.2  Highlighting key skills and achievements"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "3D Graphics Programmer",
    "output": {
      "name": "3D Graphics Programmer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra (Vectors, Matrices, Transformations)"
                },
                {
                  "name": "1.1.2 Trigonometry (Sin, Cos, Tan, etc.)"
                },
                {
                  "name": "1.1.3 Calculus (Derivatives, Integrals - for advanced topics)"
                }
              ]
            },
            {
              "name": "1.2 Computer Graphics Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Rasterization, Pixels, Frames"
                },
                {
                  "name": "1.2.2 Coordinate Systems (World, View, Projection)"
                },
                {
                  "name": "1.2.3 Basic Shading Models (Ambient, Diffuse, Specular)"
                }
              ]
            },
            {
              "name": "1.3 Programming Basics",
              "children": [
                {
                  "name": "1.3.1 C++ (Memory management, OOP)"
                },
                {
                  "name": "1.3.2 Data Structures (Arrays, Lists, Trees)"
                },
                {
                  "name": "1.3.3 Algorithms (Searching, Sorting)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Real-time Rendering",
          "children": [
            {
              "name": "2.1 OpenGL or Vulkan",
              "children": [
                {
                  "name": "2.1.1 Setting up development environment"
                },
                {
                  "name": "2.1.2 Rendering a simple triangle"
                },
                {
                  "name": "2.1.3 Implementing basic shaders (Vertex and Fragment)"
                },
                {
                  "name": "2.1.4 Project: Simple 3D scene with lighting"
                }
              ]
            },
            {
              "name": "2.2 Shader Programming (GLSL or HLSL)",
              "children": [
                {
                  "name": "2.2.1 Understanding shader stages"
                },
                {
                  "name": "2.2.2 Writing shaders for lighting, textures, and materials"
                },
                {
                  "name": "2.2.3 Optimizing shader performance"
                }
              ]
            },
            {
              "name": "2.3 Game Engine Fundamentals",
              "children": [
                {
                  "name": "2.3.1 Understanding game loops"
                },
                {
                  "name": "2.3.2 Scene graphs and hierarchical modeling"
                },
                {
                  "name": "2.3.3 Camera control and manipulation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Rendering Techniques",
          "children": [
            {
              "name": "3.1 Texturing and Materials",
              "children": [
                {
                  "name": "3.1.1 Different texture types (Diffuse, Normal, Specular)"
                },
                {
                  "name": "3.1.2 Texture mapping techniques"
                },
                {
                  "name": "3.1.3 Material properties and BRDFs"
                }
              ]
            },
            {
              "name": "3.2 Lighting and Shadows",
              "children": [
                {
                  "name": "3.2.1 Advanced lighting models (PBR)"
                },
                {
                  "name": "3.2.2 Shadow mapping"
                },
                {
                  "name": "3.2.3 Shadow volumes"
                }
              ]
            },
            {
              "name": "3.3 Post-processing Effects",
              "children": [
                {
                  "name": "3.3.1 Bloom"
                },
                {
                  "name": "3.3.2 Anti-aliasing"
                },
                {
                  "name": "3.3.3 Depth of field"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  3D Modeling and Asset Creation",
          "children": [
            {
              "name": "4.1 3D Modeling Software",
              "children": [
                {
                  "name": "4.1.1 Blender (basics)"
                },
                {
                  "name": "4.1.2 Maya or 3ds Max (optional, more advanced)"
                },
                {
                  "name": "4.1.3 UV unwrapping and texture painting"
                }
              ]
            },
            {
              "name": "4.2 3D Asset Importing & Management",
              "children": [
                {
                  "name": "4.2.1 File formats (FBX, OBJ)"
                },
                {
                  "name": "4.2.2 Asset pipelines and workflows"
                },
                {
                  "name": "4.2.3 Optimization for real-time rendering"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Game Engine Integration & Projects",
          "children": [
            {
              "name": "5.1 Game Engine Selection (Unity or Unreal Engine)",
              "children": [
                {
                  "name": "5.1.1 Learning the engine's API and tools"
                },
                {
                  "name": "5.1.2 Integrating custom shaders and rendering techniques"
                },
                {
                  "name": "5.1.3 Working with engine's built-in rendering features"
                }
              ]
            },
            {
              "name": "5.2  Project Development",
              "children": [
                {
                  "name": "5.2.1 Small game projects to practice learned skills"
                },
                {
                  "name": "5.2.2 Portfolio building"
                },
                {
                  "name": "5.2.3 Contributing to open source projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a 3D Graphics Programmer",
    "output": {
      "name": "Become a 3D Graphics Programmer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra (Vectors, Matrices, Transformations)"
                },
                {
                  "name": "1.1.2 Trigonometry (Angles, Sines, Cosines)"
                },
                {
                  "name": "1.1.3 Calculus (Derivatives, Integrals - for advanced shading)"
                },
                {
                  "name": "1.1.4 Project: Implement 2D Transformations (rotation, scaling, translation)"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 C++ Programming (Data structures, algorithms, memory management)"
                },
                {
                  "name": "1.2.2 Object-Oriented Programming (Classes, inheritance, polymorphism)"
                },
                {
                  "name": "1.2.3 Project: Create a simple C++ program to manipulate 2D points"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Graphics Fundamentals",
          "children": [
            {
              "name": "2.1 Computer Graphics Principles",
              "children": [
                {
                  "name": "2.1.1 Rasterization, Framebuffers, Pixels"
                },
                {
                  "name": "2.1.2 Transformations (Model, View, Projection)"
                },
                {
                  "name": "2.1.3 Clipping and Culling"
                }
              ]
            },
            {
              "name": "2.2 OpenGL/Vulkan Fundamentals",
              "children": [
                {
                  "name": "2.2.1 Setting up OpenGL/Vulkan development environment"
                },
                {
                  "name": "2.2.2 Rendering a simple triangle"
                },
                {
                  "name": "2.2.3 Understanding shaders (Vertex, Fragment)"
                },
                {
                  "name": "2.2.4 Project: Render a colored cube using OpenGL/Vulkan"
                }
              ]
            }
          ]
        },
        {
          "name": "3. 3D Rendering Techniques",
          "children": [
            {
              "name": "3.1 Lighting and Shading",
              "children": [
                {
                  "name": "3.1.1 Ambient, Diffuse, Specular lighting"
                },
                {
                  "name": "3.1.2 Phong and Blinn-Phong shading models"
                },
                {
                  "name": "3.1.3 Normal mapping"
                }
              ]
            },
            {
              "name": "3.2 Advanced Rendering Techniques",
              "children": [
                {
                  "name": "3.2.1 Texture mapping (Diffuse, Normal, Specular)"
                },
                {
                  "name": "3.2.2 Shadow mapping"
                },
                {
                  "name": "3.2.3 Deferred shading"
                }
              ]
            },
            {
              "name": "3.3 Project: Create a scene with multiple objects, lighting, and texturing"
            }
          ]
        },
        {
          "name": "4. Game Engine Integration",
          "children": [
            {
              "name": "4.1 Game Engine Selection (e.g., Unity, Unreal Engine)",
              "children": [
                {
                  "name": "4.1.1 Learn the chosen engine's API"
                },
                {
                  "name": "4.1.2 Understand engine architecture and workflows"
                }
              ]
            },
            {
              "name": "4.2 Custom Shader Development",
              "children": [
                {
                  "name": "4.2.1 Write custom shaders within the chosen engine"
                },
                {
                  "name": "4.2.2 Optimize shader performance"
                }
              ]
            },
            {
              "name": "4.3 Project: Develop a small game using the chosen engine, incorporating custom shaders"
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Physically Based Rendering (PBR)",
              "children": [
                {
                  "name": "5.1.1 Energy conservation and rendering equations"
                },
                {
                  "name": "5.1.2 Implementing PBR in a chosen engine"
                }
              ]
            },
            {
              "name": "5.2 Real-time Ray Tracing",
              "children": [
                {
                  "name": "5.2.1 Understanding ray tracing algorithms"
                },
                {
                  "name": "5.2.2 Implementing ray tracing using ray tracing APIs (e.g., RTX, Vulkan Ray Tracing)"
                }
              ]
            },
            {
              "name": "5.3 Game Engine Architecture",
              "children": [
                {
                  "name": "5.3.1 Understanding render loops and pipelines"
                },
                {
                  "name": "5.3.2 Studying game engine source code (optional)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn 3D Graphics",
    "output": {
      "name": "i want to learn 3D Graphics",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Transformations (Translation, Rotation, Scaling)"
                },
                {
                  "name": "1.1.3 Matrix Operations (Multiplication, Inversion)"
                },
                {
                  "name": "1.1.4 Practical Exercise: Implement 2D Transformations in Python with NumPy"
                }
              ]
            },
            {
              "name": "1.2 3D Math",
              "children": [
                {
                  "name": "1.2.1 3D Coordinate Systems"
                },
                {
                  "name": "1.2.2 Quaternions (for Rotation)"
                },
                {
                  "name": "1.2.3 Perspective Projection"
                },
                {
                  "name": "1.2.4 Practical Exercise: Calculate screen coordinates from 3D world coordinates"
                }
              ]
            },
            {
              "name": "1.3 Introduction to Graphics Pipelines",
              "children": [
                {
                  "name": "1.3.1 Stages of the Rendering Pipeline (Vertex, Fragment)"
                },
                {
                  "name": "1.3.2 Shaders (Vertex and Fragment Shaders)"
                },
                {
                  "name": "1.3.3 Basic Rendering Concepts (Rasterization, Z-buffering)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a 3D Engine/API",
          "children": [
            {
              "name": "2.1  Introduction to OpenGL",
              "children": [
                {
                  "name": "2.1.1 Setting up development environment"
                },
                {
                  "name": "2.1.2 Basic OpenGL functions (creating a window, drawing primitives)"
                },
                {
                  "name": "2.1.3 Practical Exercise: Create a simple triangle using OpenGL"
                }
              ]
            },
            {
              "name": "2.2 Introduction to DirectX (Optional)",
              "children": [
                {
                  "name": "2.2.1 Setting up a DirectX development environment"
                },
                {
                  "name": "2.2.2 Basic DirectX concepts and functions"
                }
              ]
            },
            {
              "name": "2.3 Introduction to Game Engines (Unity or Unreal Engine)",
              "children": [
                {
                  "name": "2.3.1 Choosing a game engine based on project needs"
                },
                {
                  "name": "2.3.2 Setting up the chosen engine"
                },
                {
                  "name": "2.3.3 Familiarize yourself with the engine's interface and tools"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Modeling and Texturing",
          "children": [
            {
              "name": "3.1 3D Modeling Software (Blender, Maya, 3ds Max)",
              "children": [
                {
                  "name": "3.1.1 Learning basic modeling techniques (extrude, bevel, etc.)"
                },
                {
                  "name": "3.1.2 UV Mapping"
                },
                {
                  "name": "3.1.3 Practical Exercise: Model a simple object"
                }
              ]
            },
            {
              "name": "3.2 Texture Creation",
              "children": [
                {
                  "name": "3.2.1 Using image editing software (Photoshop, GIMP)"
                },
                {
                  "name": "3.2.2 Understanding different texture formats"
                },
                {
                  "name": "3.2.3 Practical Exercise: Create a simple texture for your model"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Lighting and Shading",
          "children": [
            {
              "name": "4.1 Basic Lighting Models",
              "children": [
                {
                  "name": "4.1.1 Ambient, Diffuse, Specular Lighting"
                },
                {
                  "name": "4.1.2 Phong Shading Model"
                }
              ]
            },
            {
              "name": "4.2 Advanced Lighting Techniques",
              "children": [
                {
                  "name": "4.2.1 Physically Based Rendering (PBR)"
                },
                {
                  "name": "4.2.2 Shadows (Shadow Mapping, etc.)"
                }
              ]
            },
            {
              "name": "4.3 Implementing Lighting in your chosen engine/API",
              "children": [
                {
                  "name": "4.3.1 Setting up lights and materials"
                },
                {
                  "name": "4.3.2 Practical Exercise: Implement lighting on your previous model"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Animation and Advanced Techniques",
          "children": [
            {
              "name": "5.1 Animation Basics",
              "children": [
                {
                  "name": "5.1.1 Keyframing"
                },
                {
                  "name": "5.1.2 Skeletal Animation"
                },
                {
                  "name": "5.1.3 Practical Exercise: Animate your model"
                }
              ]
            },
            {
              "name": "5.2 Advanced Topics",
              "children": [
                {
                  "name": "5.2.1 Particle Systems"
                },
                {
                  "name": "5.2.2 Post-processing effects"
                },
                {
                  "name": "5.2.3 Optimization techniques"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn machine learning",
    "output": {
      "name": "I want to learn Machine Learning",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra (Vectors, Matrices, Operations)"
                },
                {
                  "name": "1.1.2 Calculus (Derivatives, Gradients)"
                },
                {
                  "name": "1.1.3 Probability and Statistics (Distributions, Hypothesis Testing)"
                },
                {
                  "name": "1.1.4 Project: Implement Linear Regression from scratch"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Basics (Data Structures, Control Flow)"
                },
                {
                  "name": "1.2.2 NumPy (Array manipulation)"
                },
                {
                  "name": "1.2.3 Pandas (Data manipulation and analysis)"
                },
                {
                  "name": "1.2.4 Project: Analyze a dataset using Pandas and visualize results using Matplotlib"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Supervised Learning",
          "children": [
            {
              "name": "2.1 Regression",
              "children": [
                {
                  "name": "2.1.1 Linear Regression"
                },
                {
                  "name": "2.1.2 Polynomial Regression"
                },
                {
                  "name": "2.1.3 Regularization (L1, L2)"
                },
                {
                  "name": "2.1.4 Project: Predict house prices using a regression model"
                }
              ]
            },
            {
              "name": "2.2 Classification",
              "children": [
                {
                  "name": "2.2.1 Logistic Regression"
                },
                {
                  "name": "2.2.2 Support Vector Machines (SVM)"
                },
                {
                  "name": "2.2.3 Decision Trees"
                },
                {
                  "name": "2.2.4 Project: Build a spam classifier"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Unsupervised Learning",
          "children": [
            {
              "name": "3.1 Clustering",
              "children": [
                {
                  "name": "3.1.1 K-Means Clustering"
                },
                {
                  "name": "3.1.2 Hierarchical Clustering"
                },
                {
                  "name": "3.1.3 DBSCAN"
                },
                {
                  "name": "3.1.4 Project: Customer segmentation using clustering"
                }
              ]
            },
            {
              "name": "3.2 Dimensionality Reduction",
              "children": [
                {
                  "name": "3.2.1 Principal Component Analysis (PCA)"
                },
                {
                  "name": "3.2.2 t-distributed Stochastic Neighbor Embedding (t-SNE)"
                },
                {
                  "name": "3.2.3 Project: Reduce the dimensionality of a high-dimensional dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deep Learning",
          "children": [
            {
              "name": "4.1 Neural Networks",
              "children": [
                {
                  "name": "4.1.1 Perceptron"
                },
                {
                  "name": "4.1.2 Multilayer Perceptron (MLP)"
                },
                {
                  "name": "4.1.3 Backpropagation"
                },
                {
                  "name": "4.1.4 Project: Build a simple neural network for image classification"
                }
              ]
            },
            {
              "name": "4.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.2.1 CNN Architectures"
                },
                {
                  "name": "4.2.2 Applications in Image Recognition"
                },
                {
                  "name": "4.2.3 Transfer Learning"
                },
                {
                  "name": "4.2.4 Project: Use a pre-trained CNN for image classification"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Model Deployment and Evaluation",
          "children": [
            {
              "name": "5.1 Model Evaluation Metrics",
              "children": [
                {
                  "name": "5.1.1 Precision, Recall, F1-score"
                },
                {
                  "name": "5.1.2 Accuracy, AUC-ROC"
                },
                {
                  "name": "5.1.3 Confusion Matrix"
                }
              ]
            },
            {
              "name": "5.2 Model Deployment",
              "children": [
                {
                  "name": "5.2.1 Cloud Platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.2.2 REST APIs"
                },
                {
                  "name": "5.2.3 Project: Deploy a trained model as a REST API"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "machine learning",
    "output": {
      "name": "machine learning",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Partial Derivatives"
                },
                {
                  "name": "1.2.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Descriptive Statistics"
                },
                {
                  "name": "1.3.2 Probability Distributions"
                },
                {
                  "name": "1.3.3 Hypothesis Testing"
                }
              ]
            },
            {
              "name": "1.4 Programming for ML",
              "children": [
                {
                  "name": "1.4.1 Python Basics"
                },
                {
                  "name": "1.4.2 NumPy"
                },
                {
                  "name": "1.4.3 Pandas"
                },
                {
                  "name": "1.4.4 Matplotlib/Seaborn (Data Visualization)"
                },
                {
                  "name": "1.4.5 Project: Analyze a Public Dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Supervised Learning",
          "children": [
            {
              "name": "2.1 Regression",
              "children": [
                {
                  "name": "2.1.1 Linear Regression"
                },
                {
                  "name": "2.1.2 Polynomial Regression"
                },
                {
                  "name": "2.1.3 Regularization (L1 and L2)"
                },
                {
                  "name": "2.1.4 Project: Predict House Prices"
                }
              ]
            },
            {
              "name": "2.2 Classification",
              "children": [
                {
                  "name": "2.2.1 Logistic Regression"
                },
                {
                  "name": "2.2.2 Support Vector Machines (SVM)"
                },
                {
                  "name": "2.2.3 Decision Trees"
                },
                {
                  "name": "2.2.4 Project: Image Classification (MNIST)"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation",
              "children": [
                {
                  "name": "2.3.1 Accuracy, Precision, Recall, F1-Score"
                },
                {
                  "name": "2.3.2 Confusion Matrix"
                },
                {
                  "name": "2.3.3 ROC Curve and AUC"
                },
                {
                  "name": "2.3.4 Cross-Validation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Unsupervised Learning",
          "children": [
            {
              "name": "3.1 Clustering",
              "children": [
                {
                  "name": "3.1.1 K-Means Clustering"
                },
                {
                  "name": "3.1.2 Hierarchical Clustering"
                },
                {
                  "name": "3.1.3 DBSCAN"
                },
                {
                  "name": "3.1.4 Project: Customer Segmentation"
                }
              ]
            },
            {
              "name": "3.2 Dimensionality Reduction",
              "children": [
                {
                  "name": "3.2.1 Principal Component Analysis (PCA)"
                },
                {
                  "name": "3.2.2 t-distributed Stochastic Neighbor Embedding (t-SNE)"
                },
                {
                  "name": "3.2.3 Project: Data Visualization using PCA"
                }
              ]
            },
            {
              "name": "3.3 Association Rule Mining",
              "children": [
                {
                  "name": "3.3.1 Apriori Algorithm"
                },
                {
                  "name": "3.3.2 FP-Growth Algorithm"
                },
                {
                  "name": "3.3.3 Project: Market Basket Analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deep Learning",
          "children": [
            {
              "name": "4.1 Neural Networks",
              "children": [
                {
                  "name": "4.1.1 Perceptrons"
                },
                {
                  "name": "4.1.2 Multilayer Perceptrons (MLP)"
                },
                {
                  "name": "4.1.3 Backpropagation"
                }
              ]
            },
            {
              "name": "4.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.2.1 CNN Architectures"
                },
                {
                  "name": "4.2.2 Image Classification with CNNs"
                },
                {
                  "name": "4.2.3 Project: Image Classification (CIFAR-10)"
                }
              ]
            },
            {
              "name": "4.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "4.3.1 RNN Architectures (LSTM, GRU)"
                },
                {
                  "name": "4.3.2 Time Series Forecasting"
                },
                {
                  "name": "4.3.3 Natural Language Processing (NLP) Basics"
                },
                {
                  "name": "4.3.4 Project: Sentiment Analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Advanced Topics",
          "children": [
            {
              "name": "5.1 Model Deployment",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.1.2 Containerization (Docker)"
                },
                {
                  "name": "5.1.3 API Creation"
                }
              ]
            },
            {
              "name": "5.2 Model Optimization",
              "children": [
                {
                  "name": "5.2.1 Hyperparameter Tuning"
                },
                {
                  "name": "5.2.2 Model Compression"
                },
                {
                  "name": "5.2.3 Transfer Learning"
                }
              ]
            },
            {
              "name": "5.3 Advanced Topics",
              "children": [
                {
                  "name": "5.3.1 Reinforcement Learning"
                },
                {
                  "name": "5.3.2 Generative Adversarial Networks (GANs)"
                },
                {
                  "name": "5.3.3 Autoencoders"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn data science",
    "output": {
      "name": "I want to learn data science",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Basics (Data Structures, Control Flow)"
                },
                {
                  "name": "1.2.2 Python Libraries (NumPy, Pandas)"
                },
                {
                  "name": "1.2.3 Project: Data Cleaning and Manipulation with Pandas"
                }
              ]
            },
            {
              "name": "1.3 Version Control",
              "children": [
                {
                  "name": "1.3.1 Git Basics"
                },
                {
                  "name": "1.3.2 GitHub/GitLab"
                },
                {
                  "name": "1.3.3 Project: Version control a data analysis project"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Wrangling & Exploration",
          "children": [
            {
              "name": "2.1 Data Cleaning",
              "children": [
                {
                  "name": "2.1.1 Handling Missing Values"
                },
                {
                  "name": "2.1.2 Outlier Detection and Treatment"
                },
                {
                  "name": "2.1.3 Data Transformation"
                }
              ]
            },
            {
              "name": "2.2 Exploratory Data Analysis (EDA)",
              "children": [
                {
                  "name": "2.2.1 Data Visualization (Matplotlib, Seaborn)"
                },
                {
                  "name": "2.2.2 Descriptive Statistics"
                },
                {
                  "name": "2.2.3 Project: Perform EDA on a real-world dataset"
                }
              ]
            },
            {
              "name": "2.3 Feature Engineering",
              "children": [
                {
                  "name": "2.3.1 Feature Scaling"
                },
                {
                  "name": "2.3.2 Feature Selection"
                },
                {
                  "name": "2.3.3 Project: Engineer new features to improve model performance"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "3.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "3.1.2 Classification (Decision Trees, SVM, Naive Bayes)"
                },
                {
                  "name": "3.1.3 Project: Build a classification model"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "3.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "3.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "3.2.3 Project: Perform customer segmentation using clustering"
                }
              ]
            },
            {
              "name": "3.3 Model Evaluation",
              "children": [
                {
                  "name": "3.3.1 Metrics (Accuracy, Precision, Recall, F1-score)"
                },
                {
                  "name": "3.3.2 Cross-validation"
                },
                {
                  "name": "3.3.3 Hyperparameter Tuning"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deep Learning (Optional)",
          "children": [
            {
              "name": "4.1 Neural Networks",
              "children": [
                {
                  "name": "4.1.1 Basic Neural Network Architecture"
                },
                {
                  "name": "4.1.2 Backpropagation"
                },
                {
                  "name": "4.1.3 Project: Build a simple neural network"
                }
              ]
            },
            {
              "name": "4.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.2.1 CNN Architectures"
                },
                {
                  "name": "4.2.2 Image Classification"
                },
                {
                  "name": "4.2.3 Project: Build an image classification model"
                }
              ]
            },
            {
              "name": "4.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "4.3.1 RNN Architectures (LSTM, GRU)"
                },
                {
                  "name": "4.3.2 Time Series Analysis"
                },
                {
                  "name": "4.3.3 Project: Build a time series forecasting model"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Communication",
          "children": [
            {
              "name": "5.1 Deployment",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.1.2 API Development"
                },
                {
                  "name": "5.1.3 Project: Deploy a model as a web application"
                }
              ]
            },
            {
              "name": "5.2 Communication",
              "children": [
                {
                  "name": "5.2.1 Data Storytelling"
                },
                {
                  "name": "5.2.2 Report Writing"
                },
                {
                  "name": "5.2.3 Presentation Skills"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "ios developer",
    "output": {
      "name": "iOS Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Swift Fundamentals (variables, data types, control flow)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (Classes, Structs, Protocols)"
                },
                {
                  "name": "1.1.3 Basic iOS App Structure (Views, View Controllers)"
                }
              ]
            },
            {
              "name": "1.2 Xcode and Interface Builder",
              "children": [
                {
                  "name": "1.2.1 Xcode Interface and Navigation"
                },
                {
                  "name": "1.2.2 Storyboards and Auto Layout"
                },
                {
                  "name": "1.2.3 Creating and Managing iOS Projects"
                }
              ]
            },
            {
              "name": "1.3 UIKit Basics",
              "children": [
                {
                  "name": "1.3.1 UI Controls (Buttons, Labels, Text Fields)"
                },
                {
                  "name": "1.3.2 Working with Images and Assets"
                },
                {
                  "name": "1.3.3 Navigation Controllers and Tab Bars",
                  "children": [
                    {
                      "name": "1.3.3.1 Project: Simple Navigation App"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate iOS Development",
          "children": [
            {
              "name": "2.1 Data Handling",
              "children": [
                {
                  "name": "2.1.1 Core Data (Model design, fetching, saving)"
                },
                {
                  "name": "2.1.2 Networking with URLSession (GET, POST requests)"
                },
                {
                  "name": "2.1.3 JSON Parsing (Codable protocol)"
                }
              ]
            },
            {
              "name": "2.2 Advanced UI Concepts",
              "children": [
                {
                  "name": "2.2.1 Table Views and Collection Views"
                },
                {
                  "name": "2.2.2 Custom UI Elements"
                },
                {
                  "name": "2.2.3 Working with Animations (UIView animation)"
                }
              ]
            },
            {
              "name": "2.3 App Architecture",
              "children": [
                {
                  "name": "2.3.1 MVC (Model-View-Controller)"
                },
                {
                  "name": "2.3.2 MVVM (Model-View-ViewModel)"
                },
                {
                  "name": "2.3.3 Delegation and Data Sources"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced iOS Development",
          "children": [
            {
              "name": "3.1 Concurrency and Multithreading",
              "children": [
                {
                  "name": "3.1.1 Grand Central Dispatch (GCD)"
                },
                {
                  "name": "3.1.2 Operation Queues"
                },
                {
                  "name": "3.1.3 Async/Await"
                }
              ]
            },
            {
              "name": "3.2 Third-Party Libraries",
              "children": [
                {
                  "name": "3.2.1 Networking Libraries (Alamofire, URLSession)"
                },
                {
                  "name": "3.2.2 Image Loading Libraries (Kingfisher, SDWebImage)"
                },
                {
                  "name": "3.2.3 Dependency Management (Swift Package Manager, CocoaPods)"
                }
              ]
            },
            {
              "name": "3.3 Testing and Debugging",
              "children": [
                {
                  "name": "3.3.1 Unit Testing"
                },
                {
                  "name": "3.3.2 UI Testing"
                },
                {
                  "name": "3.3.3 Debugging Techniques and Tools"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Distribution",
          "children": [
            {
              "name": "4.1 App Store Connect",
              "children": [
                {
                  "name": "4.1.1 Account Setup"
                },
                {
                  "name": "4.1.2 App Submission Process"
                },
                {
                  "name": "4.1.3 Handling App Store Reviews"
                }
              ]
            },
            {
              "name": "4.2 Code Signing and Provisioning",
              "children": [
                {
                  "name": "4.2.1 Certificates and Identifiers"
                },
                {
                  "name": "4.2.2 Provisioning Profiles"
                },
                {
                  "name": "4.2.3 Code Signing Process"
                }
              ]
            },
            {
              "name": "4.3  Advanced Deployment",
              "children": [
                {
                  "name": "4.3.1 TestFlight Beta Testing"
                },
                {
                  "name": "4.3.2 App Updates and Versioning"
                },
                {
                  "name": "4.3.3 In-App Purchases (IAP)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1  ARKit and RealityKit",
              "children": [
                {
                  "name": "5.1.1 Augmented Reality App Development"
                },
                {
                  "name": "5.1.2 Integrating AR into existing apps"
                }
              ]
            },
            {
              "name": "5.2  Core Location and MapKit",
              "children": [
                {
                  "name": "5.2.1 Location Services and Tracking"
                },
                {
                  "name": "5.2.2 Map Integration and Custom Annotations"
                }
              ]
            },
            {
              "name": "5.3  SwiftUI",
              "children": [
                {
                  "name": "5.3.1 Declarative UI Development"
                },
                {
                  "name": "5.3.2 SwiftUI data flow"
                },
                {
                  "name": "5.3.3 Integrating SwiftUI with UIKit"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a ios developer",
    "output": {
      "name": "i want to become an iOS developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Understanding Swift Syntax and Data Types"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) Principles in Swift"
                },
                {
                  "name": "1.1.3 Basic Control Flow (loops, conditionals)"
                }
              ]
            },
            {
              "name": "1.2 Xcode and Interface Builder",
              "children": [
                {
                  "name": "1.2.1 Setting up Xcode and Simulators"
                },
                {
                  "name": "1.2.2 Creating a new Xcode Project"
                },
                {
                  "name": "1.2.3  Using Interface Builder to design UIs"
                },
                {
                  "name": "1.2.4 Project Navigation and File Management in Xcode"
                }
              ]
            },
            {
              "name": "1.3 iOS Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Understanding View Controllers"
                },
                {
                  "name": "1.3.2 Working with UI elements (Buttons, Labels, Images, Text Fields)"
                },
                {
                  "name": "1.3.3 Auto Layout and Constraints (practical exercise: build a simple calculator UI)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate iOS Development",
          "children": [
            {
              "name": "2.1 Working with Data",
              "children": [
                {
                  "name": "2.1.1 Using Arrays, Dictionaries, and Sets"
                },
                {
                  "name": "2.1.2 Introduction to Core Data (simple data persistence project)"
                },
                {
                  "name": "2.1.3 JSON Parsing and Handling"
                }
              ]
            },
            {
              "name": "2.2 Networking and APIs",
              "children": [
                {
                  "name": "2.2.1 Understanding HTTP requests"
                },
                {
                  "name": "2.2.2 Using URLSession to fetch data from APIs (practical exercise: build a simple weather app)"
                },
                {
                  "name": "2.2.3 Handling asynchronous operations with completion handlers"
                }
              ]
            },
            {
              "name": "2.3 Advanced UI Components",
              "children": [
                {
                  "name": "2.3.1 Table Views and Collection Views"
                },
                {
                  "name": "2.3.2 Navigation Controllers and Tab Bars"
                },
                {
                  "name": "2.3.3 Segues and Storyboards"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced iOS Development",
          "children": [
            {
              "name": "3.1 Design Patterns",
              "children": [
                {
                  "name": "3.1.1 MVC, MVVM, and VIPER Architectures"
                },
                {
                  "name": "3.1.2 Implementing Singleton, Delegate, and Observer patterns"
                },
                {
                  "name": "3.1.3 Refactoring existing project to improve architecture"
                }
              ]
            },
            {
              "name": "3.2 Concurrency and Grand Central Dispatch (GCD)",
              "children": [
                {
                  "name": "3.2.1 Understanding Threads and Processes"
                },
                {
                  "name": "3.2.2 Using GCD for asynchronous tasks"
                },
                {
                  "name": "3.2.3 Handling concurrency issues"
                }
              ]
            },
            {
              "name": "3.3  Advanced Data Handling",
              "children": [
                {
                  "name": "3.3.1 Realm or Firebase integration"
                },
                {
                  "name": "3.3.2 Core Data relationship management"
                },
                {
                  "name": "3.3.3 Data caching strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Beyond",
          "children": [
            {
              "name": "4.1 App Store Deployment",
              "children": [
                {
                  "name": "4.1.1 Setting up Apple Developer Account"
                },
                {
                  "name": "4.1.2 Creating App Store Connect listing"
                },
                {
                  "name": "4.1.3 Code signing and provisioning profiles"
                },
                {
                  "name": "4.1.4  Preparing app for submission"
                }
              ]
            },
            {
              "name": "4.2 Testing and Debugging",
              "children": [
                {
                  "name": "4.2.1 Unit testing with XCTest"
                },
                {
                  "name": "4.2.2 UI testing with XCTest"
                },
                {
                  "name": "4.2.3 Debugging techniques using Xcode debugger"
                }
              ]
            },
            {
              "name": "4.3  Further Learning",
              "children": [
                {
                  "name": "4.3.1 Explore SwiftUI"
                },
                {
                  "name": "4.3.2 Learn about ARKit or Core ML"
                },
                {
                  "name": "4.3.3 Stay updated with the latest iOS SDK releases and best practices"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Building a Portfolio",
          "children": [
            {
              "name": "5.1 Project Ideas",
              "children": [
                {
                  "name": "5.1.1 To-Do List App"
                },
                {
                  "name": "5.1.2 Simple Game"
                },
                {
                  "name": "5.1.3 Social Media Client (simplified)"
                },
                {
                  "name": "5.1.4  E-commerce App (basic functionality)"
                }
              ]
            },
            {
              "name": "5.2  Open Source Contributions",
              "children": [
                {
                  "name": "5.2.1 Find suitable projects on GitHub"
                },
                {
                  "name": "5.2.2 Contribute bug fixes or features"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "mobile app developer",
    "output": {
      "name": "mobile app developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                },
                {
                  "name": "1.1.4 Practice: Build a simple calculator app in Python"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction"
                },
                {
                  "name": "1.2.4 Practice: Create a simple game using OOP principles in Java"
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 GitHub/GitLab Workflow"
                },
                {
                  "name": "1.3.4 Practice: Create a Git repository for a personal project"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Android Development (Kotlin/Java)",
          "children": [
            {
              "name": "2.1 Android Studio Setup and Basics",
              "children": [
                {
                  "name": "2.1.1 Installing Android Studio"
                },
                {
                  "name": "2.1.2 Creating your first Android project"
                },
                {
                  "name": "2.1.3 Understanding XML layouts"
                },
                {
                  "name": "2.1.4 Practice: Build a simple 'Hello World' app"
                }
              ]
            },
            {
              "name": "2.2 UI Development and Layouts",
              "children": [
                {
                  "name": "2.2.1 Different layout types (LinearLayout, RelativeLayout, ConstraintLayout)"
                },
                {
                  "name": "2.2.2 Working with Views and Widgets"
                },
                {
                  "name": "2.2.3 Understanding Activities and Fragments"
                },
                {
                  "name": "2.2.4 Practice: Design a multi-screen app with different layouts"
                }
              ]
            },
            {
              "name": "2.3 Data Handling and Networking",
              "children": [
                {
                  "name": "2.3.1 Using SQLite for local data storage"
                },
                {
                  "name": "2.3.2 Making network requests using Retrofit or Volley"
                },
                {
                  "name": "2.3.3 Handling JSON data"
                },
                {
                  "name": "2.3.4 Practice: Create an app that fetches data from a public API and displays it"
                }
              ]
            }
          ]
        },
        {
          "name": "3. iOS Development (Swift)",
          "children": [
            {
              "name": "3.1 Xcode Setup and Basics",
              "children": [
                {
                  "name": "3.1.1 Installing Xcode"
                },
                {
                  "name": "3.1.2 Creating your first iOS project"
                },
                {
                  "name": "3.1.3 Understanding Storyboards"
                },
                {
                  "name": "3.1.4 Practice: Build a simple 'Hello World' app"
                }
              ]
            },
            {
              "name": "3.2 UI Development with SwiftUI/ UIKit",
              "children": [
                {
                  "name": "3.2.1 SwiftUI fundamentals (Views, State, Data Binding)"
                },
                {
                  "name": "3.2.2 UIKit fundamentals (Views, View Controllers)"
                },
                {
                  "name": "3.2.3 Working with UI elements"
                },
                {
                  "name": "3.2.4 Practice: Design an iOS app with a user interface"
                }
              ]
            },
            {
              "name": "3.3 Data Handling and Networking",
              "children": [
                {
                  "name": "3.3.1 Core Data for local data storage"
                },
                {
                  "name": "3.3.2 Making network requests using URLSession"
                },
                {
                  "name": "3.3.3 Handling JSON data"
                },
                {
                  "name": "3.3.4 Practice: Create an iOS app that fetches and displays data from a public API"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Concepts",
          "children": [
            {
              "name": "4.1 App Architecture",
              "children": [
                {
                  "name": "4.1.1 MVC, MVVM, MVP"
                },
                {
                  "name": "4.1.2 Clean Architecture"
                },
                {
                  "name": "4.1.3 Dependency Injection"
                },
                {
                  "name": "4.1.4 Practice: Refactor a previous project using a chosen architecture"
                }
              ]
            },
            {
              "name": "4.2 Testing and Debugging",
              "children": [
                {
                  "name": "4.2.1 Unit Testing"
                },
                {
                  "name": "4.2.2 UI Testing"
                },
                {
                  "name": "4.2.3 Debugging tools"
                },
                {
                  "name": "4.2.4 Practice: Implement unit and UI tests for a project"
                }
              ]
            },
            {
              "name": "4.3 Deployment and Publishing",
              "children": [
                {
                  "name": "4.3.1 Google Play Store Publishing"
                },
                {
                  "name": "4.3.2 Apple App Store Publishing"
                },
                {
                  "name": "4.3.3 App signing and certificates"
                },
                {
                  "name": "4.3.4 Practice: Publish a simple app to Google Play Store/Apple App Store"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Cross-Platform Development",
          "children": [
            {
              "name": "5.1 React Native",
              "children": [
                {
                  "name": "5.1.1 Setting up React Native environment"
                },
                {
                  "name": "5.1.2 Building basic UI components"
                },
                {
                  "name": "5.1.3 Working with JavaScript and React"
                },
                {
                  "name": "5.1.4 Practice: Build a simple cross-platform app using React Native"
                }
              ]
            },
            {
              "name": "5.2 Flutter",
              "children": [
                {
                  "name": "5.2.1 Setting up Flutter environment"
                },
                {
                  "name": "5.2.2 Building UI with Dart and widgets"
                },
                {
                  "name": "5.2.3 State management in Flutter"
                },
                {
                  "name": "5.2.4 Practice: Build a cross-platform app using Flutter"
                }
              ]
            },
            {
              "name": "5.3 Xamarin",
              "children": [
                {
                  "name": "5.3.1 Setting up Xamarin environment"
                },
                {
                  "name": "5.3.2 Using C# for cross-platform development"
                },
                {
                  "name": "5.3.3 Accessing native platform features"
                },
                {
                  "name": "5.3.4 Practice: Build a cross-platform app using Xamarin"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a mobile app developer",
    "output": {
      "name": "I want to become a mobile app developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures",
                  "children": [
                    {
                      "name": "1.1.3.1 Practice: Build a simple calculator app in Python"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction",
                  "children": [
                    {
                      "name": "1.2.3.1 Practice: Create a simple game with OOP principles in Java"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Using GitHub or GitLab",
                  "children": [
                    {
                      "name": "1.3.3.1 Practice: Create a GitHub account and push a simple project"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Mobile App Development Platforms",
          "children": [
            {
              "name": "2.1 Choosing a Platform (iOS, Android, Cross-Platform)",
              "children": [
                {
                  "name": "2.1.1 iOS Development (Swift/Objective-C, Xcode)"
                },
                {
                  "name": "2.1.2 Android Development (Kotlin/Java, Android Studio)"
                },
                {
                  "name": "2.1.3 Cross-Platform Frameworks (React Native, Flutter, Xamarin)"
                }
              ]
            },
            {
              "name": "2.2 Setting up Development Environment",
              "children": [
                {
                  "name": "2.2.1 Installing necessary SDKs and IDEs"
                },
                {
                  "name": "2.2.2 Configuring emulators or simulators"
                },
                {
                  "name": "2.2.3 Running your first 'Hello, World!' app"
                }
              ]
            },
            {
              "name": "2.3 UI/UX Design Principles",
              "children": [
                {
                  "name": "2.3.1 User Interface (UI) Design Basics"
                },
                {
                  "name": "2.3.2 User Experience (UX) Design Fundamentals"
                },
                {
                  "name": "2.3.3 Designing for different screen sizes and resolutions",
                  "children": [
                    {
                      "name": "2.3.3.1 Practice: Design wireframes for a simple app using Figma or Adobe XD"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "3. Core Mobile Development Concepts",
          "children": [
            {
              "name": "3.1 User Interface (UI) Development",
              "children": [
                {
                  "name": "3.1.1 Layouts and Views"
                },
                {
                  "name": "3.1.2 UI Components (Buttons, Text Fields, Images)"
                },
                {
                  "name": "3.1.3 Handling user input and events"
                }
              ]
            },
            {
              "name": "3.2 Data Management",
              "children": [
                {
                  "name": "3.2.1 Local Storage (SQLite, Shared Preferences)"
                },
                {
                  "name": "3.2.2 Remote Data Access (APIs, RESTful services)"
                },
                {
                  "name": "3.2.3 Data Serialization (JSON, XML)"
                }
              ]
            },
            {
              "name": "3.3 Networking",
              "children": [
                {
                  "name": "3.3.1 HTTP Requests (GET, POST, PUT, DELETE)"
                },
                {
                  "name": "3.3.2 Handling network errors"
                },
                {
                  "name": "3.3.3 Working with APIs",
                  "children": [
                    {
                      "name": "3.3.3.1 Practice: Build an app that fetches data from a public API"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Deployment",
          "children": [
            {
              "name": "4.1 Advanced UI/UX",
              "children": [
                {
                  "name": "4.1.1 Animations and Transitions"
                },
                {
                  "name": "4.1.2 Custom Views and Components"
                },
                {
                  "name": "4.1.3 Implementing design patterns for better app architecture"
                }
              ]
            },
            {
              "name": "4.2 App Security",
              "children": [
                {
                  "name": "4.2.1 Data encryption and protection"
                },
                {
                  "name": "4.2.2 Secure authentication and authorization"
                },
                {
                  "name": "4.2.3 Preventing common security vulnerabilities"
                }
              ]
            },
            {
              "name": "4.3 App Deployment and Publishing",
              "children": [
                {
                  "name": "4.3.1 Preparing your app for release"
                },
                {
                  "name": "4.3.2 Submitting your app to app stores (Google Play Store, Apple App Store)"
                },
                {
                  "name": "4.3.3 App store optimization (ASO)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Continuous Learning & Specialization",
          "children": [
            {
              "name": "5.1 Stay Updated with Industry Trends",
              "children": [
                {
                  "name": "5.1.1 Follow tech blogs and publications"
                },
                {
                  "name": "5.1.2 Attend conferences and workshops"
                },
                {
                  "name": "5.1.3 Participate in online communities"
                }
              ]
            },
            {
              "name": "5.2 Choose a Specialization",
              "children": [
                {
                  "name": "5.2.1 Game Development"
                },
                {
                  "name": "5.2.2 AR/VR Development"
                },
                {
                  "name": "5.2.3 AI/ML in Mobile Apps"
                }
              ]
            },
            {
              "name": "5.3 Build a Portfolio",
              "children": [
                {
                  "name": "5.3.1 Develop multiple apps showcasing different skills"
                },
                {
                  "name": "5.3.2 Contribute to open-source projects"
                },
                {
                  "name": "5.3.3 Showcase your work online"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn mobile app development",
    "output": {
      "name": "i want to learn mobile app development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction"
                }
              ]
            },
            {
              "name": "1.3 Version Control (Git)",
              "children": [
                {
                  "name": "1.3.1 Git Basics: init, add, commit, push, pull"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 GitHub/GitLab/Bitbucket - Project Hosting"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Platform and Language",
          "children": [
            {
              "name": "2.1 Native Android Development (Java/Kotlin)",
              "children": [
                {
                  "name": "2.1.1 Setting up Android Studio"
                },
                {
                  "name": "2.1.2 Learn Java or Kotlin Syntax"
                },
                {
                  "name": "2.1.3 Build a simple 'Hello World' app"
                }
              ]
            },
            {
              "name": "2.2 Native iOS Development (Swift)",
              "children": [
                {
                  "name": "2.2.1 Setting up Xcode"
                },
                {
                  "name": "2.2.2 Learn Swift Syntax"
                },
                {
                  "name": "2.2.3 Build a simple 'Hello World' app"
                }
              ]
            },
            {
              "name": "2.3 Cross-Platform Development (React Native, Flutter)",
              "children": [
                {
                  "name": "2.3.1 Choosing a Framework (React Native or Flutter)"
                },
                {
                  "name": "2.3.2 Setting up Development Environment"
                },
                {
                  "name": "2.3.3 Build a simple app with basic UI elements"
                }
              ]
            }
          ]
        },
        {
          "name": "3. UI/UX Design and Development",
          "children": [
            {
              "name": "3.1 UI Principles and Design Patterns",
              "children": [
                {
                  "name": "3.1.1 Understanding User Interface Design"
                },
                {
                  "name": "3.1.2 Material Design (Android) and Human Interface Guidelines (iOS)"
                },
                {
                  "name": "3.1.3 Designing User Flows and Wireframing"
                }
              ]
            },
            {
              "name": "3.2 Layouts and UI Components",
              "children": [
                {
                  "name": "3.2.1 Implementing various layouts (linear, relative, grid, etc.)"
                },
                {
                  "name": "3.2.2 Using common UI components (buttons, text fields, images, etc.)"
                },
                {
                  "name": "3.2.3 Creating custom UI components"
                }
              ]
            },
            {
              "name": "3.3 UI/UX Project: Simple To-Do App",
              "children": [
                {
                  "name": "3.3.1 Design and wireframe the app"
                },
                {
                  "name": "3.3.2 Develop the app with basic UI elements and functionality"
                },
                {
                  "name": "3.3.3 Test and iterate on the design and functionality"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Concepts",
          "children": [
            {
              "name": "4.1 Data Persistence",
              "children": [
                {
                  "name": "4.1.1 Local Storage (SQLite, Room, Core Data)"
                },
                {
                  "name": "4.1.2 Cloud Storage (Firebase, AWS)"
                },
                {
                  "name": "4.1.3 Data Synchronization"
                }
              ]
            },
            {
              "name": "4.2 Networking and APIs",
              "children": [
                {
                  "name": "4.2.1 HTTP Requests (GET, POST, PUT, DELETE)"
                },
                {
                  "name": "4.2.2 JSON Parsing"
                },
                {
                  "name": "4.2.3 RESTful APIs"
                }
              ]
            },
            {
              "name": "4.3 Advanced Project: Weather App",
              "children": [
                {
                  "name": "4.3.1 Design and wireframe the app"
                },
                {
                  "name": "4.3.2 Fetch data from a weather API"
                },
                {
                  "name": "4.3.3 Display data in a user-friendly way"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Publishing",
          "children": [
            {
              "name": "5.1 App Store Submission (iOS)",
              "children": [
                {
                  "name": "5.1.1 Apple Developer Account"
                },
                {
                  "name": "5.1.2 App Store guidelines and requirements"
                },
                {
                  "name": "5.1.3 Submitting your app for review"
                }
              ]
            },
            {
              "name": "5.2 Google Play Store Submission (Android)",
              "children": [
                {
                  "name": "5.2.1 Google Play Console"
                },
                {
                  "name": "5.2.2 Google Play Store guidelines and requirements"
                },
                {
                  "name": "5.2.3 Submitting your app for review"
                }
              ]
            },
            {
              "name": "5.3 Testing and Debugging",
              "children": [
                {
                  "name": "5.3.1 Unit Testing"
                },
                {
                  "name": "5.3.2 UI Testing"
                },
                {
                  "name": "5.3.3 Debugging tools and techniques"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn UI",
    "output": {
      "name": "I Want To Learn UI",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Design Principles",
              "children": [
                {
                  "name": "1.1.1 UX vs UI"
                },
                {
                  "name": "1.1.2 Design Thinking Process"
                },
                {
                  "name": "1.1.3 Gestalt Principles"
                }
              ]
            },
            {
              "name": "1.2 Visual Design Basics",
              "children": [
                {
                  "name": "1.2.1 Color Theory"
                },
                {
                  "name": "1.2.2 Typography"
                },
                {
                  "name": "1.2.3 Layout & Composition"
                }
              ]
            },
            {
              "name": "1.3 Introduction to UI Tools",
              "children": [
                {
                  "name": "1.3.1 Figma Basics (Interface & Navigation)"
                },
                {
                  "name": "1.3.2 Adobe XD Basics (Interface & Navigation)"
                },
                {
                  "name": "1.3.3 Sketch Basics (Interface & Navigation)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core UI Concepts",
          "children": [
            {
              "name": "2.1 User Interface Elements",
              "children": [
                {
                  "name": "2.1.1 Buttons, Inputs, Forms"
                },
                {
                  "name": "2.1.2 Navigation Menus, Tabs"
                },
                {
                  "name": "2.1.3 Modals, Tooltips"
                }
              ]
            },
            {
              "name": "2.2 Interaction Design",
              "children": [
                {
                  "name": "2.2.1 User Flows & Wireframing"
                },
                {
                  "name": "2.2.2 Prototyping (Interactive Mockups)"
                },
                {
                  "name": "2.2.3 User Testing & Iteration"
                }
              ]
            },
            {
              "name": "2.3 Responsive Design",
              "children": [
                {
                  "name": "2.3.1 Mobile-First Approach"
                },
                {
                  "name": "2.3.2 Breakpoints & Media Queries"
                },
                {
                  "name": "2.3.3 Different Screen Sizes & Resolutions"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced UI Techniques",
          "children": [
            {
              "name": "3.1 UI Animations & Micro-interactions",
              "children": [
                {
                  "name": "3.1.1 Principles of Animation"
                },
                {
                  "name": "3.1.2 Implementing Animations (Figma/XD/After Effects)"
                },
                {
                  "name": "3.1.3 Creating Micro-interactions"
                }
              ]
            },
            {
              "name": "3.2 UI Patterns & Libraries",
              "children": [
                {
                  "name": "3.2.1 Common UI Patterns (e.g., Accordion, Carousel)"
                },
                {
                  "name": "3.2.2 UI Component Libraries (e.g., Material Design, Ant Design)"
                },
                {
                  "name": "3.2.3 Understanding Design Systems"
                }
              ]
            },
            {
              "name": "3.3 Accessibility",
              "children": [
                {
                  "name": "3.3.1 WCAG Guidelines"
                },
                {
                  "name": "3.3.2 Keyboard Navigation & ARIA attributes"
                },
                {
                  "name": "3.3.3 Color Contrast & Readability"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Practical Application",
          "children": [
            {
              "name": "4.1 Project 1: Simple Landing Page Design",
              "children": [
                {
                  "name": "4.1.1 Design a landing page for a fictional product."
                },
                {
                  "name": "4.1.2 Implement responsive design."
                },
                {
                  "name": "4.1.3 Create a prototype."
                }
              ]
            },
            {
              "name": "4.2 Project 2: E-commerce Product Page Design",
              "children": [
                {
                  "name": "4.2.1 Design a product page for an online store."
                },
                {
                  "name": "4.2.2 Focus on user experience and information architecture."
                },
                {
                  "name": "4.2.3 Incorporate UI patterns for e-commerce."
                }
              ]
            },
            {
              "name": "4.3 Project 3: Mobile App UI Design",
              "children": [
                {
                  "name": "4.3.1 Design a simple mobile app UI (choose a concept)."
                },
                {
                  "name": "4.3.2 Consider navigation and user flows for a mobile context."
                },
                {
                  "name": "4.3.3 Ensure accessibility for mobile users."
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced & Specializations",
          "children": [
            {
              "name": "5.1 Motion Design for UI",
              "children": [
                {
                  "name": "5.1.1 Advanced animation techniques"
                },
                {
                  "name": "5.1.2 Tools like After Effects or Principle"
                },
                {
                  "name": "5.1.3 Creating engaging user experiences through motion"
                }
              ]
            },
            {
              "name": "5.2  UI for Specific Platforms",
              "children": [
                {
                  "name": "5.2.1 iOS UI Design"
                },
                {
                  "name": "5.2.2 Android UI Design"
                },
                {
                  "name": "5.2.3 Web UI Design"
                }
              ]
            },
            {
              "name": "5.3  Advanced Prototyping and Collaboration",
              "children": [
                {
                  "name": "5.3.1 Advanced prototyping techniques (interactions, animations)"
                },
                {
                  "name": "5.3.2 Version control with tools like Abstract or Figma's features"
                },
                {
                  "name": "5.3.3 Collaboration tools and workflows"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn UI/UX",
    "output": {
      "name": "i want to learn UI/UX",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 User-centered design principles"
                },
                {
                  "name": "1.1.2 User research methodologies (e.g., surveys, interviews)"
                },
                {
                  "name": "1.1.3 Information architecture basics"
                }
              ]
            },
            {
              "name": "1.2 Design Thinking Process",
              "children": [
                {
                  "name": "1.2.1 Empathize: User research and persona creation"
                },
                {
                  "name": "1.2.2 Define: Problem statement and user needs"
                },
                {
                  "name": "1.2.3 Ideate: Brainstorming and sketching solutions"
                },
                {
                  "name": "1.2.4 Prototype: Low-fidelity wireframing and prototyping"
                },
                {
                  "name": "1.2.5 Test: Usability testing and iteration"
                }
              ]
            },
            {
              "name": "1.3 UX Writing Basics",
              "children": [
                {
                  "name": "1.3.1 Microcopy and its importance"
                },
                {
                  "name": "1.3.2 Tone of voice and style guide"
                },
                {
                  "name": "1.3.3 Writing clear and concise instructions"
                }
              ]
            }
          ]
        },
        {
          "name": "2. UI Design Fundamentals",
          "children": [
            {
              "name": "2.1 Visual Design Principles",
              "children": [
                {
                  "name": "2.1.1 Typography (font selection, hierarchy)"
                },
                {
                  "name": "2.1.2 Color theory and palettes"
                },
                {
                  "name": "2.1.3 Layout and composition (grid systems, visual balance)"
                }
              ]
            },
            {
              "name": "2.2 UI Design Tools",
              "children": [
                {
                  "name": "2.2.1 Figma (or Sketch): Learn the interface and basic features"
                },
                {
                  "name": "2.2.2 Adobe XD (optional): Explore alternative tools"
                },
                {
                  "name": "2.2.3 Practical Exercise: Design a simple landing page using chosen tool"
                }
              ]
            },
            {
              "name": "2.3 UI Patterns & Best Practices",
              "children": [
                {
                  "name": "2.3.1 Common UI elements (buttons, forms, navigation)"
                },
                {
                  "name": "2.3.2 Accessibility considerations (WCAG guidelines)"
                },
                {
                  "name": "2.3.3 Responsive design principles (mobile-first approach)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Interaction Design",
          "children": [
            {
              "name": "3.1 User Flows and Information Architecture",
              "children": [
                {
                  "name": "3.1.1 Creating user flows for various scenarios"
                },
                {
                  "name": "3.1.2 Sitemaps and navigation structures"
                },
                {
                  "name": "3.1.3 Card sorting and tree testing exercises"
                }
              ]
            },
            {
              "name": "3.2 Prototyping & Usability Testing",
              "children": [
                {
                  "name": "3.2.1 High-fidelity prototyping (interactive mockups)"
                },
                {
                  "name": "3.2.2 Usability testing methods (moderated, unmoderated)"
                },
                {
                  "name": "3.2.3 Project: Conduct a usability test on a simple prototype"
                }
              ]
            },
            {
              "name": "3.3 User Experience Metrics",
              "children": [
                {
                  "name": "3.3.1 Key performance indicators (KPIs) for UX"
                },
                {
                  "name": "3.3.2 A/B testing and data analysis"
                },
                {
                  "name": "3.3.3  Understanding heatmaps and user session recordings"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Motion Design & Micro-interactions",
              "children": [
                {
                  "name": "4.1.1 Principles of animation and visual feedback"
                },
                {
                  "name": "4.1.2  Tools for motion design (After Effects, Principle)"
                },
                {
                  "name": "4.1.3 Project: Add micro-interactions to a simple UI element"
                }
              ]
            },
            {
              "name": "4.2 Design Systems",
              "children": [
                {
                  "name": "4.2.1 Component libraries and style guides"
                },
                {
                  "name": "4.2.2  Maintaining design consistency across platforms"
                },
                {
                  "name": "4.2.3  Project: Create a basic design system for a hypothetical app"
                }
              ]
            },
            {
              "name": "4.3  Accessibility Best Practices (Advanced)",
              "children": [
                {
                  "name": "4.3.1 WCAG 2.1 conformance and ARIA attributes"
                },
                {
                  "name": "4.3.2  Keyboard navigation and screen reader compatibility"
                },
                {
                  "name": "4.3.3  Project: Audit an existing website for accessibility issues"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio & Job Search",
          "children": [
            {
              "name": "5.1 Building a Strong Portfolio",
              "children": [
                {
                  "name": "5.1.1 Showcasing your best work"
                },
                {
                  "name": "5.1.2  Writing compelling case studies"
                },
                {
                  "name": "5.1.3  Presenting your work effectively"
                }
              ]
            },
            {
              "name": "5.2  Networking and Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1  Utilizing online platforms (LinkedIn, Behance)"
                },
                {
                  "name": "5.2.2  Preparing for interviews"
                },
                {
                  "name": "5.2.3  Negotiating salary and benefits"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "UI/UX designer",
    "output": {
      "name": "UI/UX Designer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Design Principles",
              "children": [
                {
                  "name": "1.1.1 Gestalt Principles"
                },
                {
                  "name": "1.1.2 Typography Basics"
                },
                {
                  "name": "1.1.3 Color Theory & Accessibility"
                }
              ]
            },
            {
              "name": "1.2 UX Research",
              "children": [
                {
                  "name": "1.2.1 User Interviews & Surveys"
                },
                {
                  "name": "1.2.2 Competitive Analysis"
                },
                {
                  "name": "1.2.3 Persona Development",
                  "children": [
                    {
                      "name": "1.2.3.1 Exercise: Create a Persona for a Fitness App"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 User-Centered Design Process",
              "children": [
                {
                  "name": "1.3.1 Empathize, Define, Ideate, Prototype, Test"
                },
                {
                  "name": "1.3.2 Design Thinking Methodology"
                },
                {
                  "name": "1.3.3 Agile Development in UX"
                }
              ]
            }
          ]
        },
        {
          "name": "2. UI Design Tools & Skills",
          "children": [
            {
              "name": "2.1 Figma/Sketch/Adobe XD",
              "children": [
                {
                  "name": "2.1.1 Interface Navigation"
                },
                {
                  "name": "2.1.2 Basic UI elements (Buttons, Forms, Navigation)"
                },
                {
                  "name": "2.1.3 Prototyping & Interactive Mockups",
                  "children": [
                    {
                      "name": "2.1.3.1 Project: Design a simple landing page prototype"
                    }
                  ]
                }
              ]
            },
            {
              "name": "2.2 Visual Design",
              "children": [
                {
                  "name": "2.2.1 Layout & Composition"
                },
                {
                  "name": "2.2.2 Iconography & Illustration Basics"
                },
                {
                  "name": "2.2.3 Image Editing & Manipulation"
                }
              ]
            },
            {
              "name": "2.3 Interaction Design",
              "children": [
                {
                  "name": "2.3.1 Information Architecture"
                },
                {
                  "name": "2.3.2 User Flows & Navigation"
                },
                {
                  "name": "2.3.3 Microinteractions & Animations"
                }
              ]
            }
          ]
        },
        {
          "name": "3. UX Design Deep Dive",
          "children": [
            {
              "name": "3.1 Information Architecture",
              "children": [
                {
                  "name": "3.1.1 Card Sorting & Tree Testing"
                },
                {
                  "name": "3.1.2 Navigation Patterns & Menu Design"
                },
                {
                  "name": "3.1.3 Sitemaps & Wireframing"
                }
              ]
            },
            {
              "name": "3.2 Usability Testing",
              "children": [
                {
                  "name": "3.2.1 Moderated & Unmoderated Testing"
                },
                {
                  "name": "3.2.2 A/B Testing"
                },
                {
                  "name": "3.2.3 Data Analysis & Reporting",
                  "children": [
                    {
                      "name": "3.2.3.1 Project: Conduct a usability test on an existing website"
                    }
                  ]
                }
              ]
            },
            {
              "name": "3.3 Accessibility & Inclusivity",
              "children": [
                {
                  "name": "3.3.1 WCAG Guidelines"
                },
                {
                  "name": "3.3.2 Designing for Diverse Users"
                },
                {
                  "name": "3.3.3 Assistive Technology Considerations"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specialization",
          "children": [
            {
              "name": "4.1 Motion Design & Animation",
              "children": [
                {
                  "name": "4.1.1 Principles of Animation"
                },
                {
                  "name": "4.1.2 After Effects/Principle Basics"
                },
                {
                  "name": "4.1.3 Microinteraction Design"
                }
              ]
            },
            {
              "name": "4.2 UX Writing & Content Strategy",
              "children": [
                {
                  "name": "4.2.1 Clear and Concise Language"
                },
                {
                  "name": "4.2.2 Voice & Tone"
                },
                {
                  "name": "4.2.3 Content Audit & Optimization"
                }
              ]
            },
            {
              "name": "4.3  Specialized Areas (e.g., Mobile UX, AR/VR UX)",
              "children": [
                {
                  "name": "4.3.1 Mobile Design Principles"
                },
                {
                  "name": "4.3.2 AR/VR Interaction Design"
                },
                {
                  "name": "4.3.3  Choosing a Specialization"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio & Job Search",
          "children": [
            {
              "name": "5.1 Building a Strong Portfolio",
              "children": [
                {
                  "name": "5.1.1 Case Studies"
                },
                {
                  "name": "5.1.2 Showcasing Your Process"
                },
                {
                  "name": "5.1.3 Online Portfolio Platforms"
                }
              ]
            },
            {
              "name": "5.2 Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1 Networking"
                },
                {
                  "name": "5.2.2 Resume & Cover Letter Writing"
                },
                {
                  "name": "5.2.3 Interview Preparation"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Database Administrator",
    "output": {
      "name": "Database Administrator",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Relational Database Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Model (Entities, Attributes, Relationships)"
                },
                {
                  "name": "1.1.2 ACID Properties"
                },
                {
                  "name": "1.1.3 Normalization (1NF, 2NF, 3NF)"
                }
              ]
            },
            {
              "name": "1.2 SQL Fundamentals",
              "children": [
                {
                  "name": "1.2.1 DDL (CREATE, ALTER, DROP)"
                },
                {
                  "name": "1.2.2 DML (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "1.2.3 Data types and constraints"
                },
                {
                  "name": "1.2.4 Project: Build a simple database schema and populate it with data"
                }
              ]
            },
            {
              "name": "1.3 Database Design",
              "children": [
                {
                  "name": "1.3.1 ER Diagrams"
                },
                {
                  "name": "1.3.2 Data Modeling Techniques"
                },
                {
                  "name": "1.3.3 Project: Design a database for an e-commerce application"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Database Systems",
          "children": [
            {
              "name": "2.1 MySQL",
              "children": [
                {
                  "name": "2.1.1 Installation and Configuration"
                },
                {
                  "name": "2.1.2 User Management and Security"
                },
                {
                  "name": "2.1.3 Advanced SQL features (joins, subqueries, aggregate functions)"
                },
                {
                  "name": "2.1.4 Project: Implement a relational database using MySQL"
                }
              ]
            },
            {
              "name": "2.2 PostgreSQL",
              "children": [
                {
                  "name": "2.2.1 Installation and Configuration"
                },
                {
                  "name": "2.2.2 Advanced features (JSON support, extensions)"
                },
                {
                  "name": "2.2.3 Stored Procedures and Functions"
                },
                {
                  "name": "2.2.4 Project: Migrate a MySQL database to PostgreSQL"
                }
              ]
            },
            {
              "name": "2.3 Introduction to NoSQL Databases (MongoDB)",
              "children": [
                {
                  "name": "2.3.1 Basic concepts and architecture"
                },
                {
                  "name": "2.3.2 Data modeling with MongoDB"
                },
                {
                  "name": "2.3.3 CRUD operations"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Database Administration",
          "children": [
            {
              "name": "3.1 Backup and Recovery",
              "children": [
                {
                  "name": "3.1.1 Different backup strategies (full, incremental, differential)"
                },
                {
                  "name": "3.1.2 Point-in-time recovery"
                },
                {
                  "name": "3.1.3 Disaster recovery planning"
                }
              ]
            },
            {
              "name": "3.2 Performance Tuning and Optimization",
              "children": [
                {
                  "name": "3.2.1 Query optimization techniques"
                },
                {
                  "name": "3.2.2 Indexing strategies"
                },
                {
                  "name": "3.2.3 Monitoring database performance"
                }
              ]
            },
            {
              "name": "3.3 Security",
              "children": [
                {
                  "name": "3.3.1 User authentication and authorization"
                },
                {
                  "name": "3.3.2 Data encryption"
                },
                {
                  "name": "3.3.3 Vulnerability assessment and penetration testing"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Cloud Databases",
          "children": [
            {
              "name": "4.1 AWS RDS",
              "children": [
                {
                  "name": "4.1.1 Instance types and configurations"
                },
                {
                  "name": "4.1.2 Backup and restoration in AWS"
                },
                {
                  "name": "4.1.3 Monitoring and scaling"
                }
              ]
            },
            {
              "name": "4.2 Azure SQL Database",
              "children": [
                {
                  "name": "4.2.1 Deployment and management"
                },
                {
                  "name": "4.2.2 High availability and disaster recovery"
                },
                {
                  "name": "4.2.3 Integration with Azure services"
                }
              ]
            },
            {
              "name": "4.3 Google Cloud SQL",
              "children": [
                {
                  "name": "4.3.1 Instance configuration and management"
                },
                {
                  "name": "4.3.2 Scaling and performance optimization"
                },
                {
                  "name": "4.3.3 Backup and recovery strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Database Replication",
              "children": [
                {
                  "name": "5.1.1 Different replication strategies"
                },
                {
                  "name": "5.1.2 High availability and failover mechanisms"
                }
              ]
            },
            {
              "name": "5.2 Transaction Management",
              "children": [
                {
                  "name": "5.2.1 Concurrency control"
                }
              ]
            },
            {
              "name": "5.3 Data Warehousing and Business Intelligence",
              "children": [
                {
                  "name": "5.3.1 ETL processes"
                },
                {
                  "name": "5.3.2 Data visualization tools"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Database Administrator",
    "output": {
      "name": "I want to become a Database Administrator",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Database Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Databases (RDBMS): Introduction to tables, rows, columns, keys"
                },
                {
                  "name": "1.1.2 SQL Fundamentals: SELECT, INSERT, UPDATE, DELETE statements"
                },
                {
                  "name": "1.1.3 Database Normalization: Understanding 1NF, 2NF, 3NF"
                }
              ]
            },
            {
              "name": "1.2 Data Modeling",
              "children": [
                {
                  "name": "1.2.1 Entity-Relationship Diagrams (ERD): Creating and interpreting ERDs"
                },
                {
                  "name": "1.2.2 Data types and constraints: Defining appropriate data types and constraints"
                },
                {
                  "name": "1.2.3 Practical Exercise: Design an ERD for a simple e-commerce database"
                }
              ]
            },
            {
              "name": "1.3 Operating Systems Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Linux Basics: Navigation, file management, user management"
                },
                {
                  "name": "1.3.2 Networking Concepts: TCP/IP, DNS, IP addressing"
                },
                {
                  "name": "1.3.3 System administration tasks: Basic troubleshooting and server management"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Database Systems",
          "children": [
            {
              "name": "2.1 Choosing a Database System",
              "children": [
                {
                  "name": "2.1.1 Popular database systems: MySQL, PostgreSQL, SQL Server, Oracle"
                },
                {
                  "name": "2.1.2 Comparing database systems: Features, performance, licensing"
                }
              ]
            },
            {
              "name": "2.2 Advanced SQL",
              "children": [
                {
                  "name": "2.2.1 Joins: INNER, OUTER, LEFT, RIGHT joins"
                },
                {
                  "name": "2.2.2 Subqueries and Common Table Expressions (CTEs)"
                },
                {
                  "name": "2.2.3 Aggregate functions: COUNT, SUM, AVG, MIN, MAX"
                }
              ]
            },
            {
              "name": "2.3 Database Administration Tools",
              "children": [
                {
                  "name": "2.3.1 pgAdmin (PostgreSQL), phpMyAdmin (MySQL), SQL Server Management Studio (SSMS), Oracle SQL Developer"
                },
                {
                  "name": "2.3.2 Command-line tools:  psql, mysql"
                },
                {
                  "name": "2.3.3 Practical Exercise: Use a GUI tool to manage a database, create users and grant permissions."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Database Performance and Tuning",
          "children": [
            {
              "name": "3.1 Query Optimization",
              "children": [
                {
                  "name": "3.1.1 Query execution plans: Understanding how the database executes queries"
                },
                {
                  "name": "3.1.2 Indexing techniques: Creating and managing indexes"
                },
                {
                  "name": "3.1.3 Query profiling and analysis"
                }
              ]
            },
            {
              "name": "3.2 Database Monitoring and Troubleshooting",
              "children": [
                {
                  "name": "3.2.1 Performance metrics: CPU, memory, I/O"
                },
                {
                  "name": "3.2.2 Log analysis: Identifying and resolving database errors"
                },
                {
                  "name": "3.2.3 Practical Exercise: Monitor database performance and identify bottlenecks"
                }
              ]
            },
            {
              "name": "3.3 Backup and Recovery",
              "children": [
                {
                  "name": "3.3.1 Backup strategies: Full, incremental, differential backups"
                },
                {
                  "name": "3.3.2 Recovery procedures: Restoring a database from backups"
                },
                {
                  "name": "3.3.3 High availability and disaster recovery"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Security and Administration",
          "children": [
            {
              "name": "4.1 Database Security",
              "children": [
                {
                  "name": "4.1.1 Access control: Users, roles, permissions"
                },
                {
                  "name": "4.1.2 Encryption: Protecting data at rest and in transit"
                },
                {
                  "name": "4.1.3 Auditing: Tracking database activity"
                }
              ]
            },
            {
              "name": "4.2 Scripting and Automation",
              "children": [
                {
                  "name": "4.2.1 Shell scripting (bash, zsh): Automating database tasks"
                },
                {
                  "name": "4.2.2 Python scripting: Interacting with databases using Python libraries"
                },
                {
                  "name": "4.2.3 Practical Exercise: Automate a database backup process using a script"
                }
              ]
            },
            {
              "name": "4.3 Cloud Databases",
              "children": [
                {
                  "name": "4.3.1 Cloud providers: AWS RDS, Azure SQL Database, Google Cloud SQL"
                },
                {
                  "name": "4.3.2 Cloud database services: Managed instances, scaling, high availability"
                },
                {
                  "name": "4.3.3 Practical Exercise: Set up and manage a database instance on a cloud platform"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 NoSQL Databases",
              "children": [
                {
                  "name": "5.1.1 Introduction to NoSQL databases: MongoDB, Cassandra, Redis"
                },
                {
                  "name": "5.1.2 CAP theorem and data consistency models"
                }
              ]
            },
            {
              "name": "5.2 Data Warehousing and Business Intelligence",
              "children": [
                {
                  "name": "5.2.1 Data warehousing concepts: Data marts, ETL processes"
                },
                {
                  "name": "5.2.2 Business intelligence tools: Tableau, Power BI"
                }
              ]
            },
            {
              "name": "5.3 Database Replication and Clustering",
              "children": [
                {
                  "name": "5.3.1 Replication techniques: Synchronous, asynchronous replication"
                },
                {
                  "name": "5.3.2 Database clustering: High availability and scalability"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a UI/UX Designer",
    "output": {
      "name": "I want to become a UI/UX Designer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Design Principles",
              "children": [
                {
                  "name": "1.1.1 Gestalt Principles"
                },
                {
                  "name": "1.1.2 Design Systems"
                },
                {
                  "name": "1.1.3 Typography & Color Theory"
                }
              ]
            },
            {
              "name": "1.2 User Research Basics",
              "children": [
                {
                  "name": "1.2.1 User Interviews"
                },
                {
                  "name": "1.2.2 Surveys & Questionnaires"
                },
                {
                  "name": "1.2.3 Usability Testing (basic methods)"
                }
              ]
            },
            {
              "name": "1.3 Introduction to UX Tools",
              "children": [
                {
                  "name": "1.3.1 Figma (basics): Navigation, layers, prototyping"
                },
                {
                  "name": "1.3.2 Adobe XD (basics): Navigation, prototyping, assets"
                },
                {
                  "name": "1.3.3 Miro/Mural (basic collaboration & whiteboarding)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core UX Skills",
          "children": [
            {
              "name": "2.1 Information Architecture",
              "children": [
                {
                  "name": "2.1.1 Card Sorting"
                },
                {
                  "name": "2.1.2 Sitemaps & Navigation Design"
                },
                {
                  "name": "2.1.3 User Flows"
                }
              ]
            },
            {
              "name": "2.2 Interaction Design",
              "children": [
                {
                  "name": "2.2.1 Wireframing (low-fidelity & high-fidelity)"
                },
                {
                  "name": "2.2.2 Prototyping (interactive prototypes)"
                },
                {
                  "name": "2.2.3 User testing prototypes & iterations (Project: Design a simple mobile app prototype)"
                }
              ]
            },
            {
              "name": "2.3 User Research Methods",
              "children": [
                {
                  "name": "2.3.1 Heuristic Evaluation"
                },
                {
                  "name": "2.3.2 A/B Testing"
                },
                {
                  "name": "2.3.3 Eye-tracking studies (introductory level)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. UI Design Skills",
          "children": [
            {
              "name": "3.1 Visual Design Principles",
              "children": [
                {
                  "name": "3.1.1 Advanced Typography"
                },
                {
                  "name": "3.1.2 Layout & Composition"
                },
                {
                  "name": "3.1.3 Visual Hierarchy"
                }
              ]
            },
            {
              "name": "3.2 UI Design Tools Proficiency",
              "children": [
                {
                  "name": "3.2.1 Figma/XD: Advanced features (components, styles, auto layout)"
                },
                {
                  "name": "3.2.2 Adobe Photoshop (basic image editing)"
                },
                {
                  "name": "3.2.3 Illustrator (basic vector graphics)"
                }
              ]
            },
            {
              "name": "3.3 UI Design for Different Platforms",
              "children": [
                {
                  "name": "3.3.1 Responsive Web Design"
                },
                {
                  "name": "3.3.2 Mobile App Design (iOS & Android)"
                },
                {
                  "name": "3.3.3 Design Systems Implementation (Project: Create a design system for a fictional app)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Portfolio & Job Search",
          "children": [
            {
              "name": "4.1 Building a Strong Portfolio",
              "children": [
                {
                  "name": "4.1.1 Case studies showcasing design process"
                },
                {
                  "name": "4.1.2 Personal projects to demonstrate skills"
                },
                {
                  "name": "4.1.3 Presenting your work effectively"
                }
              ]
            },
            {
              "name": "4.2 Networking & Job Hunting",
              "children": [
                {
                  "name": "4.2.1 Online platforms (Behance, Dribbble)"
                },
                {
                  "name": "4.2.2 LinkedIn profile optimization"
                },
                {
                  "name": "4.2.3 Job application strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 UX Writing",
              "children": [
                {
                  "name": "5.1.1 Principles of effective UX writing"
                },
                {
                  "name": "5.1.2 Microcopy and button labeling"
                },
                {
                  "name": "5.1.3 Voice and tone guidelines"
                }
              ]
            },
            {
              "name": "5.2 Accessibility",
              "children": [
                {
                  "name": "5.2.1 WCAG guidelines"
                },
                {
                  "name": "5.2.2 Inclusive design principles"
                },
                {
                  "name": "5.2.3 Assistive technology considerations"
                }
              ]
            },
            {
              "name": "5.3 Motion Design & Animation",
              "children": [
                {
                  "name": "5.3.1 Principles of animation"
                },
                {
                  "name": "5.3.2 Micro-interactions"
                },
                {
                  "name": "5.3.3 Tools like After Effects (introductory level)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a Cloud Security Engineer",
    "output": {
      "name": "i want to become a Cloud Security Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Security Principles",
              "children": [
                {
                  "name": "1.1.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.1.2 Risk Management & Assessment"
                },
                {
                  "name": "1.1.3 Security Frameworks (NIST, ISO 27001, CIS Benchmarks)"
                }
              ]
            },
            {
              "name": "1.2 Networking Fundamentals",
              "children": [
                {
                  "name": "1.2.1 TCP/IP Model"
                },
                {
                  "name": "1.2.2 Subnetting and IP Addressing"
                },
                {
                  "name": "1.2.3 Firewalls and Network Segmentation"
                }
              ]
            },
            {
              "name": "1.3 Linux Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Basic Commands (ls, cd, grep, etc.)"
                },
                {
                  "name": "1.3.2 User and Permission Management"
                },
                {
                  "name": "1.3.3 Shell Scripting (basic scripting for automation)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Cloud Computing Fundamentals",
          "children": [
            {
              "name": "2.1 Cloud Providers (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "2.1.1 Account Management and IAM"
                },
                {
                  "name": "2.1.2 Core Services (Compute, Storage, Networking)"
                },
                {
                  "name": "2.1.3 Hands-on: Create a basic virtual machine and configure security groups"
                }
              ]
            },
            {
              "name": "2.2 Cloud Deployment Models (IaaS, PaaS, SaaS)",
              "children": [
                {
                  "name": "2.2.1 Understanding the differences and security implications"
                },
                {
                  "name": "2.2.2 Choosing the right model for specific applications"
                },
                {
                  "name": "2.2.3 Hands-on: Deploy a simple application on each model"
                }
              ]
            },
            {
              "name": "2.3 Containerization and Orchestration (Docker, Kubernetes)",
              "children": [
                {
                  "name": "2.3.1 Container security best practices"
                },
                {
                  "name": "2.3.2 Kubernetes security concepts (RBAC, network policies)"
                },
                {
                  "name": "2.3.3 Hands-on: Secure a Docker container and deploy it on Kubernetes"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Security Services and Tools",
          "children": [
            {
              "name": "3.1 Cloud Security Posture Management (CSPM)",
              "children": [
                {
                  "name": "3.1.1 Understanding CSPM tools and their capabilities"
                },
                {
                  "name": "3.1.2 Implementing and configuring CSPM tools (e.g., AWS Security Hub, Azure Security Center)"
                },
                {
                  "name": "3.1.3 Hands-on: Use a CSPM tool to assess the security posture of a cloud environment"
                }
              ]
            },
            {
              "name": "3.2 Cloud Security Information and Event Management (SIEM)",
              "children": [
                {
                  "name": "3.2.1 Understanding SIEM principles and functionalities"
                },
                {
                  "name": "3.2.2 Integrating cloud logs with SIEM solutions (e.g., Splunk, ELK stack)"
                },
                {
                  "name": "3.2.3 Hands-on: Configure log forwarding and create basic alerts in a SIEM"
                }
              ]
            },
            {
              "name": "3.3 Vulnerability Management",
              "children": [
                {
                  "name": "3.3.1 Identifying and mitigating vulnerabilities in cloud environments"
                },
                {
                  "name": "3.3.2 Using vulnerability scanning tools (e.g., Nessus, Qualys)"
                },
                {
                  "name": "3.3.3 Hands-on: Perform a vulnerability scan and remediate identified issues"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Cloud Threat Modeling",
              "children": [
                {
                  "name": "4.1.1 Identifying potential threats and vulnerabilities"
                },
                {
                  "name": "4.1.2 Developing mitigation strategies"
                },
                {
                  "name": "4.1.3 Hands-on: Conduct a threat modeling exercise for a cloud application"
                }
              ]
            },
            {
              "name": "4.2 Security Automation and Orchestration",
              "children": [
                {
                  "name": "4.2.1 Using tools like Terraform and Ansible for secure infrastructure as code"
                },
                {
                  "name": "4.2.2 Implementing security automation using scripting languages (Python, Go)"
                },
                {
                  "name": "4.2.3 Hands-on: Automate the deployment and configuration of secure cloud resources"
                }
              ]
            },
            {
              "name": "4.3 Incident Response in the Cloud",
              "children": [
                {
                  "name": "4.3.1 Incident handling process and best practices"
                },
                {
                  "name": "4.3.2 Using cloud-native tools for incident response"
                },
                {
                  "name": "4.3.3 Hands-on: Simulate an incident and practice response procedures"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Certifications & Portfolio Building",
          "children": [
            {
              "name": "5.1 Relevant Certifications (e.g., AWS Certified Security - Specialty, Azure Security Engineer Associate, Google Cloud Certified Professional Cloud Security Engineer)",
              "children": [
                {
                  "name": "5.1.1 Choosing relevant certifications based on career goals"
                },
                {
                  "name": "5.1.2 Preparing for and passing chosen certifications"
                }
              ]
            },
            {
              "name": "5.2 Building a Portfolio",
              "children": [
                {
                  "name": "5.2.1 Contributing to open source projects"
                },
                {
                  "name": "5.2.2 Creating personal projects showcasing cloud security skills"
                },
                {
                  "name": "5.2.3 Participating in Capture The Flag (CTF) competitions"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Cloud Security Engineer",
    "output": {
      "name": "Cloud Security Engineer",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP, Subnetting, Routing"
                },
                {
                  "name": "1.1.2 Firewalls, VPNs, Load Balancers"
                },
                {
                  "name": "1.1.3 Network Security Protocols (TLS/SSL, IPSec)"
                }
              ]
            },
            {
              "name": "1.2 Security Principles",
              "children": [
                {
                  "name": "1.2.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.2.2 Risk Management, Threat Modeling"
                },
                {
                  "name": "1.2.3 Security Frameworks (NIST, CIS, ISO 27001)"
                }
              ]
            },
            {
              "name": "1.3 Operating Systems & Linux",
              "children": [
                {
                  "name": "1.3.1 Linux command line basics"
                },
                {
                  "name": "1.3.2 User and permission management"
                },
                {
                  "name": "1.3.3 System hardening techniques (Project: Harden a Linux VM)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Cloud Provider Specifics (AWS, Azure, GCP)",
          "children": [
            {
              "name": "2.1 AWS Security Services",
              "children": [
                {
                  "name": "2.1.1 IAM, Access Control, Policies"
                },
                {
                  "name": "2.1.2 Security Hub, GuardDuty, Inspector"
                },
                {
                  "name": "2.1.3 VPC, Subnets, Security Groups (Project: Design a secure AWS VPC)"
                }
              ]
            },
            {
              "name": "2.2 Azure Security Services",
              "children": [
                {
                  "name": "2.2.1 Azure Active Directory, RBAC"
                },
                {
                  "name": "2.2.2 Azure Security Center, Azure Sentinel"
                },
                {
                  "name": "2.2.3 Virtual Networks, NSGs (Network Security Groups) (Project: Secure Azure VM deployment)"
                }
              ]
            },
            {
              "name": "2.3 GCP Security Services",
              "children": [
                {
                  "name": "2.3.1 IAM, Roles, Permissions"
                },
                {
                  "name": "2.3.2 Security Health Analytics, Cloud Security Scanner"
                },
                {
                  "name": "2.3.3 Virtual Private Cloud (VPC) Networking (Project: Implement a secure GCP project)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Security Automation & DevOps",
          "children": [
            {
              "name": "3.1 Infrastructure as Code (IaC)",
              "children": [
                {
                  "name": "3.1.1 Terraform, CloudFormation, ARM Templates"
                },
                {
                  "name": "3.1.2 Secure IaC practices"
                },
                {
                  "name": "3.1.3 Version control for IaC (Git) (Project: Automate infrastructure provisioning using IaC)"
                }
              ]
            },
            {
              "name": "3.2 CI/CD and Security",
              "children": [
                {
                  "name": "3.2.1 Integrating security into CI/CD pipelines"
                },
                {
                  "name": "3.2.2 Static and dynamic code analysis"
                },
                {
                  "name": "3.2.3 Security scanning tools (Project: Integrate security scans in a CI/CD pipeline)"
                }
              ]
            },
            {
              "name": "3.3 Security Orchestration, Automation, and Response (SOAR)",
              "children": [
                {
                  "name": "3.3.1 Understanding SOAR principles"
                },
                {
                  "name": "3.3.2 Popular SOAR tools"
                },
                {
                  "name": "3.3.3 Implementing automated security responses (Project: Create simple SOAR workflow)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specializations",
          "children": [
            {
              "name": "4.1 Cloud Security Posture Management (CSPM)",
              "children": [
                {
                  "name": "4.1.1 Understanding CSPM tools and functionalities"
                },
                {
                  "name": "4.1.2 Implementing and managing CSPM solutions"
                },
                {
                  "name": "4.1.3 Analyzing CSPM reports and recommendations"
                }
              ]
            },
            {
              "name": "4.2 Cloud Workload Protection Platforms (CWPP)",
              "children": [
                {
                  "name": "4.2.1 Understanding CWPP functionalities"
                },
                {
                  "name": "4.2.2 Deploying and managing CWPP solutions"
                },
                {
                  "name": "4.2.3 Integrating CWPP with other security tools"
                }
              ]
            },
            {
              "name": "4.3 Security Information and Event Management (SIEM)",
              "children": [
                {
                  "name": "4.3.1 SIEM fundamentals and architecture"
                },
                {
                  "name": "4.3.2 Log management and analysis"
                },
                {
                  "name": "4.3.3 Security monitoring and incident response using SIEM (Project: Configure and monitor a SIEM solution)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Certifications & Continuous Learning",
          "children": [
            {
              "name": "5.1 Relevant Certifications",
              "children": [
                {
                  "name": "5.1.1 AWS Certified Security - Specialty"
                },
                {
                  "name": "5.1.2 Azure Security Engineer Associate"
                },
                {
                  "name": "5.1.3 Google Cloud Certified Professional Cloud Security Engineer"
                },
                {
                  "name": "5.1.4 CompTIA Security+"
                }
              ]
            },
            {
              "name": "5.2 Continuous Learning Resources",
              "children": [
                {
                  "name": "5.2.1 Online courses (Coursera, Udemy, A Cloud Guru)"
                },
                {
                  "name": "5.2.2 Industry blogs and publications"
                },
                {
                  "name": "5.2.3 Conferences and workshops"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn Cloud Security ",
    "output": {
      "name": "i want to learn Cloud Security",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Security Concepts",
              "children": [
                {
                  "name": "1.1.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.1.2 Risk Management and Threat Modeling"
                },
                {
                  "name": "1.1.3 Security Principles (Least Privilege, Defense in Depth)"
                }
              ]
            },
            {
              "name": "1.2 Networking Fundamentals",
              "children": [
                {
                  "name": "1.2.1 TCP/IP Model and Networking Protocols"
                },
                {
                  "name": "1.2.2 Virtual Private Networks (VPNs) and Tunneling"
                },
                {
                  "name": "1.2.3 Firewalls and Network Segmentation"
                }
              ]
            },
            {
              "name": "1.3 Cloud Computing Fundamentals",
              "children": [
                {
                  "name": "1.3.1 IaaS, PaaS, SaaS Models"
                },
                {
                  "name": "1.3.2 Virtualization and Containerization"
                },
                {
                  "name": "1.3.3 Cloud Deployment Models (Public, Private, Hybrid)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Cloud Security Services",
          "children": [
            {
              "name": "2.1 Identity and Access Management (IAM)",
              "children": [
                {
                  "name": "2.1.1 Access Control Lists (ACLs) and Policies"
                },
                {
                  "name": "2.1.2 Multi-Factor Authentication (MFA)"
                },
                {
                  "name": "2.1.3 Role-Based Access Control (RBAC)"
                },
                {
                  "name": "2.1.4  Project: Setting up IAM roles and policies in AWS/Azure/GCP"
                }
              ]
            },
            {
              "name": "2.2 Data Security and Encryption",
              "children": [
                {
                  "name": "2.2.1 Data Loss Prevention (DLP) Techniques"
                },
                {
                  "name": "2.2.2 Encryption at Rest and in Transit"
                },
                {
                  "name": "2.2.3 Key Management Services (KMS)"
                }
              ]
            },
            {
              "name": "2.3 Security Information and Event Management (SIEM)",
              "children": [
                {
                  "name": "2.3.1 Log Management and Analysis"
                },
                {
                  "name": "2.3.2 Security Monitoring and Alerting"
                },
                {
                  "name": "2.3.3 Incident Response"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Specific Cloud Provider Security",
          "children": [
            {
              "name": "3.1 AWS Security",
              "children": [
                {
                  "name": "3.1.1 AWS IAM Best Practices"
                },
                {
                  "name": "3.1.2 Security Hub and GuardDuty"
                },
                {
                  "name": "3.1.3 Project: Secure an AWS EC2 Instance"
                }
              ]
            },
            {
              "name": "3.2 Azure Security",
              "children": [
                {
                  "name": "3.2.1 Azure Active Directory (Azure AD)"
                },
                {
                  "name": "3.2.2 Azure Security Center"
                },
                {
                  "name": "3.2.3 Project: Implement Azure RBAC for resource access"
                }
              ]
            },
            {
              "name": "3.3 GCP Security",
              "children": [
                {
                  "name": "3.3.1 Identity and Access Management (IAM) in GCP"
                },
                {
                  "name": "3.3.2 Cloud Security Scanner"
                },
                {
                  "name": "3.3.3 Project: Secure a Google Cloud VM instance"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Secure DevOps",
              "children": [
                {
                  "name": "4.1.1 Infrastructure as Code (IaC) Security"
                },
                {
                  "name": "4.1.2 CI/CD Security Pipelines"
                },
                {
                  "name": "4.1.3 Security Automation"
                }
              ]
            },
            {
              "name": "4.2 Cloud Forensics",
              "children": [
                {
                  "name": "4.2.1 Cloud-based incident response"
                },
                {
                  "name": "4.2.2 Log analysis and investigation"
                },
                {
                  "name": "4.2.3 Digital forensics techniques in the cloud"
                }
              ]
            },
            {
              "name": "4.3 Compliance and Regulations",
              "children": [
                {
                  "name": "4.3.1 GDPR, HIPAA, PCI DSS"
                },
                {
                  "name": "4.3.2 Auditing and Compliance Reporting"
                },
                {
                  "name": "4.3.3 Best practices for compliance"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Hands-on Experience",
          "children": [
            {
              "name": "5.1 Capture the Flag (CTF) Challenges",
              "children": [
                {
                  "name": "5.1.1 Practice cloud security skills in a gamified environment"
                },
                {
                  "name": "5.1.2 Resources: TryHackMe, HackTheBox"
                }
              ]
            },
            {
              "name": "5.2  Build a Secure Cloud Infrastructure",
              "children": [
                {
                  "name": "5.2.1 Design and implement a secure cloud environment"
                },
                {
                  "name": "5.2.2 Integrate security best practices throughout the process"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Azure Cloud Engineer",
    "output": {
      "name": "Azure Cloud Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Azure Concepts",
              "children": [
                {
                  "name": "1.1.1 Azure Global Infrastructure"
                },
                {
                  "name": "1.1.2 Azure Regions and Availability Zones"
                },
                {
                  "name": "1.1.3 Azure Resource Manager (ARM) and Templates"
                }
              ]
            },
            {
              "name": "1.2 Azure Accounts and Management",
              "children": [
                {
                  "name": "1.2.1 Azure Subscriptions and Resource Groups"
                },
                {
                  "name": "1.2.2 Azure Portal, CLI, and PowerShell"
                },
                {
                  "name": "1.2.3 Azure Active Directory (Azure AD) and RBAC"
                }
              ]
            },
            {
              "name": "1.3 Compute Services",
              "children": [
                {
                  "name": "1.3.1 Virtual Machines (VMs): Basics and Deployment"
                },
                {
                  "name": "1.3.2 Virtual Machine Scale Sets"
                },
                {
                  "name": "1.3.3 Azure App Service"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Networking",
          "children": [
            {
              "name": "2.1 Virtual Networks and Subnets",
              "children": [
                {
                  "name": "2.1.1 Virtual Network Peering"
                },
                {
                  "name": "2.1.2 Subnet Routing and IP Addressing"
                },
                {
                  "name": "2.1.3 Project: Create a Virtual Network with Subnets and Peering"
                }
              ]
            },
            {
              "name": "2.2 Network Security",
              "children": [
                {
                  "name": "2.2.1 Network Security Groups (NSGs)"
                },
                {
                  "name": "2.2.2 Azure Firewall"
                },
                {
                  "name": "2.2.3 Virtual Network Load Balancers"
                }
              ]
            },
            {
              "name": "2.3 Advanced Networking",
              "children": [
                {
                  "name": "2.3.1 Azure VPN Gateway"
                },
                {
                  "name": "2.3.2 Azure ExpressRoute"
                },
                {
                  "name": "2.3.3 Application Gateway"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Storage and Databases",
          "children": [
            {
              "name": "3.1 Storage Accounts",
              "children": [
                {
                  "name": "3.1.1 Blob Storage"
                },
                {
                  "name": "3.1.2 Queue Storage"
                },
                {
                  "name": "3.1.3 Table Storage"
                }
              ]
            },
            {
              "name": "3.2 Azure Databases",
              "children": [
                {
                  "name": "3.2.1 Azure SQL Database"
                },
                {
                  "name": "3.2.2 Cosmos DB"
                },
                {
                  "name": "3.2.3 Project: Deploy a web app with Azure SQL Database"
                }
              ]
            },
            {
              "name": "3.3 Data Backup and Recovery",
              "children": [
                {
                  "name": "3.3.1 Azure Backup"
                },
                {
                  "name": "3.3.2 Azure Site Recovery"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Monitoring and Management",
          "children": [
            {
              "name": "4.1 Azure Monitor",
              "children": [
                {
                  "name": "4.1.1 Logs and Metrics"
                },
                {
                  "name": "4.1.2 Alerts and Notifications"
                }
              ]
            },
            {
              "name": "4.2 Azure Automation",
              "children": [
                {
                  "name": "4.2.1 Runbooks and Automation Accounts"
                },
                {
                  "name": "4.2.2 Desired State Configuration (DSC)"
                }
              ]
            },
            {
              "name": "4.3 Cost Management",
              "children": [
                {
                  "name": "4.3.1 Azure Cost Management + Billing"
                },
                {
                  "name": "4.3.2 Cost Optimization Strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 DevOps with Azure",
              "children": [
                {
                  "name": "5.1.1 Azure DevOps"
                },
                {
                  "name": "5.1.2 CI/CD Pipelines"
                },
                {
                  "name": "5.1.3 Infrastructure as Code (IaC) with ARM Templates or Terraform"
                }
              ]
            },
            {
              "name": "5.2 Security Best Practices",
              "children": [
                {
                  "name": "5.2.1 Azure Security Center"
                },
                {
                  "name": "5.2.2 Key Vault"
                },
                {
                  "name": "5.2.3 Implementing Security Policies"
                }
              ]
            },
            {
              "name": "5.3 Serverless Computing",
              "children": [
                {
                  "name": "5.3.1 Azure Functions"
                },
                {
                  "name": "5.3.2 Azure Logic Apps"
                },
                {
                  "name": "5.3.3 Azure Kubernetes Service (AKS)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Azure Cloud Engineer roadmap",
    "output": {
      "name": "Azure Cloud Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Azure Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Azure Core Services: Compute, Storage, Networking"
                },
                {
                  "name": "1.1.2 Azure Pricing and Cost Management"
                },
                {
                  "name": "1.1.3 Azure Global Infrastructure and Regions"
                }
              ]
            },
            {
              "name": "1.2 Azure Portal and CLI",
              "children": [
                {
                  "name": "1.2.1 Navigating the Azure Portal"
                },
                {
                  "name": "1.2.2 Using Azure CLI for common tasks (deploying VMs, creating resource groups)"
                },
                {
                  "name": "1.2.3 Azure PowerShell Basics"
                }
              ]
            },
            {
              "name": "1.3 Cloud Concepts",
              "children": [
                {
                  "name": "1.3.1 IaaS, PaaS, SaaS"
                },
                {
                  "name": "1.3.2 Virtualization and Containers"
                },
                {
                  "name": "1.3.3 Networking fundamentals (subnets, routing, firewalls)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Compute Services",
          "children": [
            {
              "name": "2.1 Virtual Machines (VMs)",
              "children": [
                {
                  "name": "2.1.1 Creating and managing VMs"
                },
                {
                  "name": "2.1.2 VM scaling and high availability"
                },
                {
                  "name": "2.1.3 Project: Deploy a web application on a VM with load balancing"
                }
              ]
            },
            {
              "name": "2.2 Azure Kubernetes Service (AKS)",
              "children": [
                {
                  "name": "2.2.1 Containerization basics (Docker)"
                },
                {
                  "name": "2.2.2 Deploying applications to AKS"
                },
                {
                  "name": "2.2.3 Managing AKS clusters"
                }
              ]
            },
            {
              "name": "2.3 Azure App Service",
              "children": [
                {
                  "name": "2.3.1 Deploying web apps and APIs"
                },
                {
                  "name": "2.3.2 Scaling and managing App Service plans"
                },
                {
                  "name": "2.3.3 Project: Deploy a simple web app to Azure App Service"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Networking and Security",
          "children": [
            {
              "name": "3.1 Virtual Networks (VNets)",
              "children": [
                {
                  "name": "3.1.1 Creating and configuring VNets"
                },
                {
                  "name": "3.1.2 Subnets, routing tables, and network security groups (NSGs)"
                },
                {
                  "name": "3.1.3 Project: Configure a VNet with multiple subnets and NSGs"
                }
              ]
            },
            {
              "name": "3.2 Azure Load Balancer",
              "children": [
                {
                  "name": "3.2.1 Implementing load balancing for VMs and App Services"
                },
                {
                  "name": "3.2.2 Configuring health probes"
                },
                {
                  "name": "3.2.3 Project: Integrate load balancer with existing application deployment"
                }
              ]
            },
            {
              "name": "3.3 Azure Security Center",
              "children": [
                {
                  "name": "3.3.1 Understanding Azure Security best practices"
                },
                {
                  "name": "3.3.2 Implementing security policies and monitoring"
                },
                {
                  "name": "3.3.3 Vulnerability assessment and management"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Storage and Databases",
          "children": [
            {
              "name": "4.1 Azure Blob Storage",
              "children": [
                {
                  "name": "4.1.1 Understanding different storage accounts"
                },
                {
                  "name": "4.1.2 Uploading and downloading blobs"
                },
                {
                  "name": "4.1.3 Project: Build a simple file upload application using Blob Storage"
                }
              ]
            },
            {
              "name": "4.2 Azure Cosmos DB",
              "children": [
                {
                  "name": "4.2.1 NoSQL database concepts"
                },
                {
                  "name": "4.2.2 Creating and managing Cosmos DB accounts"
                },
                {
                  "name": "4.2.3 Project: Create and query a Cosmos DB collection"
                }
              ]
            },
            {
              "name": "4.3 Azure SQL Database",
              "children": [
                {
                  "name": "4.3.1 Relational database concepts"
                },
                {
                  "name": "4.3.2 Creating and managing Azure SQL databases"
                },
                {
                  "name": "4.3.3 Project: Deploy and manage a database application using Azure SQL"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Monitoring and Automation",
          "children": [
            {
              "name": "5.1 Azure Monitor",
              "children": [
                {
                  "name": "5.1.1 Setting up monitoring for VMs and applications"
                },
                {
                  "name": "5.1.2 Creating alerts and dashboards"
                },
                {
                  "name": "5.1.3 Log Analytics and troubleshooting"
                }
              ]
            },
            {
              "name": "5.2 Azure Automation",
              "children": [
                {
                  "name": "5.2.1 Runbooks and automation accounts"
                },
                {
                  "name": "5.2.2 PowerShell and Azure CLI scripting"
                },
                {
                  "name": "5.2.3 Project: Automate VM creation and configuration using Azure Automation"
                }
              ]
            },
            {
              "name": "5.3 Azure DevOps",
              "children": [
                {
                  "name": "5.3.1 CI/CD pipelines"
                },
                {
                  "name": "5.3.2 Infrastructure as Code (IaC)"
                },
                {
                  "name": "5.3.3 Project: Implement CI/CD pipeline for an application"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become Azure Cloud Engineer ",
    "output": {
      "name": "How to Become an Azure Cloud Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Azure Concepts",
              "children": [
                {
                  "name": "1.1.1 Azure Resource Manager (ARM)"
                },
                {
                  "name": "1.1.2 Azure Subscription Management"
                },
                {
                  "name": "1.1.3 Azure Regions and Availability Zones"
                }
              ]
            },
            {
              "name": "1.2 Azure Compute Services",
              "children": [
                {
                  "name": "1.2.1 Virtual Machines (VMs): creation, configuration, management"
                },
                {
                  "name": "1.2.2 Azure App Service: deploying web apps"
                },
                {
                  "name": "1.2.3 Azure Container Instances (ACI) and Kubernetes Service (AKS) - Introduction"
                }
              ]
            },
            {
              "name": "1.3 Azure Storage Services",
              "children": [
                {
                  "name": "1.3.1 Blob Storage: storing unstructured data"
                },
                {
                  "name": "1.3.2 File Storage: managing file shares"
                },
                {
                  "name": "1.3.3 Queues and Service Bus: message queuing"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Networking and Security",
          "children": [
            {
              "name": "2.1 Virtual Networks (VNets)",
              "children": [
                {
                  "name": "2.1.1 Subnets and Routing"
                },
                {
                  "name": "2.1.2 Network Security Groups (NSGs)"
                },
                {
                  "name": "2.1.3 VPN Gateways and ExpressRoute"
                }
              ]
            },
            {
              "name": "2.2 Security Best Practices",
              "children": [
                {
                  "name": "2.2.1 Azure Active Directory (Azure AD) integration"
                },
                {
                  "name": "2.2.2 Role-Based Access Control (RBAC)"
                },
                {
                  "name": "2.2.3 Security Center and Azure Defender"
                }
              ]
            },
            {
              "name": "2.3 Azure Load Balancing",
              "children": [
                {
                  "name": "2.3.1 Load Balancers (Public and Internal)"
                },
                {
                  "name": "2.3.2 Application Gateway"
                },
                {
                  "name": "2.3.3 Traffic Manager"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Databases and Data Services",
          "children": [
            {
              "name": "3.1 Azure SQL Database",
              "children": [
                {
                  "name": "3.1.1 Database creation and management"
                },
                {
                  "name": "3.1.2 High Availability and Disaster Recovery"
                },
                {
                  "name": "3.1.3 Performance tuning"
                }
              ]
            },
            {
              "name": "3.2 Cosmos DB",
              "children": [
                {
                  "name": "3.2.1 NoSQL database concepts"
                },
                {
                  "name": "3.2.2 API choices (SQL, MongoDB, Cassandra, Gremlin, Table)"
                },
                {
                  "name": "3.2.3 Scaling and performance"
                }
              ]
            },
            {
              "name": "3.3 Other Azure Database Services",
              "children": [
                {
                  "name": "3.3.1 MySQL, PostgreSQL, MariaDB"
                },
                {
                  "name": "3.3.2 Redis Cache"
                },
                {
                  "name": "3.3.3 Azure Data Lake Storage Gen2"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Monitoring, Automation, and Deployment",
          "children": [
            {
              "name": "4.1 Azure Monitor",
              "children": [
                {
                  "name": "4.1.1 Log Analytics"
                },
                {
                  "name": "4.1.2 Metrics"
                },
                {
                  "name": "4.1.3 Alerting"
                }
              ]
            },
            {
              "name": "4.2 Azure Automation",
              "children": [
                {
                  "name": "4.2.1 Runbooks and PowerShell"
                },
                {
                  "name": "4.2.2 Desired State Configuration (DSC)"
                },
                {
                  "name": "4.2.3 Azure Automation Account"
                }
              ]
            },
            {
              "name": "4.3 CI/CD with Azure DevOps",
              "children": [
                {
                  "name": "4.3.1 Setting up a CI/CD pipeline"
                },
                {
                  "name": "4.3.2 Infrastructure as Code (IaC) with ARM Templates or Terraform"
                },
                {
                  "name": "4.3.3 Automated testing and deployment"
                }
              ]
            },
            {
              "name": "4.4 Project: Deploy and Monitor a Simple Web Application",
              "children": []
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Certification",
          "children": [
            {
              "name": "5.1 Serverless Computing (Azure Functions)",
              "children": [
                {
                  "name": "5.1.1 Function App development and deployment"
                },
                {
                  "name": "5.1.2 Event-driven architecture"
                },
                {
                  "name": "5.1.3 Integration with other Azure services"
                }
              ]
            },
            {
              "name": "5.2 Azure IoT Hub",
              "children": [
                {
                  "name": "5.2.1 Connecting and managing IoT devices"
                },
                {
                  "name": "5.2.2 Data processing and analytics"
                },
                {
                  "name": "5.2.3 Security considerations"
                }
              ]
            },
            {
              "name": "5.3 Azure Certification Preparation",
              "children": [
                {
                  "name": "5.3.1 AZ-305: Designing and Implementing Microsoft Azure Infrastructure Solutions"
                },
                {
                  "name": "5.3.2 Hands-on labs and practice exams"
                },
                {
                  "name": "5.3.3 Networking with other Azure professionals"
                }
              ]
            },
            {
              "name": "5.4 Project: Building a Secure and Scalable Application on Azure",
              "children": []
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become ML engineer ",
    "output": {
      "name": "How to Become an ML Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics & Statistics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra (Vectors, Matrices, Eigenvalues)"
                },
                {
                  "name": "1.1.2 Calculus (Derivatives, Gradients, Integrals)"
                },
                {
                  "name": "1.1.3 Probability & Statistics (Distributions, Hypothesis Testing)"
                },
                {
                  "name": "1.1.4 Project: Implement Linear Regression from Scratch"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Python Programming (Data structures, Control flow)"
                },
                {
                  "name": "1.2.2 Object-Oriented Programming (Classes, Objects, Inheritance)"
                },
                {
                  "name": "1.2.3 Version Control (Git)"
                },
                {
                  "name": "1.2.4 Project: Build a simple data processing pipeline in Python"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Machine Learning Concepts",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Polynomial, Ridge, Lasso)"
                },
                {
                  "name": "2.1.2 Classification (Logistic Regression, SVM, Decision Trees)"
                },
                {
                  "name": "2.1.3 Model Evaluation (Accuracy, Precision, Recall, F1-score)"
                },
                {
                  "name": "2.1.4 Project: Build a classification model to predict customer churn"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-means, Hierarchical Clustering)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA, t-SNE)"
                },
                {
                  "name": "2.2.3 Project: Perform customer segmentation using clustering techniques"
                }
              ]
            },
            {
              "name": "2.3 Model Selection and Tuning",
              "children": [
                {
                  "name": "2.3.1 Cross-validation"
                },
                {
                  "name": "2.3.2 Hyperparameter tuning (Grid Search, Random Search)"
                },
                {
                  "name": "2.3.3 Bias-variance tradeoff"
                },
                {
                  "name": "2.3.4 Project: Optimize a model's hyperparameters using cross-validation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptrons"
                },
                {
                  "name": "3.1.2 Multilayer Perceptrons (MLP)"
                },
                {
                  "name": "3.1.3 Backpropagation"
                },
                {
                  "name": "3.1.4 Project: Build a simple MLP for image classification"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.2.1 CNN Architectures (LeNet, AlexNet, VGG)"
                },
                {
                  "name": "3.2.2 Convolutional and Pooling layers"
                },
                {
                  "name": "3.2.3 Project: Build a CNN for image classification using a pre-trained model"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.3.1 RNN Architectures (LSTM, GRU)"
                },
                {
                  "name": "3.3.2 Applications in time series analysis and NLP"
                },
                {
                  "name": "3.3.3 Project: Build an RNN for text generation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. ML Engineering Practices",
          "children": [
            {
              "name": "4.1 Data Preprocessing & Feature Engineering",
              "children": [
                {
                  "name": "4.1.1 Data Cleaning (Handling missing values, outliers)"
                },
                {
                  "name": "4.1.2 Feature Scaling (Standardization, Normalization)"
                },
                {
                  "name": "4.1.3 Feature Selection & Extraction"
                },
                {
                  "name": "4.1.4 Project: Preprocess and engineer features for a real-world dataset"
                }
              ]
            },
            {
              "name": "4.2 Model Deployment & Monitoring",
              "children": [
                {
                  "name": "4.2.1 Cloud platforms (AWS SageMaker, Google Cloud AI Platform, Azure ML)"
                },
                {
                  "name": "4.2.2 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "4.2.3 Model versioning and A/B testing"
                },
                {
                  "name": "4.2.4 Project: Deploy a trained model to a cloud platform"
                }
              ]
            },
            {
              "name": "4.3 MLOps",
              "children": [
                {
                  "name": "4.3.1 CI/CD for ML"
                },
                {
                  "name": "4.3.2 Experiment tracking"
                },
                {
                  "name": "4.3.3 Model monitoring and retraining"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Transfer Learning",
              "children": [
                {
                  "name": "5.1.1 Fine-tuning pre-trained models"
                },
                {
                  "name": "5.1.2 Domain adaptation"
                }
              ]
            },
            {
              "name": "5.2 Reinforcement Learning",
              "children": [
                {
                  "name": "5.2.1 Q-learning"
                },
                {
                  "name": "5.2.2 Deep Q-Networks (DQN)"
                }
              ]
            },
            {
              "name": "5.3 Generative Models",
              "children": [
                {
                  "name": "5.3.1 Generative Adversarial Networks (GANs)"
                },
                {
                  "name": "5.3.2 Variational Autoencoders (VAEs)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "guide to learn ML",
    "output": {
      "name": "Guide to Learn ML",
      "children": [
        {
          "name": "1. Foundational Mathematics & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Integrals"
                },
                {
                  "name": "1.2.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.3 Probability & Statistics",
              "children": [
                {
                  "name": "1.3.1 Descriptive Statistics"
                },
                {
                  "name": "1.3.2 Probability Distributions"
                },
                {
                  "name": "1.3.3 Hypothesis Testing"
                }
              ]
            },
            {
              "name": "1.4 Programming for ML",
              "children": [
                {
                  "name": "1.4.1 Python Fundamentals"
                },
                {
                  "name": "1.4.2 NumPy"
                },
                {
                  "name": "1.4.3 Pandas"
                },
                {
                  "name": "1.4.4 Matplotlib & Seaborn (Data Visualization)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Supervised Learning",
          "children": [
            {
              "name": "2.1 Regression",
              "children": [
                {
                  "name": "2.1.1 Linear Regression"
                },
                {
                  "name": "2.1.2 Polynomial Regression"
                },
                {
                  "name": "2.1.3 Regularization (L1 & L2)"
                },
                {
                  "name": "2.1.4 Project: House Price Prediction"
                }
              ]
            },
            {
              "name": "2.2 Classification",
              "children": [
                {
                  "name": "2.2.1 Logistic Regression"
                },
                {
                  "name": "2.2.2 Support Vector Machines (SVM)"
                },
                {
                  "name": "2.2.3 Decision Trees"
                },
                {
                  "name": "2.2.4 Project: Image Classification (MNIST)"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation",
              "children": [
                {
                  "name": "2.3.1 Accuracy, Precision, Recall, F1-score"
                },
                {
                  "name": "2.3.2 ROC Curves and AUC"
                },
                {
                  "name": "2.3.3 Confusion Matrix"
                },
                {
                  "name": "2.3.4 Cross-validation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Unsupervised Learning",
          "children": [
            {
              "name": "3.1 Clustering",
              "children": [
                {
                  "name": "3.1.1 K-Means Clustering"
                },
                {
                  "name": "3.1.2 Hierarchical Clustering"
                },
                {
                  "name": "3.1.3 DBSCAN"
                }
              ]
            },
            {
              "name": "3.2 Dimensionality Reduction",
              "children": [
                {
                  "name": "3.2.1 Principal Component Analysis (PCA)"
                },
                {
                  "name": "3.2.2 t-distributed Stochastic Neighbor Embedding (t-SNE)"
                }
              ]
            },
            {
              "name": "3.3 Association Rule Mining",
              "children": [
                {
                  "name": "3.3.1 Apriori Algorithm"
                }
              ]
            },
            {
              "name": "3.4 Project: Customer Segmentation",
              "children": []
            }
          ]
        },
        {
          "name": "4. Deep Learning",
          "children": [
            {
              "name": "4.1 Neural Networks",
              "children": [
                {
                  "name": "4.1.1 Perceptron"
                },
                {
                  "name": "4.1.2 Multilayer Perceptron (MLP)"
                },
                {
                  "name": "4.1.3 Backpropagation"
                }
              ]
            },
            {
              "name": "4.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.2.1 CNN Architecture"
                },
                {
                  "name": "4.2.2 Applications in Image Processing"
                },
                {
                  "name": "4.2.3 Project: Image Classification (CIFAR-10)"
                }
              ]
            },
            {
              "name": "4.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "4.3.1 RNN Architecture"
                },
                {
                  "name": "4.3.2 LSTMs and GRUs"
                },
                {
                  "name": "4.3.3 Applications in Natural Language Processing"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Model Deployment and MLOps",
          "children": [
            {
              "name": "5.1 Model Deployment",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, GCP, Azure)"
                },
                {
                  "name": "5.1.2 Containerization (Docker)"
                },
                {
                  "name": "5.1.3 API Development"
                }
              ]
            },
            {
              "name": "5.2 Model Monitoring and Evaluation",
              "children": [
                {
                  "name": "5.2.1 Model Drift Detection"
                },
                {
                  "name": "5.2.2 Performance Tracking"
                }
              ]
            },
            {
              "name": "5.3 Version Control & Collaboration",
              "children": [
                {
                  "name": "5.3.1 Git"
                },
                {
                  "name": "5.3.2 Collaborative Tools"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "guide to learn Data science",
    "output": {
      "name": "Guide to Learn Data Science",
      "children": [
        {
          "name": "1. Foundational Mathematics & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Integrals"
                },
                {
                  "name": "1.2.3 Optimization"
                }
              ]
            },
            {
              "name": "1.3 Python Programming",
              "children": [
                {
                  "name": "1.3.1 Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "1.3.2 Control Flow (Loops, Conditionals)"
                },
                {
                  "name": "1.3.3 Functions and Object-Oriented Programming",
                  "children": [
                    {
                      "name": "1.3.3.1 Classes and Objects"
                    },
                    {
                      "name": "1.3.3.2 Inheritance and Polymorphism"
                    }
                  ]
                },
                {
                  "name": "1.3.4 Project: Build a simple calculator"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Wrangling and Exploration",
          "children": [
            {
              "name": "2.1 Data Cleaning",
              "children": [
                {
                  "name": "2.1.1 Handling Missing Values"
                },
                {
                  "name": "2.1.2 Outlier Detection and Treatment"
                },
                {
                  "name": "2.1.3 Data Transformation (Scaling, Encoding)"
                }
              ]
            },
            {
              "name": "2.2 Data Exploration & Visualization",
              "children": [
                {
                  "name": "2.2.1 Descriptive Statistics"
                },
                {
                  "name": "2.2.2 Data Visualization with Matplotlib and Seaborn"
                },
                {
                  "name": "2.2.3 Project: Exploratory Data Analysis of a Dataset"
                }
              ]
            },
            {
              "name": "2.3 Pandas & NumPy",
              "children": [
                {
                  "name": "2.3.1 Pandas DataFrames"
                },
                {
                  "name": "2.3.2 Data Manipulation with Pandas"
                },
                {
                  "name": "2.3.3 NumPy Arrays"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "3.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "3.1.2 Classification (Decision Trees, SVM, Naive Bayes)"
                },
                {
                  "name": "3.1.3 Model Evaluation Metrics"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "3.2.1 Clustering (K-Means, Hierarchical)"
                },
                {
                  "name": "3.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "3.2.3 Anomaly Detection"
                }
              ]
            },
            {
              "name": "3.3 Model Selection and Tuning",
              "children": [
                {
                  "name": "3.3.1 Cross-Validation"
                },
                {
                  "name": "3.3.2 Hyperparameter Tuning"
                },
                {
                  "name": "3.3.3 Project: Build a predictive model"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deep Learning (Optional)",
          "children": [
            {
              "name": "4.1 Neural Networks",
              "children": [
                {
                  "name": "4.1.1 Perceptrons"
                },
                {
                  "name": "4.1.2 Multilayer Perceptrons (MLP)"
                },
                {
                  "name": "4.1.3 Backpropagation"
                }
              ]
            },
            {
              "name": "4.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.2.1 Image Classification"
                },
                {
                  "name": "4.2.2 Object Detection"
                }
              ]
            },
            {
              "name": "4.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "4.3.1 Time Series Analysis"
                },
                {
                  "name": "4.3.2 Natural Language Processing"
                }
              ]
            },
            {
              "name": "4.4 TensorFlow/Keras",
              "children": [
                {
                  "name": "4.4.1 Building and Training Models"
                },
                {
                  "name": "4.4.2 Project: Build a deep learning model for image classification"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Communication",
          "children": [
            {
              "name": "5.1 Model Deployment",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, GCP, Azure)"
                },
                {
                  "name": "5.1.2 API Development"
                },
                {
                  "name": "5.1.3 Containerization (Docker)"
                }
              ]
            },
            {
              "name": "5.2 Data Storytelling and Visualization",
              "children": [
                {
                  "name": "5.2.1 Creating Effective Visualizations"
                },
                {
                  "name": "5.2.2 Communicating Results Clearly"
                },
                {
                  "name": "5.2.3 Report Writing and Presentation Skills"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "guide to learn NLP",
    "output": {
      "name": "Guide to Learn NLP",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Text Preprocessing (Tokenization, Stemming, Lemmatization)"
                },
                {
                  "name": "1.1.2 Regular Expressions"
                },
                {
                  "name": "1.1.3 Basic Text Statistics (Word frequency, N-grams)"
                }
              ]
            },
            {
              "name": "1.2 Linguistic Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Parts of Speech (POS) Tagging"
                },
                {
                  "name": "1.2.2 Syntax and Parsing"
                },
                {
                  "name": "1.2.3 Word Embeddings (Word2Vec, GloVe) - Introduction"
                }
              ]
            },
            {
              "name": "1.3 Python for NLP",
              "children": [
                {
                  "name": "1.3.1 Numpy and Pandas for data manipulation"
                },
                {
                  "name": "1.3.2 Working with text data in Python"
                },
                {
                  "name": "1.3.3 Project: Simple text analysis using Python libraries"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core NLP Techniques",
          "children": [
            {
              "name": "2.1 Word Embeddings",
              "children": [
                {
                  "name": "2.1.1 Deep dive into Word2Vec and GloVe"
                },
                {
                  "name": "2.1.2 FastText and other advanced embedding techniques"
                },
                {
                  "name": "2.1.3 Project: Word similarity task using pre-trained embeddings"
                }
              ]
            },
            {
              "name": "2.2 Classification",
              "children": [
                {
                  "name": "2.2.1 Sentiment Analysis (basic techniques)"
                },
                {
                  "name": "2.2.2 Text Classification with Naive Bayes and Logistic Regression"
                },
                {
                  "name": "2.2.3 Project: Build a simple sentiment classifier"
                }
              ]
            },
            {
              "name": "2.3 Sequence Models",
              "children": [
                {
                  "name": "2.3.1 Introduction to Recurrent Neural Networks (RNNs)"
                },
                {
                  "name": "2.3.2 Long Short-Term Memory (LSTM) networks"
                },
                {
                  "name": "2.3.3 Project:  Simple text generation using RNN"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced NLP Techniques",
          "children": [
            {
              "name": "3.1 Transformers",
              "children": [
                {
                  "name": "3.1.1 Introduction to the Transformer architecture"
                },
                {
                  "name": "3.1.2 BERT, RoBERTa, and other pre-trained models"
                },
                {
                  "name": "3.1.3 Fine-tuning pre-trained models for specific tasks"
                }
              ]
            },
            {
              "name": "3.2 Named Entity Recognition (NER)",
              "children": [
                {
                  "name": "3.2.1 Understanding NER and its applications"
                },
                {
                  "name": "3.2.2 Using pre-trained NER models (SpaCy, Stanford NER)"
                },
                {
                  "name": "3.2.3 Project: Build a NER system for a specific domain"
                }
              ]
            },
            {
              "name": "3.3 Machine Translation",
              "children": [
                {
                  "name": "3.3.1 Sequence-to-sequence models for machine translation"
                },
                {
                  "name": "3.3.2 Attention mechanisms in machine translation"
                },
                {
                  "name": "3.3.3 Project: Build a simple machine translation system (e.g., English to French)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Practical Applications & Tools",
          "children": [
            {
              "name": "4.1 NLP Libraries",
              "children": [
                {
                  "name": "4.1.1 NLTK"
                },
                {
                  "name": "4.1.2 SpaCy"
                },
                {
                  "name": "4.1.3 Transformers library (Hugging Face)"
                }
              ]
            },
            {
              "name": "4.2 Deployment and APIs",
              "children": [
                {
                  "name": "4.2.1 Deploying NLP models using cloud platforms (AWS, Google Cloud)"
                },
                {
                  "name": "4.2.2 Creating REST APIs for NLP models"
                },
                {
                  "name": "4.2.3 Project: Deploy a sentiment analysis model as a REST API"
                }
              ]
            },
            {
              "name": "4.3 Ethical Considerations",
              "children": [
                {
                  "name": "4.3.1 Bias in NLP models"
                },
                {
                  "name": "4.3.2 Fairness and accountability in NLP"
                },
                {
                  "name": "4.3.3 Responsible use of NLP technology"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Future Directions",
          "children": [
            {
              "name": "5.1  Dialogue Systems",
              "children": [
                {
                  "name": "5.1.1 Rule-based vs. Data-driven chatbots"
                },
                {
                  "name": "5.1.2 Reinforcement Learning for Dialogue Management"
                },
                {
                  "name": "5.1.3 Project: Building a simple conversational chatbot"
                }
              ]
            },
            {
              "name": "5.2 Knowledge Graphs and Semantic Web",
              "children": [
                {
                  "name": "5.2.1 Introduction to knowledge graphs"
                },
                {
                  "name": "5.2.2 Knowledge graph construction and querying"
                },
                {
                  "name": "5.2.3 Project: Building a small knowledge graph for a specific domain"
                }
              ]
            },
            {
              "name": "5.3 NLP for specific domains (e.g., BioNLP, Legal NLP)",
              "children": [
                {
                  "name": "5.3.1 Exploring domain-specific challenges and techniques"
                },
                {
                  "name": "5.3.2 Resources and datasets for specific domains"
                },
                {
                  "name": "5.3.3 Project: Applying NLP to a chosen domain"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Natural Language Processing",
    "output": {
      "name": "Natural Language Processing",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Text Preprocessing (Tokenization, Stemming, Lemmatization)"
                },
                {
                  "name": "1.1.2 Regular Expressions"
                },
                {
                  "name": "1.1.3 N-grams and TF-IDF"
                }
              ]
            },
            {
              "name": "1.2 Basic Python for NLP",
              "children": [
                {
                  "name": "1.2.1 String Manipulation"
                },
                {
                  "name": "1.2.2 Working with Files"
                },
                {
                  "name": "1.2.3 Libraries (Numpy, Pandas)"
                },
                {
                  "name": "1.2.4 Project: Simple Text Analyzer"
                }
              ]
            },
            {
              "name": "1.3 Introduction to Linguistics",
              "children": [
                {
                  "name": "1.3.1 Parts of Speech (POS) Tagging"
                },
                {
                  "name": "1.3.2 Syntax and Parsing"
                },
                {
                  "name": "1.3.3 Semantics and Word Sense Disambiguation"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Classical NLP Techniques",
          "children": [
            {
              "name": "2.1 Hidden Markov Models (HMMs)",
              "children": [
                {
                  "name": "2.1.1 HMM Fundamentals"
                },
                {
                  "name": "2.1.2 Part-of-Speech Tagging with HMMs"
                },
                {
                  "name": "2.1.3 Project: POS Tagger Implementation"
                }
              ]
            },
            {
              "name": "2.2 Probabilistic Models",
              "children": [
                {
                  "name": "2.2.1 Naive Bayes"
                },
                {
                  "name": "2.2.2 N-gram Language Models"
                },
                {
                  "name": "2.2.3 Project: Sentiment Analysis with Naive Bayes"
                }
              ]
            },
            {
              "name": "2.3 Rule-Based Systems",
              "children": [
                {
                  "name": "2.3.1 Defining Rules"
                },
                {
                  "name": "2.3.2 Pattern Matching"
                },
                {
                  "name": "2.3.3 Project: Simple Chatbot with Rules"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for NLP",
          "children": [
            {
              "name": "3.1 Word Embeddings",
              "children": [
                {
                  "name": "3.1.1 Word2Vec"
                },
                {
                  "name": "3.1.2 GloVe"
                },
                {
                  "name": "3.1.3 FastText"
                }
              ]
            },
            {
              "name": "3.2 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.2.1 LSTMs and GRUs"
                },
                {
                  "name": "3.2.2 Sequence-to-Sequence Models"
                },
                {
                  "name": "3.2.3 Project: Machine Translation with RNNs"
                }
              ]
            },
            {
              "name": "3.3 Transformers",
              "children": [
                {
                  "name": "3.3.1 Attention Mechanism"
                },
                {
                  "name": "3.3.2 BERT, GPT, etc."
                },
                {
                  "name": "3.3.3 Project: Text Classification with BERT"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Natural Language Generation (NLG)",
              "children": [
                {
                  "name": "4.1.1 Text Summarization"
                },
                {
                  "name": "4.1.2 Dialogue Systems"
                },
                {
                  "name": "4.1.3 Project: News Article Summarizer"
                }
              ]
            },
            {
              "name": "4.2  Named Entity Recognition (NER)",
              "children": [
                {
                  "name": "4.2.1 Conditional Random Fields (CRFs)"
                },
                {
                  "name": "4.2.2 Deep Learning Approaches for NER"
                },
                {
                  "name": "4.2.3 Project: Building a NER system"
                }
              ]
            },
            {
              "name": "4.3 Evaluation Metrics",
              "children": [
                {
                  "name": "4.3.1 Precision, Recall, F1-Score"
                },
                {
                  "name": "4.3.2 BLEU Score"
                },
                {
                  "name": "4.3.3 ROUGE Score"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Ethics",
          "children": [
            {
              "name": "5.1 Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, GCP, Azure)"
                },
                {
                  "name": "5.1.2 APIs and Microservices"
                }
              ]
            },
            {
              "name": "5.2 Ethical Considerations",
              "children": [
                {
                  "name": "5.2.1 Bias in NLP Models"
                },
                {
                  "name": "5.2.2 Fairness and Accountability"
                },
                {
                  "name": "5.2.3 Responsible AI Practices"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn Natural Language Processing",
    "output": {
      "name": "How to Learn Natural Language Processing",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Linguistics Basics",
              "children": [
                {
                  "name": "1.1.1 Parts of Speech (POS) Tagging"
                },
                {
                  "name": "1.1.2 Syntax and Parsing"
                },
                {
                  "name": "1.1.3 Semantics and Pragmatics"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Python Programming (Data Structures, Control Flow)"
                },
                {
                  "name": "1.2.2 Working with Libraries (NumPy, Pandas)"
                },
                {
                  "name": "1.2.3 Version Control (Git)"
                }
              ]
            },
            {
              "name": "1.3 Mathematics for NLP",
              "children": [
                {
                  "name": "1.3.1 Linear Algebra (Vectors, Matrices)"
                },
                {
                  "name": "1.3.2 Probability and Statistics"
                },
                {
                  "name": "1.3.3 Calculus (Derivatives, Gradients) - Basic understanding"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core NLP Techniques",
          "children": [
            {
              "name": "2.1 Text Preprocessing",
              "children": [
                {
                  "name": "2.1.1 Tokenization"
                },
                {
                  "name": "2.1.2 Stop Word Removal"
                },
                {
                  "name": "2.1.3 Stemming and Lemmatization"
                }
              ]
            },
            {
              "name": "2.2 Word Embeddings",
              "children": [
                {
                  "name": "2.2.1 Word2Vec"
                },
                {
                  "name": "2.2.2 GloVe"
                },
                {
                  "name": "2.2.3 FastText"
                }
              ]
            },
            {
              "name": "2.3 Named Entity Recognition (NER)",
              "children": [
                {
                  "name": "2.3.1 Rule-based NER"
                },
                {
                  "name": "2.3.2 Statistical NER"
                },
                {
                  "name": "2.3.3 Deep Learning based NER (e.g., using spaCy or Stanford NER)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced NLP Techniques",
          "children": [
            {
              "name": "3.1 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.1.1 LSTMs and GRUs"
                },
                {
                  "name": "3.1.2 Sequence-to-Sequence Models"
                },
                {
                  "name": "3.1.3 Project: Simple chatbot using RNNs"
                }
              ]
            },
            {
              "name": "3.2 Transformers",
              "children": [
                {
                  "name": "3.2.1 Attention Mechanisms"
                },
                {
                  "name": "3.2.2 BERT, RoBERTa, etc."
                },
                {
                  "name": "3.2.3 Fine-tuning pre-trained models"
                }
              ]
            },
            {
              "name": "3.3 NLP for Specific Tasks",
              "children": [
                {
                  "name": "3.3.1 Sentiment Analysis"
                },
                {
                  "name": "3.3.2 Text Summarization"
                },
                {
                  "name": "3.3.3 Machine Translation"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Practical Applications and Deployment",
          "children": [
            {
              "name": "4.1 Building NLP Pipelines",
              "children": [
                {
                  "name": "4.1.1 Data Collection and Cleaning"
                },
                {
                  "name": "4.1.2 Model Training and Evaluation"
                },
                {
                  "name": "4.1.3 Model Deployment (e.g., using Flask or Streamlit)"
                }
              ]
            },
            {
              "name": "4.2 Working with NLP Libraries",
              "children": [
                {
                  "name": "4.2.1 SpaCy"
                },
                {
                  "name": "4.2.2 NLTK"
                },
                {
                  "name": "4.2.3 Transformers Library (Hugging Face)"
                }
              ]
            },
            {
              "name": "4.3  Project: Build a real-world NLP application",
              "children": [
                {
                  "name": "4.3.1  Choose a task (e.g., sentiment analysis of movie reviews, question answering system)"
                },
                {
                  "name": "4.3.2  Gather data and build a model"
                },
                {
                  "name": "4.3.3  Deploy and test the application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Future Trends",
          "children": [
            {
              "name": "5.1  Unsupervised and Semi-supervised Learning for NLP",
              "children": [
                {
                  "name": "5.1.1 Clustering Techniques"
                },
                {
                  "name": "5.1.2 Self-Supervised Learning"
                }
              ]
            },
            {
              "name": "5.2  Explainable AI (XAI) in NLP",
              "children": [
                {
                  "name": "5.2.1  Understanding model decisions"
                },
                {
                  "name": "5.2.2  Bias detection and mitigation"
                }
              ]
            },
            {
              "name": "5.3  Ethical Considerations in NLP",
              "children": [
                {
                  "name": "5.3.1  Bias and fairness"
                },
                {
                  "name": "5.3.2  Misinformation and deepfakes"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become Natural Language Processing (NLP) Engineer",
    "output": {
      "name": "how to become Natural Language Processing (NLP) Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals"
                },
                {
                  "name": "1.1.2 Data Structures and Algorithms"
                },
                {
                  "name": "1.1.3 Object-Oriented Programming (OOP)"
                }
              ]
            },
            {
              "name": "1.2 Mathematics for NLP",
              "children": [
                {
                  "name": "1.2.1 Linear Algebra"
                },
                {
                  "name": "1.2.2 Probability and Statistics"
                },
                {
                  "name": "1.2.3 Calculus (Derivatives, Gradients)"
                }
              ]
            },
            {
              "name": "1.3 Natural Language Understanding",
              "children": [
                {
                  "name": "1.3.1 Parts of Speech Tagging"
                },
                {
                  "name": "1.3.2 Parsing and Syntax"
                },
                {
                  "name": "1.3.3 Semantic Analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core NLP Techniques",
          "children": [
            {
              "name": "2.1 Text Preprocessing",
              "children": [
                {
                  "name": "2.1.1 Tokenization"
                },
                {
                  "name": "2.1.2 Stop Word Removal"
                },
                {
                  "name": "2.1.3 Stemming and Lemmatization"
                },
                {
                  "name": "2.1.4 Project: Build a text cleaner"
                }
              ]
            },
            {
              "name": "2.2 Word Embeddings",
              "children": [
                {
                  "name": "2.2.1 Word2Vec"
                },
                {
                  "name": "2.2.2 GloVe"
                },
                {
                  "name": "2.2.3 FastText"
                }
              ]
            },
            {
              "name": "2.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "2.3.1 LSTMs"
                },
                {
                  "name": "2.3.2 GRUs"
                },
                {
                  "name": "2.3.3 Project: Sentiment analysis using RNNs"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced NLP Techniques",
          "children": [
            {
              "name": "3.1 Transformers",
              "children": [
                {
                  "name": "3.1.1 Attention Mechanisms"
                },
                {
                  "name": "3.1.2 BERT, RoBERTa, etc."
                },
                {
                  "name": "3.1.3 Project: Question answering using BERT"
                }
              ]
            },
            {
              "name": "3.2 Sequence-to-Sequence Models",
              "children": [
                {
                  "name": "3.2.1 Machine Translation"
                },
                {
                  "name": "3.2.2 Text Summarization"
                },
                {
                  "name": "3.2.3 Project: Build a simple chatbot"
                }
              ]
            },
            {
              "name": "3.3 Named Entity Recognition (NER)",
              "children": [
                {
                  "name": "3.3.1 Conditional Random Fields (CRFs)"
                },
                {
                  "name": "3.3.2 BiLSTM-CRF"
                },
                {
                  "name": "3.3.3 Project: Build an NER system for a specific domain"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Tools",
          "children": [
            {
              "name": "4.1 Cloud Platforms",
              "children": [
                {
                  "name": "4.1.1 AWS SageMaker"
                },
                {
                  "name": "4.1.2 Google Cloud AI Platform"
                },
                {
                  "name": "4.1.3 Azure Machine Learning"
                }
              ]
            },
            {
              "name": "4.2 NLP Libraries and Frameworks",
              "children": [
                {
                  "name": "4.2.1 spaCy"
                },
                {
                  "name": "4.2.2 NLTK"
                },
                {
                  "name": "4.2.3 Transformers (Hugging Face)"
                }
              ]
            },
            {
              "name": "4.3 Version Control and Collaboration",
              "children": [
                {
                  "name": "4.3.1 Git"
                },
                {
                  "name": "4.3.2 GitHub/GitLab"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization and Career Development",
          "children": [
            {
              "name": "5.1 Advanced Topics",
              "children": [
                {
                  "name": "5.1.1 Dialog Systems"
                },
                {
                  "name": "5.1.2 Knowledge Graphs"
                },
                {
                  "name": "5.1.3 NLP for specific domains (e.g., healthcare, finance)"
                }
              ]
            },
            {
              "name": "5.2 Building a Portfolio",
              "children": [
                {
                  "name": "5.2.1 Contributing to Open Source Projects"
                },
                {
                  "name": "5.2.2 Participating in Kaggle Competitions"
                },
                {
                  "name": "5.2.3 Creating personal NLP projects"
                }
              ]
            },
            {
              "name": "5.3 Job Search and Networking",
              "children": [
                {
                  "name": "5.3.1 Tailoring resumes and cover letters"
                },
                {
                  "name": "5.3.2 Preparing for technical interviews"
                },
                {
                  "name": "5.3.3 Networking with NLP professionals"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "guide me to learn Business Analyst",
    "output": {
      "name": "Guide me to learn Business Analyst",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Business Concepts",
              "children": [
                {
                  "name": "1.1.1 Financial Statements (Income Statement, Balance Sheet, Cash Flow Statement)"
                },
                {
                  "name": "1.1.2 Business Strategy and Competitive Analysis (Porter's Five Forces, SWOT Analysis)"
                },
                {
                  "name": "1.1.3  Basic Accounting Principles"
                }
              ]
            },
            {
              "name": "1.2 Data Analysis Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics (Mean, Median, Mode, Standard Deviation)"
                },
                {
                  "name": "1.2.2 Data Visualization (Charts, Graphs, Dashboards) - Exercise: Create a dashboard visualizing sample sales data"
                },
                {
                  "name": "1.2.3 Spreadsheet Software (Excel, Google Sheets) - Exercise: Build a financial model in Excel"
                }
              ]
            },
            {
              "name": "1.3 Communication & Presentation Skills",
              "children": [
                {
                  "name": "1.3.1  Effective Written Communication (Reports, Emails)"
                },
                {
                  "name": "1.3.2  Public Speaking and Presentations - Exercise: Present a business case study"
                },
                {
                  "name": "1.3.3 Active Listening and Collaboration"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Business Analysis Techniques",
          "children": [
            {
              "name": "2.1 Requirements Elicitation",
              "children": [
                {
                  "name": "2.1.1 Interviews and Surveys"
                },
                {
                  "name": "2.1.2 Workshops and Focus Groups"
                },
                {
                  "name": "2.1.3 Document Analysis - Exercise: Analyze a company's existing documentation to identify areas for improvement"
                }
              ]
            },
            {
              "name": "2.2 Requirements Modeling",
              "children": [
                {
                  "name": "2.2.1 Use Cases"
                },
                {
                  "name": "2.2.2 User Stories"
                },
                {
                  "name": "2.2.3 Data Flow Diagrams - Exercise: Create a data flow diagram for an online ordering system"
                }
              ]
            },
            {
              "name": "2.3 Process Improvement",
              "children": [
                {
                  "name": "2.3.1 Business Process Modeling (BPMN)"
                },
                {
                  "name": "2.3.2 Lean Principles"
                },
                {
                  "name": "2.3.3 Six Sigma - Exercise: Identify and analyze a process bottleneck in a simulated business scenario"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Software & Tools",
          "children": [
            {
              "name": "3.1 Database Management Systems (DBMS)",
              "children": [
                {
                  "name": "3.1.1 SQL Basics"
                },
                {
                  "name": "3.1.2 Data Modeling (ER Diagrams)"
                },
                {
                  "name": "3.1.3 Relational Databases - Exercise:  Create and query a database using SQL"
                }
              ]
            },
            {
              "name": "3.2 Business Intelligence Tools",
              "children": [
                {
                  "name": "3.2.1 Tableau or Power BI"
                },
                {
                  "name": "3.2.2 Data Mining and Predictive Analytics - Exercise: Build a simple predictive model using a BI tool"
                },
                {
                  "name": "3.2.3 Data Warehousing Concepts"
                }
              ]
            },
            {
              "name": "3.3 Project Management Software",
              "children": [
                {
                  "name": "3.3.1 Jira or Asana"
                },
                {
                  "name": "3.3.2 Agile Methodologies (Scrum, Kanban)"
                },
                {
                  "name": "3.3.3 Project Planning and Tracking - Exercise: Plan and track a mock project using project management software"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specialization",
          "children": [
            {
              "name": "4.1 Data Science for Business Analysts",
              "children": [
                {
                  "name": "4.1.1 Regression Analysis"
                },
                {
                  "name": "4.1.2 Machine Learning Fundamentals"
                },
                {
                  "name": "4.1.3 Statistical Modeling"
                }
              ]
            },
            {
              "name": "4.2 Business Strategy & Consulting",
              "children": [
                {
                  "name": "4.2.1 Value Chain Analysis"
                },
                {
                  "name": "4.2.2 Strategic Planning"
                },
                {
                  "name": "4.2.3 Market Research"
                }
              ]
            },
            {
              "name": "4.3 Domain-Specific Knowledge",
              "children": [
                {
                  "name": "4.3.1 Choose a specific industry (e.g., Finance, Healthcare, Technology)"
                },
                {
                  "name": "4.3.2 Learn relevant domain-specific terminology and processes"
                },
                {
                  "name": "4.3.3 Develop industry expertise through networking and case studies"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Portfolio Building & Job Search",
          "children": [
            {
              "name": "5.1 Creating a Portfolio",
              "children": [
                {
                  "name": "5.1.1 Document completed projects and case studies"
                },
                {
                  "name": "5.1.2 Showcase your skills and accomplishments"
                },
                {
                  "name": "5.1.3 Build a professional online presence (LinkedIn)"
                }
              ]
            },
            {
              "name": "5.2 Job Search Strategies",
              "children": [
                {
                  "name": "5.2.1 Networking and informational interviews"
                },
                {
                  "name": "5.2.2 Tailoring your resume and cover letter"
                },
                {
                  "name": "5.2.3 Practicing for interviews"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become Business Analyst",
    "output": {
      "name": "How to Become a Business Analyst",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Business Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Business Acumen"
                },
                {
                  "name": "1.1.2 Financial Statements (Income Statement, Balance Sheet, Cash Flow)"
                },
                {
                  "name": "1.1.3 Market Analysis & Competitive Landscape"
                }
              ]
            },
            {
              "name": "1.2 Data Analysis Basics",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics (Mean, Median, Mode, Standard Deviation)"
                },
                {
                  "name": "1.2.2 Data Visualization (Charts, Graphs, Dashboards)"
                },
                {
                  "name": "1.2.3 Spreadsheet Software (Excel - Pivot Tables, VLOOKUP, Charts) - Project: Analyze a sample dataset"
                }
              ]
            },
            {
              "name": "1.3 Communication & Soft Skills",
              "children": [
                {
                  "name": "1.3.1 Active Listening & Effective Communication"
                },
                {
                  "name": "1.3.2 Presentation Skills"
                },
                {
                  "name": "1.3.3 Conflict Resolution & Negotiation"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Business Analysis Techniques",
          "children": [
            {
              "name": "2.1 Requirements Elicitation",
              "children": [
                {
                  "name": "2.1.1 Interviews & Surveys"
                },
                {
                  "name": "2.1.2 Workshops & Focus Groups"
                },
                {
                  "name": "2.1.3 Document Analysis & Process Mapping"
                }
              ]
            },
            {
              "name": "2.2 Requirements Modeling",
              "children": [
                {
                  "name": "2.2.1 Use Cases & User Stories"
                },
                {
                  "name": "2.2.2 Data Flow Diagrams (DFD)"
                },
                {
                  "name": "2.2.3 Entity Relationship Diagrams (ERD)"
                }
              ]
            },
            {
              "name": "2.3 Business Process Modeling",
              "children": [
                {
                  "name": "2.3.1 BPMN (Business Process Model and Notation)"
                },
                {
                  "name": "2.3.2 Swimlane Diagrams"
                },
                {
                  "name": "2.3.3 Process Improvement Techniques (Lean, Six Sigma) - Project: Model a business process and identify areas for improvement"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Project Management & Agile Methodologies",
          "children": [
            {
              "name": "3.1 Project Management Fundamentals",
              "children": [
                {
                  "name": "3.1.1 Project Life Cycle"
                },
                {
                  "name": "3.1.2 Risk Management"
                },
                {
                  "name": "3.1.3 Project Planning & Scheduling"
                }
              ]
            },
            {
              "name": "3.2 Agile Methodologies",
              "children": [
                {
                  "name": "3.2.1 Scrum"
                },
                {
                  "name": "3.2.2 Kanban"
                },
                {
                  "name": "3.2.3 Agile Principles & Values"
                }
              ]
            },
            {
              "name": "3.3 Collaboration Tools",
              "children": [
                {
                  "name": "3.3.1 Jira"
                },
                {
                  "name": "3.3.2 Confluence"
                },
                {
                  "name": "3.3.3 Microsoft Teams/Slack - Project: Participate in a simulated Agile project using chosen tools"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Techniques & Specialization",
          "children": [
            {
              "name": "4.1 Data Modeling & Database Management",
              "children": [
                {
                  "name": "4.1.1 Relational Databases (SQL)"
                },
                {
                  "name": "4.1.2 NoSQL Databases"
                },
                {
                  "name": "4.1.3 Data Warehousing & Business Intelligence"
                }
              ]
            },
            {
              "name": "4.2 Business Intelligence & Analytics",
              "children": [
                {
                  "name": "4.2.1 Data Mining & Predictive Modeling"
                },
                {
                  "name": "4.2.2 Data Visualization Tools (Tableau, Power BI)"
                },
                {
                  "name": "4.2.3 Statistical Analysis (Regression, Hypothesis Testing) - Project: Develop a dashboard to visualize business insights from a dataset"
                }
              ]
            },
            {
              "name": "4.3 Specialization Areas",
              "children": [
                {
                  "name": "4.3.1  IT Business Analysis"
                },
                {
                  "name": "4.3.2 Financial Business Analysis"
                },
                {
                  "name": "4.3.3 Marketing Business Analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Job Search & Career Development",
          "children": [
            {
              "name": "5.1 Building Your Resume & Portfolio",
              "children": [
                {
                  "name": "5.1.1 Tailoring your resume to specific job descriptions"
                },
                {
                  "name": "5.1.2 Showcasing projects and achievements"
                },
                {
                  "name": "5.1.3 Creating a professional online presence (LinkedIn)"
                }
              ]
            },
            {
              "name": "5.2 Interview Preparation",
              "children": [
                {
                  "name": "5.2.1 Behavioral questions and STAR method"
                },
                {
                  "name": "5.2.2 Technical questions related to BA skills"
                },
                {
                  "name": "5.2.3 Case studies and problem-solving exercises"
                }
              ]
            },
            {
              "name": "5.3 Networking and Professional Development",
              "children": [
                {
                  "name": "5.3.1 Attending industry events and conferences"
                },
                {
                  "name": "5.3.2 Joining professional organizations (IIBA)"
                },
                {
                  "name": "5.3.3 Seeking mentorship and guidance"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "guide me to learn AI",
    "output": {
      "name": "Guide me to learn AI",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Calculus (Derivatives, Gradients)"
                },
                {
                  "name": "1.1.3 Probability and Statistics"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Basics"
                },
                {
                  "name": "1.2.2 NumPy and Pandas"
                },
                {
                  "name": "1.2.3 Project: Simple Data Analysis with Pandas"
                }
              ]
            },
            {
              "name": "1.3 Data Structures and Algorithms",
              "children": [
                {
                  "name": "1.3.1 Big O Notation"
                },
                {
                  "name": "1.3.2 Searching and Sorting Algorithms"
                },
                {
                  "name": "1.3.3 Project: Implement a simple search algorithm"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (Decision Trees, SVM)"
                },
                {
                  "name": "2.1.3 Project: Build a linear regression model to predict house prices"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-Means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "2.2.3 Project: Perform customer segmentation using K-Means clustering"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation",
              "children": [
                {
                  "name": "2.3.1 Metrics (Accuracy, Precision, Recall, F1-score)"
                },
                {
                  "name": "2.3.2 Bias-Variance Tradeoff"
                },
                {
                  "name": "2.3.3 Cross-validation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptron"
                },
                {
                  "name": "3.1.2 Multilayer Perceptron (MLP)"
                },
                {
                  "name": "3.1.3 Backpropagation"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.2.1 Image Classification"
                },
                {
                  "name": "3.2.2 Object Detection"
                },
                {
                  "name": "3.2.3 Project: Build a CNN for image classification using a pre-trained model"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.3.1 Time Series Analysis"
                },
                {
                  "name": "3.3.2 Natural Language Processing (NLP)"
                },
                {
                  "name": "3.3.3 Project: Build an RNN for sentiment analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized Areas",
          "children": [
            {
              "name": "4.1 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "4.1.1 Text Preprocessing"
                },
                {
                  "name": "4.1.2 Word Embeddings (Word2Vec, GloVe)"
                },
                {
                  "name": "4.1.3 Transformers"
                }
              ]
            },
            {
              "name": "4.2 Computer Vision",
              "children": [
                {
                  "name": "4.2.1 Image Segmentation"
                },
                {
                  "name": "4.2.2 Object Tracking"
                },
                {
                  "name": "4.2.3 Generative Adversarial Networks (GANs)"
                }
              ]
            },
            {
              "name": "4.3 Reinforcement Learning",
              "children": [
                {
                  "name": "4.3.1 Q-Learning"
                },
                {
                  "name": "4.3.2 Deep Q-Networks (DQN)"
                },
                {
                  "name": "4.3.3 Project: Train an agent to play a simple game"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Production",
          "children": [
            {
              "name": "5.1 Cloud Platforms (AWS, GCP, Azure)",
              "children": [
                {
                  "name": "5.1.1 Model Deployment"
                },
                {
                  "name": "5.1.2 Scalability and Monitoring"
                }
              ]
            },
            {
              "name": "5.2 API Development",
              "children": [
                {
                  "name": "5.2.1 REST APIs"
                },
                {
                  "name": "5.2.2 Flask/FastAPI"
                }
              ]
            },
            {
              "name": "5.3 Version Control (Git)",
              "children": [
                {
                  "name": "5.3.1 Git Basics"
                },
                {
                  "name": "5.3.2 Collaborative Development"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a AI Engineer",
    "output": {
      "name": "How to Become an AI Engineer",
      "children": [
        {
          "name": "1. Foundational Mathematics and Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                },
                {
                  "name": "1.1.4 Project: Implement matrix operations in Python"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Integrals"
                },
                {
                  "name": "1.2.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Probability Distributions"
                },
                {
                  "name": "1.3.2 Statistical Inference"
                },
                {
                  "name": "1.3.3 Hypothesis Testing"
                }
              ]
            },
            {
              "name": "1.4 Programming Fundamentals (Python)",
              "children": [
                {
                  "name": "1.4.1 Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "1.4.2 Object-Oriented Programming"
                },
                {
                  "name": "1.4.3 Project: Build a simple data analysis program"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Linear Regression"
                },
                {
                  "name": "2.1.2 Logistic Regression"
                },
                {
                  "name": "2.1.3 Decision Trees"
                },
                {
                  "name": "2.1.4 Project: Build a spam classifier"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "2.2.3 Project: Perform customer segmentation"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation",
              "children": [
                {
                  "name": "2.3.1 Accuracy, Precision, Recall"
                },
                {
                  "name": "2.3.2 F1-Score, AUC"
                },
                {
                  "name": "2.3.3 Cross-Validation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptrons"
                },
                {
                  "name": "3.1.2 Multilayer Perceptrons (MLP)"
                },
                {
                  "name": "3.1.3 Backpropagation"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.2.1 Image Classification"
                },
                {
                  "name": "3.2.2 Object Detection"
                },
                {
                  "name": "3.2.3 Project: Build an image classifier using TensorFlow/PyTorch"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.3.1 LSTMs, GRUs"
                },
                {
                  "name": "3.3.2 Time Series Analysis"
                },
                {
                  "name": "3.3.3 Natural Language Processing (NLP) basics"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized AI Areas & Deployment",
          "children": [
            {
              "name": "4.1 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "4.1.1 Text Preprocessing"
                },
                {
                  "name": "4.1.2 Word Embeddings (Word2Vec, GloVe)"
                },
                {
                  "name": "4.1.3 Transformers (BERT, GPT)"
                },
                {
                  "name": "4.1.4 Project: Build a sentiment analysis model"
                }
              ]
            },
            {
              "name": "4.2 Computer Vision",
              "children": [
                {
                  "name": "4.2.1 Object Detection (YOLO, Faster R-CNN)"
                },
                {
                  "name": "4.2.2 Image Segmentation"
                },
                {
                  "name": "4.2.3 Project: Build an object detection model"
                }
              ]
            },
            {
              "name": "4.3 AI Deployment and MLOps",
              "children": [
                {
                  "name": "4.3.1 Model Deployment (Cloud Platforms)"
                },
                {
                  "name": "4.3.2 Model Monitoring"
                },
                {
                  "name": "4.3.3 Version Control and CI/CD"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 Reinforcement Learning",
              "children": [
                {
                  "name": "5.1.1 Q-learning"
                },
                {
                  "name": "5.1.2 Deep Q-Networks (DQN)"
                },
                {
                  "name": "5.1.3 Project: Train an agent to play a simple game"
                }
              ]
            },
            {
              "name": "5.2 Generative Adversarial Networks (GANs)",
              "children": [
                {
                  "name": "5.2.1 Generative models"
                },
                {
                  "name": "5.2.2 Adversarial training"
                },
                {
                  "name": "5.2.3 Project: Generate images using GANs"
                }
              ]
            },
            {
              "name": "5.3 Explainable AI (XAI)",
              "children": [
                {
                  "name": "5.3.1 Interpretability techniques"
                },
                {
                  "name": "5.3.2 Model explainability tools"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become  AI Engineer in 6 months",
    "output": {
      "name": "How to Become an AI Engineer in 6 Months",
      "children": [
        {
          "name": "1. Foundational Mathematics and Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "Vectors and Matrices"
                },
                {
                  "name": "Linear Transformations"
                },
                {
                  "name": "Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "Derivatives and Gradients"
                },
                {
                  "name": "Integrals"
                },
                {
                  "name": "Partial Derivatives and Chain Rule"
                }
              ]
            },
            {
              "name": "1.3 Python Programming",
              "children": [
                {
                  "name": "Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "Object-Oriented Programming"
                },
                {
                  "name": "NumPy, Pandas, Matplotlib"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "Linear Regression"
                },
                {
                  "name": "Logistic Regression"
                },
                {
                  "name": "Project: Build a simple linear regression model to predict house prices"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "Dimensionality Reduction (PCA)"
                },
                {
                  "name": "Project: Perform customer segmentation using K-means clustering"
                }
              ]
            },
            {
              "name": "2.3 Model Evaluation",
              "children": [
                {
                  "name": "Accuracy, Precision, Recall, F1-Score"
                },
                {
                  "name": "ROC Curves and AUC"
                },
                {
                  "name": "Cross-validation techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "Perceptrons"
                },
                {
                  "name": "Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "Backpropagation"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "Image Classification"
                },
                {
                  "name": "Object Detection"
                },
                {
                  "name": "Project: Build a CNN for image classification using TensorFlow/PyTorch"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "Natural Language Processing (NLP) basics"
                },
                {
                  "name": "LSTMs and GRUs"
                },
                {
                  "name": "Project: Build a simple RNN for text generation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. AI Engineering Practices",
          "children": [
            {
              "name": "4.1 Version Control (Git)",
              "children": [
                {
                  "name": "Git basics (clone, commit, push, pull)"
                },
                {
                  "name": "Branching and merging"
                },
                {
                  "name": "Collaboration using Git"
                }
              ]
            },
            {
              "name": "4.2 Cloud Computing (AWS, GCP, Azure)",
              "children": [
                {
                  "name": "Setting up a cloud environment"
                },
                {
                  "name": "Deploying machine learning models"
                },
                {
                  "name": "Managing cloud resources"
                }
              ]
            },
            {
              "name": "4.3 MLOps",
              "children": [
                {
                  "name": "Model training pipelines"
                },
                {
                  "name": "Model monitoring and evaluation"
                },
                {
                  "name": "Model deployment and scaling"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization and Portfolio Building",
          "children": [
            {
              "name": "5.1 Choose a Specialization",
              "children": [
                {
                  "name": "Computer Vision"
                },
                {
                  "name": "Natural Language Processing"
                },
                {
                  "name": "Reinforcement Learning"
                }
              ]
            },
            {
              "name": "5.2 Build a Strong Portfolio",
              "children": [
                {
                  "name": "Contribute to open-source projects"
                },
                {
                  "name": "Develop personal AI projects"
                },
                {
                  "name": "Participate in Kaggle competitions"
                }
              ]
            },
            {
              "name": "5.3 Network and Job Search",
              "children": [
                {
                  "name": "Attend AI meetups and conferences"
                },
                {
                  "name": "Connect with professionals on LinkedIn"
                },
                {
                  "name": "Apply for AI engineering roles"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become  Machine Learning Engineer in 6 months",
    "output": {
      "name": "How to become a Machine Learning Engineer in 6 months",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Mathematics for ML",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra (Vectors, Matrices, Eigenvalues)"
                },
                {
                  "name": "1.1.2 Calculus (Derivatives, Gradients, Optimization)"
                },
                {
                  "name": "1.1.3 Probability and Statistics (Distributions, Hypothesis Testing)"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Python Programming (Data structures, Control flow, OOP)"
                },
                {
                  "name": "1.2.2 NumPy & Pandas (Data manipulation, array operations)"
                },
                {
                  "name": "1.2.3 Version Control with Git (GitHub, GitLab)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Core Concepts",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Polynomial, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (Naive Bayes, SVM, Decision Trees)"
                },
                {
                  "name": "2.1.3 Model Evaluation Metrics (Accuracy, Precision, Recall, F1-score)"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA, t-SNE)"
                },
                {
                  "name": "2.2.3 Anomaly Detection"
                }
              ]
            },
            {
              "name": "2.3 Practical Project: Build a classification model (e.g., image classification using MNIST dataset)",
              "children": []
            }
          ]
        },
        {
          "name": "3. Deep Learning Fundamentals",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptrons and Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "3.1.2 Backpropagation and Gradient Descent"
                },
                {
                  "name": "3.1.3 Activation Functions (Sigmoid, ReLU, Tanh)"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.2.1 Image Processing and Feature Extraction"
                },
                {
                  "name": "3.2.2 Architectures (LeNet, AlexNet, VGG)"
                },
                {
                  "name": "3.2.3 Transfer Learning"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.3.1 Sequence Modeling and Time Series Analysis"
                },
                {
                  "name": "3.3.2 LSTMs and GRUs"
                },
                {
                  "name": "3.3.3 Applications in NLP"
                }
              ]
            },
            {
              "name": "3.4 Practical Project: Build a CNN model for image classification (e.g., CIFAR-10)",
              "children": []
            }
          ]
        },
        {
          "name": "4. Machine Learning Engineering Practices",
          "children": [
            {
              "name": "4.1 Model Deployment",
              "children": [
                {
                  "name": "4.1.1 Cloud Platforms (AWS, GCP, Azure)"
                },
                {
                  "name": "4.1.2 Containerization (Docker, Kubernetes)"
                },
                {
                  "name": "4.1.3 Model Serving (REST APIs)"
                }
              ]
            },
            {
              "name": "4.2 MLOps",
              "children": [
                {
                  "name": "4.2.1 Model Monitoring and Evaluation"
                },
                {
                  "name": "4.2.2 Version Control for Models and Data"
                },
                {
                  "name": "4.2.3 CI/CD for ML pipelines"
                }
              ]
            },
            {
              "name": "4.3 Practical Project: Deploy a trained model using a cloud platform and build a basic MLOps pipeline",
              "children": []
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1  Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "5.1.1 Text preprocessing, tokenization, stemming"
                },
                {
                  "name": "5.1.2 Word embeddings (Word2Vec, GloVe, FastText)"
                },
                {
                  "name": "5.1.3 Transformer models (BERT, GPT)"
                }
              ]
            },
            {
              "name": "5.2 Computer Vision",
              "children": [
                {
                  "name": "5.2.1 Object detection (YOLO, Faster R-CNN)"
                },
                {
                  "name": "5.2.2 Image segmentation (U-Net, Mask R-CNN)"
                },
                {
                  "name": "5.2.3 Generative models (GANs, VAEs)"
                }
              ]
            },
            {
              "name": "5.3 Reinforcement Learning",
              "children": [
                {
                  "name": "5.3.1 Markov Decision Processes (MDPs)"
                },
                {
                  "name": "5.3.2 Q-learning and Deep Q-Networks (DQNs)"
                },
                {
                  "name": "5.3.3 Policy gradients"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become   a Data scientist in 6 months",
    "output": {
      "name": "How to become a Data Scientist in 6 months",
      "children": [
        {
          "name": "1. Foundational Math & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "Vectors, Matrices, Linear Transformations"
                },
                {
                  "name": "Derivatives, Integrals, Gradients"
                },
                {
                  "name": "Project: Implement gradient descent algorithm"
                }
              ]
            },
            {
              "name": "1.2 Statistics & Probability",
              "children": [
                {
                  "name": "Descriptive Statistics, Inferential Statistics"
                },
                {
                  "name": "Probability Distributions, Hypothesis Testing"
                },
                {
                  "name": "Project: Analyze a dataset using statistical tests"
                }
              ]
            },
            {
              "name": "1.3 Python Programming",
              "children": [
                {
                  "name": "Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "Control Flow (Loops, Conditional Statements)"
                },
                {
                  "name": "Functions, Object-Oriented Programming"
                },
                {
                  "name": "Project: Build a simple data processing script"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Manipulation & Wrangling",
          "children": [
            {
              "name": "2.1 Pandas",
              "children": [
                {
                  "name": "Data ingestion, cleaning, and transformation"
                },
                {
                  "name": "Data manipulation with Pandas functions"
                },
                {
                  "name": "Project: Clean and preprocess a real-world dataset"
                }
              ]
            },
            {
              "name": "2.2 Data Visualization",
              "children": [
                {
                  "name": "Matplotlib, Seaborn basics"
                },
                {
                  "name": "Creating various chart types (bar, line, scatter, etc.)"
                },
                {
                  "name": "Project: Create visualizations to explore a dataset"
                }
              ]
            },
            {
              "name": "2.3 SQL",
              "children": [
                {
                  "name": "Database fundamentals (tables, queries)"
                },
                {
                  "name": "SELECT, JOIN, WHERE, GROUP BY, etc."
                },
                {
                  "name": "Project: Query a database to extract relevant information"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning Fundamentals",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "Linear Regression, Logistic Regression"
                },
                {
                  "name": "Decision Trees, Random Forests"
                },
                {
                  "name": "Project: Build a classification model using a real dataset"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "Clustering (K-means, Hierarchical Clustering)"
                },
                {
                  "name": "Dimensionality Reduction (PCA)"
                },
                {
                  "name": "Project: Apply clustering to group similar data points"
                }
              ]
            },
            {
              "name": "3.3 Model Evaluation",
              "children": [
                {
                  "name": "Accuracy, Precision, Recall, F1-score"
                },
                {
                  "name": "ROC curves, AUC"
                },
                {
                  "name": "Cross-validation techniques"
                },
                {
                  "name": "Project: Evaluate different models using appropriate metrics"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specialization",
          "children": [
            {
              "name": "4.1 Deep Learning (Introduction)",
              "children": [
                {
                  "name": "Neural Networks basics"
                },
                {
                  "name": "Introduction to TensorFlow/PyTorch"
                },
                {
                  "name": "Project: Build a simple neural network"
                }
              ]
            },
            {
              "name": "4.2 Big Data Technologies (Spark/Hadoop - Optional)",
              "children": [
                {
                  "name": "Introduction to distributed computing"
                },
                {
                  "name": "Basic Spark/Hadoop operations"
                },
                {
                  "name": "Project (Optional): Process a large dataset using Spark"
                }
              ]
            },
            {
              "name": "4.3 Cloud Computing (AWS/Azure/GCP - Optional)",
              "children": [
                {
                  "name": "Basic cloud concepts"
                },
                {
                  "name": "Setting up a cloud environment"
                },
                {
                  "name": "Project (Optional): Deploy a machine learning model to the cloud"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio Building & Job Search",
          "children": [
            {
              "name": "5.1 Portfolio Creation",
              "children": [
                {
                  "name": "GitHub profile"
                },
                {
                  "name": "Showcase completed projects"
                },
                {
                  "name": "Create a professional resume"
                }
              ]
            },
            {
              "name": "5.2 Job Application Strategy",
              "children": [
                {
                  "name": "Networking"
                },
                {
                  "name": "Tailoring resumes and cover letters"
                },
                {
                  "name": "Interview preparation"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become   a Data Analyst  in 6 months",
    "output": {
      "name": "How to Become a Data Analyst in 6 Months",
      "children": [
        {
          "name": "1. Foundational Mathematics & Statistics",
          "children": [
            {
              "name": "1.1 Descriptive Statistics",
              "children": [
                {
                  "name": "1.1.1 Mean, Median, Mode, Range"
                },
                {
                  "name": "1.1.2 Variance, Standard Deviation"
                },
                {
                  "name": "1.1.3 Percentiles, Quartiles"
                }
              ]
            },
            {
              "name": "1.2 Inferential Statistics",
              "children": [
                {
                  "name": "1.2.1 Hypothesis Testing"
                },
                {
                  "name": "1.2.2 Confidence Intervals"
                },
                {
                  "name": "1.2.3 Regression Analysis (Simple Linear Regression)"
                }
              ]
            },
            {
              "name": "1.3 Probability",
              "children": [
                {
                  "name": "1.3.1 Basic Probability Concepts"
                },
                {
                  "name": "1.3.2 Probability Distributions (Normal, Binomial)"
                },
                {
                  "name": "1.3.3 Conditional Probability"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Wrangling & Manipulation with SQL",
          "children": [
            {
              "name": "2.1 SQL Fundamentals",
              "children": [
                {
                  "name": "2.1.1 SELECT, FROM, WHERE clauses"
                },
                {
                  "name": "2.1.2 JOINs (INNER, LEFT, RIGHT)"
                },
                {
                  "name": "2.1.3 GROUP BY, HAVING, Aggregate Functions"
                }
              ]
            },
            {
              "name": "2.2 Data Cleaning & Transformation",
              "children": [
                {
                  "name": "2.2.1 Handling Missing Values"
                },
                {
                  "name": "2.2.2 Data Type Conversion"
                },
                {
                  "name": "2.2.3 Outlier Detection and Treatment"
                }
              ]
            },
            {
              "name": "2.3 SQL Project: Analyze a Dataset",
              "children": [
                {
                  "name": "2.3.1 Choose a public dataset (e.g., Kaggle)"
                },
                {
                  "name": "2.3.2 Clean, transform and analyze data using SQL"
                },
                {
                  "name": "2.3.3 Create visualizations to present findings"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Visualization & Storytelling",
          "children": [
            {
              "name": "3.1 Data Visualization Tools",
              "children": [
                {
                  "name": "3.1.1 Learn a visualization tool (e.g., Tableau, Power BI)"
                },
                {
                  "name": "3.1.2 Create various chart types (bar charts, line charts, scatter plots)"
                },
                {
                  "name": "3.1.3 Understand dashboard design principles"
                }
              ]
            },
            {
              "name": "3.2 Data Storytelling",
              "children": [
                {
                  "name": "3.2.1 Communicating insights effectively"
                },
                {
                  "name": "3.2.2 Presenting data in a clear and concise manner"
                },
                {
                  "name": "3.2.3 Tailoring visualizations to the audience"
                }
              ]
            },
            {
              "name": "3.3 Visualization Project: Present Insights",
              "children": [
                {
                  "name": "3.3.1 Choose a dataset and analyze it"
                },
                {
                  "name": "3.3.2 Create visualizations to communicate key findings"
                },
                {
                  "name": "3.3.3 Develop a narrative to support the visualizations"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Programming for Data Analysis (Python)",
          "children": [
            {
              "name": "4.1 Python Fundamentals",
              "children": [
                {
                  "name": "4.1.1 Data types, variables, operators"
                },
                {
                  "name": "4.1.2 Control flow (loops, conditionals)"
                },
                {
                  "name": "4.1.3 Functions"
                }
              ]
            },
            {
              "name": "4.2 Data Analysis Libraries",
              "children": [
                {
                  "name": "4.2.1 NumPy (arrays, matrices)"
                },
                {
                  "name": "4.2.2 Pandas (dataframes, data manipulation)"
                },
                {
                  "name": "4.2.3 Matplotlib/Seaborn (data visualization)"
                }
              ]
            },
            {
              "name": "4.3 Python Project: Data Analysis & Modeling",
              "children": [
                {
                  "name": "4.3.1 Select a dataset"
                },
                {
                  "name": "4.3.2 Perform exploratory data analysis (EDA)"
                },
                {
                  "name": "4.3.3 Build a simple predictive model (e.g., linear regression)"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Portfolio Building & Job Search",
          "children": [
            {
              "name": "5.1 Portfolio Creation",
              "children": [
                {
                  "name": "5.1.1 Compile all completed projects"
                },
                {
                  "name": "5.1.2 Showcase your skills and insights"
                },
                {
                  "name": "5.1.3 Host your portfolio online (e.g., Github, personal website)"
                }
              ]
            },
            {
              "name": "5.2 Job Application Strategy",
              "children": [
                {
                  "name": "5.2.1 Tailor your resume and cover letter to specific job descriptions"
                },
                {
                  "name": "5.2.2 Practice your interviewing skills"
                },
                {
                  "name": "5.2.3 Network with professionals in the field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "IT consultant",
    "output": {
      "name": "IT Consultant",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core IT Concepts",
              "children": [
                {
                  "name": "1.1.1 Networking Fundamentals (TCP/IP, OSI model)"
                },
                {
                  "name": "1.1.2 Operating Systems (Windows, Linux, macOS basics)"
                },
                {
                  "name": "1.1.3 Cloud Computing Fundamentals (IaaS, PaaS, SaaS)"
                }
              ]
            },
            {
              "name": "1.2 Databases and Data Management",
              "children": [
                {
                  "name": "1.2.1 Relational Databases (SQL, MySQL, PostgreSQL)"
                },
                {
                  "name": "1.2.2 NoSQL Databases (MongoDB, Cassandra)"
                },
                {
                  "name": "1.2.3 Data Modeling and ER Diagrams"
                }
              ]
            },
            {
              "name": "1.3 Cybersecurity Basics",
              "children": [
                {
                  "name": "1.3.1 Network Security (firewalls, VPNs)"
                },
                {
                  "name": "1.3.2 Data Security (encryption, access control)"
                },
                {
                  "name": "1.3.3 Common Vulnerabilities and Exploits"
                }
              ]
            }
          ]
        },
        {
          "name": "2. IT Service Management (ITSM)",
          "children": [
            {
              "name": "2.1 ITIL Framework",
              "children": [
                {
                  "name": "2.1.1 ITIL 4 Foundation"
                },
                {
                  "name": "2.1.2 Service Lifecycle Management"
                },
                {
                  "name": "2.1.3 Project: Design an ITSM process for a small business"
                }
              ]
            },
            {
              "name": "2.2 Problem Management & Resolution",
              "children": [
                {
                  "name": "2.2.1 Root Cause Analysis"
                },
                {
                  "name": "2.2.2 Incident Management"
                },
                {
                  "name": "2.2.3 Problem Solving Techniques"
                }
              ]
            },
            {
              "name": "2.3 Service Level Agreements (SLAs)",
              "children": [
                {
                  "name": "2.3.1 Defining and Negotiating SLAs"
                },
                {
                  "name": "2.3.2 Monitoring and Reporting on SLAs"
                },
                {
                  "name": "2.3.3 Project: Create an SLA document for a hypothetical client"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Consulting Skills",
          "children": [
            {
              "name": "3.1 Client Communication",
              "children": [
                {
                  "name": "3.1.1 Active Listening and Questioning"
                },
                {
                  "name": "3.1.2 Presenting Technical Information Clearly"
                },
                {
                  "name": "3.1.3 Project: Practice client presentations and receive feedback"
                }
              ]
            },
            {
              "name": "3.2 Business Analysis",
              "children": [
                {
                  "name": "3.2.1 Requirements Gathering"
                },
                {
                  "name": "3.2.2 Process Mapping"
                },
                {
                  "name": "3.2.3 Project: Analyze a business process and recommend improvements"
                }
              ]
            },
            {
              "name": "3.3 Project Management",
              "children": [
                {
                  "name": "3.3.1 Agile Methodologies (Scrum, Kanban)"
                },
                {
                  "name": "3.3.2 Waterfall Methodologies"
                },
                {
                  "name": "3.3.3 Project: Manage a small IT project using chosen methodology"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialization & Emerging Technologies",
          "children": [
            {
              "name": "4.1 Cloud Computing Specialization (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "4.1.1 Choose a cloud provider and obtain foundational certification"
                },
                {
                  "name": "4.1.2 Learn key services (compute, storage, networking)"
                },
                {
                  "name": "4.1.3 Project: Build and deploy a simple application on chosen cloud"
                }
              ]
            },
            {
              "name": "4.2 Cybersecurity Specialization",
              "children": [
                {
                  "name": "4.2.1 Penetration Testing"
                },
                {
                  "name": "4.2.2 Security Auditing"
                },
                {
                  "name": "4.2.3 Obtain relevant security certifications (e.g., CompTIA Security+)"
                }
              ]
            },
            {
              "name": "4.3 Data Analytics and Business Intelligence",
              "children": [
                {
                  "name": "4.3.1 Data Analysis using tools like Power BI or Tableau"
                },
                {
                  "name": "4.3.2 Data visualization and reporting"
                },
                {
                  "name": "4.3.3 Project: Analyze a dataset and create insightful visualizations"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Business and Soft Skills",
          "children": [
            {
              "name": "5.1 Finance for IT Consultants",
              "children": [
                {
                  "name": "5.1.1 Pricing and invoicing"
                },
                {
                  "name": "5.1.2 Budgeting and forecasting"
                },
                {
                  "name": "5.1.3 Financial statements and analysis"
                }
              ]
            },
            {
              "name": "5.2 Legal and Contractual Aspects",
              "children": [
                {
                  "name": "5.2.1 Understanding IT contracts"
                },
                {
                  "name": "5.2.2 Intellectual property rights"
                },
                {
                  "name": "5.2.3 Liability and insurance"
                }
              ]
            },
            {
              "name": "5.3 Networking and Business Development",
              "children": [
                {
                  "name": "5.3.1 Building professional network"
                },
                {
                  "name": "5.3.2 Marketing your services"
                },
                {
                  "name": "5.3.3 Client acquisition strategies"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a IT consultant",
    "output": {
      "name": "How to Become an IT Consultant",
      "children": [
        {
          "name": "1. Foundation: IT Skills & Business Acumen",
          "children": [
            {
              "name": "1.1 Core IT Technologies",
              "children": [
                {
                  "name": "1.1.1 Networking Fundamentals (TCP/IP, subnetting)"
                },
                {
                  "name": "1.1.2 Cloud Computing (AWS, Azure, GCP - basic services)"
                },
                {
                  "name": "1.1.3 Cybersecurity Basics (threats, vulnerabilities, common security practices)"
                }
              ]
            },
            {
              "name": "1.2 Business Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Financial Statements (understanding P&L, balance sheet, cash flow)"
                },
                {
                  "name": "1.2.2 Project Management (Agile, Waterfall methodologies)"
                },
                {
                  "name": "1.2.3 Business Communication (written and verbal, presentations)"
                }
              ]
            },
            {
              "name": "1.3  IT Service Management (ITSM)",
              "children": [
                {
                  "name": "1.3.1 ITIL Framework (basic concepts and principles)"
                },
                {
                  "name": "1.3.2 Incident, Problem, and Change Management"
                },
                {
                  "name": "1.3.3 Service Level Agreements (SLAs)"
                }
              ]
            }
          ]
        },
        {
          "name": "2.  Specialization: Choosing Your Niche",
          "children": [
            {
              "name": "2.1  Cybersecurity Consulting",
              "children": [
                {
                  "name": "2.1.1 Penetration Testing Fundamentals"
                },
                {
                  "name": "2.1.2 Vulnerability Assessment and Management"
                },
                {
                  "name": "2.1.3 Security Auditing"
                }
              ]
            },
            {
              "name": "2.2 Cloud Consulting",
              "children": [
                {
                  "name": "2.2.1 Advanced Cloud Services (e.g., serverless, containers)"
                },
                {
                  "name": "2.2.2 Cloud Migration Strategies"
                },
                {
                  "name": "2.2.3 Cloud Security Best Practices"
                }
              ]
            },
            {
              "name": "2.3  Data Analytics Consulting",
              "children": [
                {
                  "name": "2.3.1 Data Warehousing and Business Intelligence"
                },
                {
                  "name": "2.3.2 Data Visualization and Reporting (Tableau, Power BI)"
                },
                {
                  "name": "2.3.3 Big Data Technologies (Hadoop, Spark - basic understanding)"
                }
              ]
            }
          ]
        },
        {
          "name": "3.  Developing Consulting Skills",
          "children": [
            {
              "name": "3.1 Client Management",
              "children": [
                {
                  "name": "3.1.1 Needs Assessment and Solution Design"
                },
                {
                  "name": "3.1.2 Proposal Writing and Presentation"
                },
                {
                  "name": "3.1.3 Contract Negotiation"
                }
              ]
            },
            {
              "name": "3.2 Problem-Solving & Analysis",
              "children": [
                {
                  "name": "3.2.1 Root Cause Analysis"
                },
                {
                  "name": "3.2.2 Critical Thinking and Decision Making"
                },
                {
                  "name": "3.2.3 Data Interpretation and Reporting"
                }
              ]
            },
            {
              "name": "3.3  Project Delivery",
              "children": [
                {
                  "name": "3.3.1 Project Planning and Execution"
                },
                {
                  "name": "3.3.2 Risk Management"
                },
                {
                  "name": "3.3.3 Team Leadership (if applicable)"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Building Your Business",
          "children": [
            {
              "name": "4.1 Networking & Marketing",
              "children": [
                {
                  "name": "4.1.1 Building a Professional Network (LinkedIn, industry events)"
                },
                {
                  "name": "4.1.2 Creating a Website and Online Portfolio"
                },
                {
                  "name": "4.1.3 Content Marketing (blogging, articles)"
                }
              ]
            },
            {
              "name": "4.2 Legal & Financial Aspects",
              "children": [
                {
                  "name": "4.2.1 Business Registration and Licensing"
                },
                {
                  "name": "4.2.2 Insurance and Liability"
                },
                {
                  "name": "4.2.3 Financial Management (invoicing, expense tracking)"
                }
              ]
            },
            {
              "name": "4.3  Sales & Client Acquisition",
              "children": [
                {
                  "name": "4.3.1 Identifying Target Clients"
                },
                {
                  "name": "4.3.2 Lead Generation Strategies"
                },
                {
                  "name": "4.3.3 Closing Deals"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning & Growth",
          "children": [
            {
              "name": "5.1 Certifications",
              "children": [
                {
                  "name": "5.1.1 Choose relevant certifications based on your specialization (e.g., CompTIA Security+, AWS Certified Solutions Architect)"
                },
                {
                  "name": "5.1.2  Maintain certifications through continued education"
                },
                {
                  "name": "5.1.3 Consider advanced certifications as your expertise grows"
                }
              ]
            },
            {
              "name": "5.2  Professional Development",
              "children": [
                {
                  "name": "5.2.1 Attend industry conferences and workshops"
                },
                {
                  "name": "5.2.2 Join professional organizations"
                },
                {
                  "name": "5.2.3 Participate in online communities and forums"
                }
              ]
            },
            {
              "name": "5.3  Stay Updated",
              "children": [
                {
                  "name": "5.3.1 Read industry publications and blogs"
                },
                {
                  "name": "5.3.2 Follow industry influencers on social media"
                },
                {
                  "name": "5.3.3 Engage in continuous learning through online courses and training"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Rust Developer",
    "output": {
      "name": "Rust Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Ownership"
                }
              ]
            },
            {
              "name": "1.2 Ownership and Borrowing",
              "children": [
                {
                  "name": "1.2.1 Ownership rules"
                },
                {
                  "name": "1.2.2 Borrowing and lifetimes"
                },
                {
                  "name": "1.2.3 References and mutability"
                },
                {
                  "name": "1.2.4 Project: Simple memory management exercise"
                }
              ]
            },
            {
              "name": "1.3 Data Structures",
              "children": [
                {
                  "name": "1.3.1 Arrays and vectors"
                },
                {
                  "name": "1.3.2 Tuples"
                },
                {
                  "name": "1.3.3 Structs and enums"
                },
                {
                  "name": "1.3.4 Project: Create a simple struct representing a person"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Error Handling",
              "children": [
                {
                  "name": "2.1.1 Result type"
                },
                {
                  "name": "2.1.2 Panic and recover"
                },
                {
                  "name": "2.1.3 Custom error types"
                },
                {
                  "name": "2.1.4 Project: Implement error handling in a file reading program"
                }
              ]
            },
            {
              "name": "2.2 Generics and Traits",
              "children": [
                {
                  "name": "2.2.1 Generic functions and types"
                },
                {
                  "name": "2.2.2 Traits and trait bounds"
                },
                {
                  "name": "2.2.3 Implementing traits"
                },
                {
                  "name": "2.2.4 Project: Create a generic function that works with different data types"
                }
              ]
            },
            {
              "name": "2.3 Smart Pointers",
              "children": [
                {
                  "name": "2.3.1 Box"
                },
                {
                  "name": "2.3.2 Rc and Arc"
                },
                {
                  "name": "2.3.3 Mutex and other synchronization primitives"
                },
                {
                  "name": "2.3.4 Project: Implement a simple thread-safe counter"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Concurrency",
              "children": [
                {
                  "name": "3.1.1 Threads and channels"
                },
                {
                  "name": "3.1.2 Mutexes and other synchronization primitives"
                },
                {
                  "name": "3.1.3 Async/await"
                },
                {
                  "name": "3.1.4 Project: Build a simple concurrent web server"
                }
              ]
            },
            {
              "name": "3.2 Advanced Ownership and Lifetimes",
              "children": [
                {
                  "name": "3.2.1 Static lifetimes"
                },
                {
                  "name": "3.2.2 Advanced borrowing patterns"
                },
                {
                  "name": "3.2.3 Unsafe Rust (use with caution!)"
                }
              ]
            },
            {
              "name": "3.3 Macros and Metaprogramming",
              "children": [
                {
                  "name": "3.3.1 Declarative macros"
                },
                {
                  "name": "3.3.2 Procedural macros"
                },
                {
                  "name": "3.3.3 Attribute macros"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  External Libraries and Ecosystem",
          "children": [
            {
              "name": "4.1 Cargo",
              "children": [
                {
                  "name": "4.1.1 Package management"
                },
                {
                  "name": "4.1.2 Dependencies"
                },
                {
                  "name": "4.1.3 Workspaces"
                }
              ]
            },
            {
              "name": "4.2 Common crates",
              "children": [
                {
                  "name": "4.2.1 Serde (serialization/deserialization)"
                },
                {
                  "name": "4.2.2 Tokio (async runtime)"
                },
                {
                  "name": "4.2.3 reqwest (HTTP client)"
                }
              ]
            },
            {
              "name": "4.3  Testing",
              "children": [
                {
                  "name": "4.3.1 Unit testing"
                },
                {
                  "name": "4.3.2 Integration testing"
                },
                {
                  "name": "4.3.3 Property-based testing"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Projects and Applications",
          "children": [
            {
              "name": "5.1  Command-line tools",
              "children": [
                {
                  "name": "5.1.1  Build a simple CLI application"
                }
              ]
            },
            {
              "name": "5.2 Web applications",
              "children": [
                {
                  "name": "5.2.1 Explore web frameworks like Actix Web or Rocket"
                }
              ]
            },
            {
              "name": "5.3 Embedded Systems",
              "children": [
                {
                  "name": "5.3.1 Learn about Rust's capabilities in embedded programming"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "guide to become a Rust Developer",
    "output": {
      "name": "Guide to Become a Rust Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, and Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Ownership"
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays and Vectors"
                },
                {
                  "name": "1.2.2 Tuples"
                },
                {
                  "name": "1.2.3 Structs and Enums"
                },
                {
                  "name": "1.2.4 Practical Exercise: Create a simple data structure to represent a person"
                }
              ]
            },
            {
              "name": "1.3 Ownership and Borrowing",
              "children": [
                {
                  "name": "1.3.1 Ownership rules"
                },
                {
                  "name": "1.3.2 Borrowing and references"
                },
                {
                  "name": "1.3.3 Lifetimes"
                },
                {
                  "name": "1.3.4 Practical Exercise: Implement a function that takes ownership of a String and returns its length"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Error Handling",
              "children": [
                {
                  "name": "2.1.1 Result type"
                },
                {
                  "name": "2.1.2 Panic and unwrap"
                },
                {
                  "name": "2.1.3 Custom error types"
                },
                {
                  "name": "2.1.4 Practical Exercise: Implement a function that reads a file and handles potential errors"
                }
              ]
            },
            {
              "name": "2.2 Generics and Traits",
              "children": [
                {
                  "name": "2.2.1 Generic functions and structs"
                },
                {
                  "name": "2.2.2 Traits and trait bounds"
                },
                {
                  "name": "2.2.3 Implementing traits"
                },
                {
                  "name": "2.2.4 Practical Exercise: Create a generic function to find the maximum of two values of any comparable type"
                }
              ]
            },
            {
              "name": "2.3 Concurrency",
              "children": [
                {
                  "name": "2.3.1 Threads"
                },
                {
                  "name": "2.3.2 Mutexes and synchronization"
                },
                {
                  "name": "2.3.3 Channels"
                },
                {
                  "name": "2.3.4 Practical Exercise: Implement a simple producer-consumer program using channels"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Smart Pointers",
              "children": [
                {
                  "name": "3.1.1 Box"
                },
                {
                  "name": "3.1.2 Rc and Arc"
                },
                {
                  "name": "3.1.3 Mutex"
                }
              ]
            },
            {
              "name": "3.2 Advanced Ownership and Lifetimes",
              "children": [
                {
                  "name": "3.2.1 Static lifetimes"
                },
                {
                  "name": "3.2.2 Elision"
                },
                {
                  "name": "3.2.3 Advanced borrowing scenarios"
                }
              ]
            },
            {
              "name": "3.3 Unsafe Rust",
              "children": [
                {
                  "name": "3.3.1 Understanding unsafe code"
                },
                {
                  "name": "3.3.2 Working with raw pointers"
                },
                {
                  "name": "3.3.3 Using `unsafe` blocks responsibly"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Building Applications",
          "children": [
            {
              "name": "4.1 Command-Line Applications",
              "children": [
                {
                  "name": "4.1.1 Using clap or structopt for argument parsing"
                },
                {
                  "name": "4.1.2 Handling IO operations"
                },
                {
                  "name": "4.1.3 Project: Build a simple CLI tool"
                }
              ]
            },
            {
              "name": "4.2 Web Applications (with Actix Web or Rocket)",
              "children": [
                {
                  "name": "4.2.1 Setting up a basic web server"
                },
                {
                  "name": "4.2.2 Handling requests and responses"
                },
                {
                  "name": "4.2.3 Routing and middleware"
                },
                {
                  "name": "4.2.4 Project: Build a simple REST API"
                }
              ]
            },
            {
              "name": "4.3 Working with External Libraries",
              "children": [
                {
                  "name": "4.3.1 Using Cargo to manage dependencies"
                },
                {
                  "name": "4.3.2 Understanding crates.io"
                },
                {
                  "name": "4.3.3 Project: Integrate a database library into your application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Testing and Deployment",
          "children": [
            {
              "name": "5.1 Unit Testing with Rust's testing framework",
              "children": [
                {
                  "name": "5.1.1 Writing unit tests"
                },
                {
                  "name": "5.1.2 Mocking and testing external dependencies"
                },
                {
                  "name": "5.1.3 Project: Write comprehensive unit tests for a previously built project"
                }
              ]
            },
            {
              "name": "5.2 Integration Testing",
              "children": [
                {
                  "name": "5.2.1 Testing interactions between components"
                },
                {
                  "name": "5.2.2 Strategies for integration testing"
                }
              ]
            },
            {
              "name": "5.3 Deployment Strategies",
              "children": [
                {
                  "name": "5.3.1 Building executables for different platforms"
                },
                {
                  "name": "5.3.2 Using Docker for containerization"
                },
                {
                  "name": "5.3.3 Deployment to the cloud (AWS, Azure, Google Cloud)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn data science in 1 month",
    "output": {
      "name": "How to Learn Data Science in 1 Month",
      "children": [
        {
          "name": "1. Foundational Mathematics & Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Probability & Statistics",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics"
                },
                {
                  "name": "1.2.2 Probability Distributions"
                },
                {
                  "name": "1.2.3 Hypothesis Testing"
                }
              ]
            },
            {
              "name": "1.3 Python Programming",
              "children": [
                {
                  "name": "1.3.1 Data Structures (Lists, Dictionaries, Sets)"
                },
                {
                  "name": "1.3.2 Control Flow (Loops, Conditionals)"
                },
                {
                  "name": "1.3.3 Functions and Object-Oriented Programming (Basic)"
                },
                {
                  "name": "1.3.4 Project: Simple Data Manipulation Script"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Wrangling & Exploration",
          "children": [
            {
              "name": "2.1 Data Importing & Cleaning",
              "children": [
                {
                  "name": "2.1.1 Importing Data (CSV, Excel, SQL)"
                },
                {
                  "name": "2.1.2 Handling Missing Values"
                },
                {
                  "name": "2.1.3 Data Type Conversion"
                }
              ]
            },
            {
              "name": "2.2 Data Exploration & Visualization",
              "children": [
                {
                  "name": "2.2.1 Descriptive Statistics Calculation"
                },
                {
                  "name": "2.2.2 Data Visualization with Matplotlib & Seaborn"
                },
                {
                  "name": "2.2.3 Project: Exploratory Data Analysis of a Dataset"
                }
              ]
            },
            {
              "name": "2.3 Pandas Library",
              "children": [
                {
                  "name": "2.3.1 Data Manipulation with Pandas"
                },
                {
                  "name": "2.3.2 Data Aggregation and Grouping"
                },
                {
                  "name": "2.3.3 Data Cleaning with Pandas"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Machine Learning Fundamentals",
          "children": [
            {
              "name": "3.1 Supervised Learning",
              "children": [
                {
                  "name": "3.1.1 Linear Regression"
                },
                {
                  "name": "3.1.2 Logistic Regression"
                },
                {
                  "name": "3.1.3 Decision Trees"
                }
              ]
            },
            {
              "name": "3.2 Unsupervised Learning",
              "children": [
                {
                  "name": "3.2.1 K-Means Clustering"
                },
                {
                  "name": "3.2.2 Principal Component Analysis (PCA)"
                },
                {
                  "name": "3.2.3 Project: Apply Clustering to a Dataset"
                }
              ]
            },
            {
              "name": "3.3 Model Evaluation",
              "children": [
                {
                  "name": "3.3.1 Metrics (Accuracy, Precision, Recall, F1-score)"
                },
                {
                  "name": "3.3.2 Cross-Validation"
                },
                {
                  "name": "3.3.3 Confusion Matrix"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Practical Application & Deployment (Focus on one)",
          "children": [
            {
              "name": "4.1  Building a Predictive Model",
              "children": [
                {
                  "name": "4.1.1  Choosing the right algorithm"
                },
                {
                  "name": "4.1.2  Feature Engineering"
                },
                {
                  "name": "4.1.3  Hyperparameter Tuning"
                },
                {
                  "name": "4.1.4 Project: Build a complete predictive model"
                }
              ]
            },
            {
              "name": "4.2  Working with APIs",
              "children": [
                {
                  "name": "4.2.1  Understanding REST APIs"
                },
                {
                  "name": "4.2.2  Fetching data from APIs"
                },
                {
                  "name": "4.2.3  Project: Build a data pipeline using APIs"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Tools and Technologies (Brief Overview)",
          "children": [
            {
              "name": "5.1 Cloud Computing (AWS, GCP, Azure)",
              "children": [
                {
                  "name": "5.1.1 Basic Concepts"
                },
                {
                  "name": "5.1.2 Choosing a platform"
                }
              ]
            },
            {
              "name": "5.2 Version Control (Git)",
              "children": [
                {
                  "name": "5.2.1 Basic Git commands"
                },
                {
                  "name": "5.2.2 Github/Gitlab"
                }
              ]
            },
            {
              "name": "5.3 SQL Databases",
              "children": [
                {
                  "name": "5.3.1 Basic SQL queries"
                },
                {
                  "name": "5.3.2 Relational database design"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "SQL",
    "output": {
      "name": "SQL",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Databases"
                },
                {
                  "name": "1.1.2 Tables, Rows, and Columns"
                },
                {
                  "name": "1.1.3 Primary and Foreign Keys"
                }
              ]
            },
            {
              "name": "1.2 Basic SQL Syntax",
              "children": [
                {
                  "name": "1.2.1 SELECT Statements"
                },
                {
                  "name": "1.2.2 WHERE Clause and Filtering"
                },
                {
                  "name": "1.2.3 ORDER BY Clause and Sorting",
                  "children": [
                    {
                      "name": "1.2.3.1 Exercise: Sort a table by multiple columns"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Data Types and Operators",
              "children": [
                {
                  "name": "1.3.1 Number, Text, Date Data Types"
                },
                {
                  "name": "1.3.2 Comparison Operators (=, <>, >, <, >=, <=)"
                },
                {
                  "name": "1.3.3 Logical Operators (AND, OR, NOT)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Manipulation",
          "children": [
            {
              "name": "2.1 INSERT Statements",
              "children": [
                {
                  "name": "2.1.1 Inserting Single Rows"
                },
                {
                  "name": "2.1.2 Inserting Multiple Rows"
                },
                {
                  "name": "2.1.3 Exercise: Insert data into a table"
                }
              ]
            },
            {
              "name": "2.2 UPDATE Statements",
              "children": [
                {
                  "name": "2.2.1 Updating Single Rows"
                },
                {
                  "name": "2.2.2 Updating Multiple Rows"
                },
                {
                  "name": "2.2.3 Exercise: Update data in a table based on criteria"
                }
              ]
            },
            {
              "name": "2.3 DELETE Statements",
              "children": [
                {
                  "name": "2.3.1 Deleting Rows based on condition"
                },
                {
                  "name": "2.3.2 Exercise: Delete data from a table based on condition"
                },
                {
                  "name": "2.3.3 Understanding potential data loss and backup strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Aggregation and Grouping",
          "children": [
            {
              "name": "3.1 Aggregate Functions",
              "children": [
                {
                  "name": "3.1.1 COUNT, SUM, AVG, MIN, MAX"
                },
                {
                  "name": "3.1.2 Exercise: Calculate aggregate statistics from a table"
                }
              ]
            },
            {
              "name": "3.2 GROUP BY Clause",
              "children": [
                {
                  "name": "3.2.1 Grouping data based on columns"
                },
                {
                  "name": "3.2.2 Combining GROUP BY with aggregate functions"
                },
                {
                  "name": "3.2.3 Exercise: Group data and calculate aggregates"
                }
              ]
            },
            {
              "name": "3.3 HAVING Clause",
              "children": [
                {
                  "name": "3.3.1 Filtering grouped data"
                },
                {
                  "name": "3.3.2 Exercise: Filter grouped data based on aggregate values"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Joins and Subqueries",
          "children": [
            {
              "name": "4.1 JOIN Operations",
              "children": [
                {
                  "name": "4.1.1 INNER JOIN"
                },
                {
                  "name": "4.1.2 LEFT JOIN, RIGHT JOIN, FULL OUTER JOIN"
                },
                {
                  "name": "4.1.3 Exercise: Join multiple tables and retrieve data"
                }
              ]
            },
            {
              "name": "4.2 Subqueries",
              "children": [
                {
                  "name": "4.2.1 Subqueries in SELECT, FROM, and WHERE clauses"
                },
                {
                  "name": "4.2.2 Correlated Subqueries"
                },
                {
                  "name": "4.2.3 Exercise: Use subqueries to retrieve complex data"
                }
              ]
            },
            {
              "name": "4.3 UNION, INTERSECT, EXCEPT",
              "children": [
                {
                  "name": "4.3.1 Combining result sets from multiple queries"
                },
                {
                  "name": "4.3.2 Exercise: Combine results from different tables"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Indexing",
              "children": [
                {
                  "name": "5.1.1 Types of indexes"
                },
                {
                  "name": "5.1.2 Performance optimization using indexes"
                }
              ]
            },
            {
              "name": "5.2 Transactions and Concurrency",
              "children": [
                {
                  "name": "5.2.1 ACID properties"
                },
                {
                  "name": "5.2.2 Handling concurrent access"
                }
              ]
            },
            {
              "name": "5.3 Stored Procedures and Functions",
              "children": [
                {
                  "name": "5.3.1 Creating and using stored procedures"
                },
                {
                  "name": "5.3.2 Creating and using functions"
                }
              ]
            },
            {
              "name": "5.4 Database Design Normalization",
              "children": [
                {
                  "name": "5.4.1 First, second, and third normal forms"
                },
                {
                  "name": "5.4.2 Practical exercises in database design"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How can i become a Data scientist",
    "output": {
      "name": "How can I become a Data Scientist",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Mathematics & Statistics",
              "children": [
                {
                  "name": "1.1.1 Linear Algebra"
                },
                {
                  "name": "1.1.2 Probability & Statistics"
                },
                {
                  "name": "1.1.3 Calculus (Basic Derivatives & Integrals)"
                }
              ]
            },
            {
              "name": "1.2 Programming",
              "children": [
                {
                  "name": "1.2.1 Python Fundamentals (Data Structures, Control Flow)"
                },
                {
                  "name": "1.2.2 Python Libraries (NumPy, Pandas)"
                },
                {
                  "name": "1.2.3 Version Control (Git) - Project: Create a GitHub repository for your learning journey"
                }
              ]
            },
            {
              "name": "1.3 Data Wrangling & Exploration",
              "children": [
                {
                  "name": "1.3.1 Data Cleaning (Handling Missing Values, Outliers)"
                },
                {
                  "name": "1.3.2 Data Transformation (Feature Scaling, Encoding)"
                },
                {
                  "name": "1.3.3 Exploratory Data Analysis (EDA) with Visualization (Matplotlib, Seaborn) - Project: Perform EDA on a public dataset and create insightful visualizations"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (Decision Trees, SVM, Naive Bayes)"
                },
                {
                  "name": "2.1.3 Model Evaluation Metrics (Accuracy, Precision, Recall, F1-score)"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-Means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "2.2.3 Anomaly Detection"
                }
              ]
            },
            {
              "name": "2.3 Model Selection & Tuning",
              "children": [
                {
                  "name": "2.3.1 Cross-Validation"
                },
                {
                  "name": "2.3.2 Hyperparameter Tuning (Grid Search, Randomized Search)"
                },
                {
                  "name": "2.3.3 Bias-Variance Tradeoff - Project: Build and tune a classification model on a dataset of your choice"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning (Optional, but highly recommended)",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Introduction to Neural Networks"
                },
                {
                  "name": "3.1.2 Backpropagation"
                },
                {
                  "name": "3.1.3 Activation Functions"
                }
              ]
            },
            {
              "name": "3.2 Deep Learning Frameworks",
              "children": [
                {
                  "name": "3.2.1 TensorFlow/Keras"
                },
                {
                  "name": "3.2.2 PyTorch"
                }
              ]
            },
            {
              "name": "3.3 Applications",
              "children": [
                {
                  "name": "3.3.1 Convolutional Neural Networks (CNNs) for Image Recognition"
                },
                {
                  "name": "3.3.2 Recurrent Neural Networks (RNNs) for Time Series Analysis"
                },
                {
                  "name": "3.3.3 Project: Build a deep learning model for a specific application (e.g., image classification, sentiment analysis)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Big Data Technologies (Optional, but beneficial)",
          "children": [
            {
              "name": "4.1 Databases",
              "children": [
                {
                  "name": "4.1.1 SQL"
                },
                {
                  "name": "4.1.2 NoSQL (MongoDB, Cassandra)"
                }
              ]
            },
            {
              "name": "4.2 Cloud Computing",
              "children": [
                {
                  "name": "4.2.1 AWS, Azure, or GCP"
                },
                {
                  "name": "4.2.2 Cloud Storage Services (S3, Blob Storage)"
                }
              ]
            },
            {
              "name": "4.3 Big Data Processing Frameworks",
              "children": [
                {
                  "name": "4.3.1 Spark"
                },
                {
                  "name": "4.3.2 Hadoop"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment & Communication",
          "children": [
            {
              "name": "5.1 Model Deployment",
              "children": [
                {
                  "name": "5.1.1 REST APIs"
                },
                {
                  "name": "5.1.2 Cloud Deployment (AWS SageMaker, Azure ML Studio)"
                },
                {
                  "name": "5.1.3 Containerization (Docker)"
                }
              ]
            },
            {
              "name": "5.2 Data Storytelling & Visualization",
              "children": [
                {
                  "name": "5.2.1 Data Visualization Tools (Tableau, Power BI)"
                },
                {
                  "name": "5.2.2 Communicating Results Effectively (Presentations, Reports)"
                }
              ]
            },
            {
              "name": "5.3 Portfolio Building",
              "children": [
                {
                  "name": "5.3.1 Building a portfolio of projects showcasing your skills"
                },
                {
                  "name": "5.3.2 Participating in Kaggle competitions"
                },
                {
                  "name": "5.3.3 Contributing to open-source projects"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "C/C++ roadmap",
    "output": {
      "name": "C/C++ roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types"
                },
                {
                  "name": "1.1.2 Operators and Expressions"
                },
                {
                  "name": "1.1.3 Control Flow (if-else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Functions and Modular Programming",
              "children": [
                {
                  "name": "1.2.1 Function Definition and Calls"
                },
                {
                  "name": "1.2.2 Function Parameters and Return Values"
                },
                {
                  "name": "1.2.3 Scope and Lifetime of Variables",
                  "children": [
                    {
                      "name": "1.2.3.1 Exercise: Create a program with local and global variables to demonstrate scope"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Arrays and Pointers",
              "children": [
                {
                  "name": "1.3.1 Array Declaration and Initialization"
                },
                {
                  "name": "1.3.2 Pointer Arithmetic and Manipulation"
                },
                {
                  "name": "1.3.3 Relationship between Arrays and Pointers",
                  "children": [
                    {
                      "name": "1.3.3.1 Exercise: Implement a function to reverse an array using pointers"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.4 Input/Output Operations",
              "children": [
                {
                  "name": "1.4.1 Using `stdio.h` functions (printf, scanf)"
                },
                {
                  "name": "1.4.2 File Handling (opening, reading, writing)"
                },
                {
                  "name": "1.4.3 Exercise: Create a program that reads data from a file and writes to another file."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP) in C++",
          "children": [
            {
              "name": "2.1 Classes and Objects",
              "children": [
                {
                  "name": "2.1.1 Defining Classes and Member Variables"
                },
                {
                  "name": "2.1.2 Member Functions and Methods"
                },
                {
                  "name": "2.1.3 Constructors and Destructors"
                }
              ]
            },
            {
              "name": "2.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "2.2.1 Single, Multiple, and Multilevel Inheritance"
                },
                {
                  "name": "2.2.2 Polymorphism (virtual functions, function overriding)"
                },
                {
                  "name": "2.2.3 Abstract Classes and Interfaces"
                }
              ]
            },
            {
              "name": "2.3 Encapsulation and Data Hiding",
              "children": [
                {
                  "name": "2.3.1 Access Specifiers (public, private, protected)"
                },
                {
                  "name": "2.3.2 Getter and Setter Methods"
                },
                {
                  "name": "2.3.3 Exercise: Design a class representing a bank account with encapsulation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Standard Template Library (STL)",
          "children": [
            {
              "name": "3.1 Containers",
              "children": [
                {
                  "name": "3.1.1 Vectors"
                },
                {
                  "name": "3.1.2 Lists"
                },
                {
                  "name": "3.1.3 Maps and Sets"
                }
              ]
            },
            {
              "name": "3.2 Algorithms",
              "children": [
                {
                  "name": "3.2.1 Sorting Algorithms"
                },
                {
                  "name": "3.2.2 Searching Algorithms"
                },
                {
                  "name": "3.2.3 Exercise: Implement a program that sorts a vector using STL algorithms"
                }
              ]
            },
            {
              "name": "3.3 Iterators",
              "children": [
                {
                  "name": "3.3.1 Iterator Types"
                },
                {
                  "name": "3.3.2 Using Iterators with Algorithms and Containers"
                },
                {
                  "name": "3.3.3 Exercise: Traverse a list using iterators and print each element"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced C++",
          "children": [
            {
              "name": "4.1 Templates",
              "children": [
                {
                  "name": "4.1.1 Function Templates"
                },
                {
                  "name": "4.1.2 Class Templates"
                },
                {
                  "name": "4.1.3 Exercise: Create a generic function to find the maximum of two values using templates"
                }
              ]
            },
            {
              "name": "4.2 Exception Handling",
              "children": [
                {
                  "name": "4.2.1 try-catch blocks"
                },
                {
                  "name": "4.2.2 Exception Specifications"
                },
                {
                  "name": "4.2.3 Exercise: Implement exception handling in a program that reads data from a file"
                }
              ]
            },
            {
              "name": "4.3 Smart Pointers",
              "children": [
                {
                  "name": "4.3.1 Unique Pointers"
                },
                {
                  "name": "4.3.2 Shared Pointers"
                },
                {
                  "name": "4.3.3 Exercise: Use smart pointers to manage memory dynamically"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Projects",
          "children": [
            {
              "name": "5.1 Simple Calculator"
            },
            {
              "name": "5.2 Student Management System"
            },
            {
              "name": "5.3 To-Do List Application"
            },
            {
              "name": "5.4 Game Development (Simple 2D game)"
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn C/C++ roadmap",
    "output": {
      "name": "i want to learn C/C++ roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types (int, float, char, etc.)"
                },
                {
                  "name": "1.1.2 Operators (arithmetic, logical, bitwise)"
                },
                {
                  "name": "1.1.3 Control Flow (if-else, switch, loops)"
                }
              ]
            },
            {
              "name": "1.2 Input/Output",
              "children": [
                {
                  "name": "1.2.1 Standard Input/Output (printf, scanf, cout, cin)"
                },
                {
                  "name": "1.2.2 File Handling (reading and writing files)"
                },
                {
                  "name": "1.2.3 Error Handling (basic error checks)"
                }
              ]
            },
            {
              "name": "1.3 Arrays and Strings",
              "children": [
                {
                  "name": "1.3.1 Array declaration, initialization, and manipulation"
                },
                {
                  "name": "1.3.2 String manipulation (using standard library functions)"
                },
                {
                  "name": "1.3.3 Project: Simple text-based game (e.g., number guessing game)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Functions and Pointers",
          "children": [
            {
              "name": "2.1 Functions",
              "children": [
                {
                  "name": "2.1.1 Function declaration and definition"
                },
                {
                  "name": "2.1.2 Function parameters and return values"
                },
                {
                  "name": "2.1.3 Function prototypes and header files"
                }
              ]
            },
            {
              "name": "2.2 Pointers",
              "children": [
                {
                  "name": "2.2.1 Understanding pointer variables and addresses"
                },
                {
                  "name": "2.2.2 Pointer arithmetic and dereferencing"
                },
                {
                  "name": "2.2.3 Pointers and arrays"
                }
              ]
            },
            {
              "name": "2.3 Dynamic Memory Allocation",
              "children": [
                {
                  "name": "2.3.1 malloc, calloc, realloc, free"
                },
                {
                  "name": "2.3.2 Memory leaks and how to avoid them"
                },
                {
                  "name": "2.3.3 Project: Dynamically sized array implementation"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Object-Oriented Programming (OOP) in C++",
          "children": [
            {
              "name": "3.1 Classes and Objects",
              "children": [
                {
                  "name": "3.1.1 Defining classes and creating objects"
                },
                {
                  "name": "3.1.2 Member variables and member functions"
                },
                {
                  "name": "3.1.3 Access specifiers (public, private, protected)"
                }
              ]
            },
            {
              "name": "3.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "3.2.1 Different types of inheritance (single, multiple, etc.)"
                },
                {
                  "name": "3.2.2 Polymorphism (virtual functions, runtime polymorphism)"
                },
                {
                  "name": "3.2.3 Abstract classes and interfaces"
                }
              ]
            },
            {
              "name": "3.3 Encapsulation and Data Abstraction",
              "children": [
                {
                  "name": "3.3.1 Encapsulation principles"
                },
                {
                  "name": "3.3.2 Data hiding and access control"
                },
                {
                  "name": "3.3.3 Project: Simple class-based program (e.g., a bank account system)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Standard Template Library (STL)",
          "children": [
            {
              "name": "4.1 Containers",
              "children": [
                {
                  "name": "4.1.1 Vectors, lists, deques"
                },
                {
                  "name": "4.1.2 Maps, sets, unordered maps, unordered sets"
                }
              ]
            },
            {
              "name": "4.2 Algorithms",
              "children": [
                {
                  "name": "4.2.1 Sorting algorithms (sort, stable_sort)"
                },
                {
                  "name": "4.2.2 Searching algorithms (find, binary_search)"
                },
                {
                  "name": "4.2.3 Other useful algorithms (e.g., accumulate, transform)"
                }
              ]
            },
            {
              "name": "4.3 Iterators",
              "children": [
                {
                  "name": "4.3.1 Iterator types and usage"
                },
                {
                  "name": "4.3.2 Iterating through containers"
                },
                {
                  "name": "4.3.3 Project: Implementing a custom container with iterators"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics (Optional)",
          "children": [
            {
              "name": "5.1 Templates",
              "children": [
                {
                  "name": "5.1.1 Function templates"
                },
                {
                  "name": "5.1.2 Class templates"
                }
              ]
            },
            {
              "name": "5.2 Exception Handling",
              "children": [
                {
                  "name": "5.2.1 try-catch blocks"
                },
                {
                  "name": "5.2.2 Exception classes"
                }
              ]
            },
            {
              "name": "5.3  Memory Management (Advanced)",
              "children": [
                {
                  "name": "5.3.1 Smart pointers"
                },
                {
                  "name": "5.3.2 RAII (Resource Acquisition Is Initialization)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "what's the path to learn C/C++?",
    "output": {
      "name": "What's the path to learn C/C++?",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types (int, float, char, etc.)"
                },
                {
                  "name": "1.1.2 Operators (arithmetic, logical, bitwise)"
                },
                {
                  "name": "1.1.3 Control Flow (if-else, for, while, switch)"
                }
              ]
            },
            {
              "name": "1.2 Basic Input/Output",
              "children": [
                {
                  "name": "1.2.1 Standard Input/Output (using stdin, stdout, stderr)"
                },
                {
                  "name": "1.2.2 File I/O (reading and writing to files)"
                },
                {
                  "name": "1.2.3 Formatted Output (printf, scanf, cout, cin)"
                }
              ]
            },
            {
              "name": "1.3 Arrays and Strings",
              "children": [
                {
                  "name": "1.3.1 Array declaration, initialization, and manipulation"
                },
                {
                  "name": "1.3.2 String manipulation (using standard library functions)"
                },
                {
                  "name": "1.3.3 Exercise: Implement a simple text-based game (e.g., number guessing game)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate C/C++",
          "children": [
            {
              "name": "2.1 Functions and Pointers",
              "children": [
                {
                  "name": "2.1.1 Function declaration, definition, and calls"
                },
                {
                  "name": "2.1.2 Pointers and their usage"
                },
                {
                  "name": "2.1.3 Pointer arithmetic and dynamic memory allocation (malloc, free)"
                }
              ]
            },
            {
              "name": "2.2 Structures and Unions",
              "children": [
                {
                  "name": "2.2.1 Defining and using structures"
                },
                {
                  "name": "2.2.2 Unions and their applications"
                },
                {
                  "name": "2.2.3 Exercise: Create a structure to represent a student's information and write a function to manipulate it."
                }
              ]
            },
            {
              "name": "2.3 Introduction to Object-Oriented Programming (OOP) Concepts (C++)",
              "children": [
                {
                  "name": "2.3.1 Classes and Objects"
                },
                {
                  "name": "2.3.2 Encapsulation, Inheritance, Polymorphism"
                },
                {
                  "name": "2.3.3 Exercise: Create a simple class hierarchy representing shapes (circle, square, etc.)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced C/C++",
          "children": [
            {
              "name": "3.1 Memory Management",
              "children": [
                {
                  "name": "3.1.1 Deep dive into dynamic memory allocation"
                },
                {
                  "name": "3.1.2 Memory leaks and how to prevent them"
                },
                {
                  "name": "3.1.3 Smart pointers (unique_ptr, shared_ptr) in C++"
                }
              ]
            },
            {
              "name": "3.2 Standard Template Library (STL)",
              "children": [
                {
                  "name": "3.2.1 Vectors, Lists, Maps, Sets"
                },
                {
                  "name": "3.2.2 Algorithms and iterators"
                },
                {
                  "name": "3.2.3 Exercise: Implement a simple address book using STL containers."
                }
              ]
            },
            {
              "name": "3.3 Advanced OOP Concepts (C++)",
              "children": [
                {
                  "name": "3.3.1 Operator overloading"
                },
                {
                  "name": "3.3.2 Virtual functions and polymorphism"
                },
                {
                  "name": "3.3.3 Templates and generic programming"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  C++ Specific Features",
          "children": [
            {
              "name": "4.1 Exception Handling",
              "children": [
                {
                  "name": "4.1.1 try-catch blocks"
                },
                {
                  "name": "4.1.2 Exception specifications"
                },
                {
                  "name": "4.1.3 Custom exceptions"
                }
              ]
            },
            {
              "name": "4.2  Input/Output Streams",
              "children": [
                {
                  "name": "4.2.1 File streams"
                },
                {
                  "name": "4.2.2 String streams"
                },
                {
                  "name": "4.2.3 Stream manipulators"
                }
              ]
            },
            {
              "name": "4.3  Lambda Expressions and Function Objects",
              "children": [
                {
                  "name": "4.3.1 Defining and using lambda expressions"
                },
                {
                  "name": "4.3.2 Capturing variables in lambda expressions"
                },
                {
                  "name": "4.3.3 Function objects (functors)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Projects and Practice",
          "children": [
            {
              "name": "5.1 Simple Projects",
              "children": [
                {
                  "name": "5.1.1 To-do list application"
                },
                {
                  "name": "5.1.2 Simple calculator"
                },
                {
                  "name": "5.1.3 Text-based adventure game"
                }
              ]
            },
            {
              "name": "5.2 Intermediate Projects",
              "children": [
                {
                  "name": "5.2.1 Student management system"
                },
                {
                  "name": "5.2.2 Basic text editor"
                },
                {
                  "name": "5.2.3 Simple database application"
                }
              ]
            },
            {
              "name": "5.3 Advanced Projects",
              "children": [
                {
                  "name": "5.3.1 Game development (e.g., simple 2D game)"
                },
                {
                  "name": "5.3.2 Network programming (e.g., simple chat application)"
                },
                {
                  "name": "5.3.3 Web server"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "HOw to master C/C++",
    "output": {
      "name": "How to master C/C++",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if-else, loops, switch)"
                },
                {
                  "name": "1.1.3 Functions, Parameters, Return Values"
                }
              ]
            },
            {
              "name": "1.2 Arrays and Strings",
              "children": [
                {
                  "name": "1.2.1 Array declaration, initialization, manipulation"
                },
                {
                  "name": "1.2.2 String manipulation (using standard library functions)"
                },
                {
                  "name": "1.2.3 Exercise: Implement a simple string reverse function"
                }
              ]
            },
            {
              "name": "1.3 Pointers and Memory Management",
              "children": [
                {
                  "name": "1.3.1 Understanding pointers, dereferencing"
                },
                {
                  "name": "1.3.2 Dynamic memory allocation (malloc, calloc, free)"
                },
                {
                  "name": "1.3.3 Exercise: Implement a dynamic array that can resize"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP) with C++",
          "children": [
            {
              "name": "2.1 Classes and Objects",
              "children": [
                {
                  "name": "2.1.1 Defining classes, member variables, member functions"
                },
                {
                  "name": "2.1.2 Constructors, destructors"
                },
                {
                  "name": "2.1.3 Exercise: Create a class representing a simple bank account"
                }
              ]
            },
            {
              "name": "2.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "2.2.1 Inheritance types (public, protected, private)"
                },
                {
                  "name": "2.2.2 Polymorphism (virtual functions, function overriding)"
                },
                {
                  "name": "2.2.3 Exercise: Create a hierarchy of shapes (circle, rectangle, etc.)"
                }
              ]
            },
            {
              "name": "2.3 Encapsulation and Abstraction",
              "children": [
                {
                  "name": "2.3.1 Access specifiers (public, private, protected)"
                },
                {
                  "name": "2.3.2 Abstract classes and interfaces"
                },
                {
                  "name": "2.3.3 Exercise: Design a system with appropriate encapsulation and abstraction"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Standard Template Library (STL)",
          "children": [
            {
              "name": "3.1 Containers",
              "children": [
                {
                  "name": "3.1.1 Vectors, lists, deques"
                },
                {
                  "name": "3.1.2 Maps, sets"
                },
                {
                  "name": "3.1.3 Exercise: Implement a simple address book using STL containers"
                }
              ]
            },
            {
              "name": "3.2 Algorithms",
              "children": [
                {
                  "name": "3.2.1 Sorting algorithms (sort, stable_sort)"
                },
                {
                  "name": "3.2.2 Searching algorithms (find, binary_search)"
                },
                {
                  "name": "3.2.3 Exercise: Implement a custom sorting algorithm and compare its performance with STL sort"
                }
              ]
            },
            {
              "name": "3.3 Iterators",
              "children": [
                {
                  "name": "3.3.1 Understanding iterators"
                },
                {
                  "name": "3.3.2 Iterator categories"
                },
                {
                  "name": "3.3.3 Exercise:  Use iterators to process data in STL containers"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 File Handling",
              "children": [
                {
                  "name": "4.1.1 Reading and writing to files"
                },
                {
                  "name": "4.1.2 File streams"
                },
                {
                  "name": "4.1.3 Exercise: Create a program to manage a list of students stored in a file"
                }
              ]
            },
            {
              "name": "4.2 Exception Handling",
              "children": [
                {
                  "name": "4.2.1 try-catch blocks"
                },
                {
                  "name": "4.2.2 Exception classes"
                },
                {
                  "name": "4.2.3 Exercise: Implement exception handling in a file processing application"
                }
              ]
            },
            {
              "name": "4.3 Templates and Generic Programming",
              "children": [
                {
                  "name": "4.3.1 Function templates"
                },
                {
                  "name": "4.3.2 Class templates"
                },
                {
                  "name": "4.3.3 Exercise: Create a generic linked list implementation using templates"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Projects and Practice",
          "children": [
            {
              "name": "5.1  Simple Projects",
              "children": [
                {
                  "name": "5.1.1  Calculator"
                },
                {
                  "name": "5.1.2 To-Do List Application"
                },
                {
                  "name": "5.1.3 Basic Game (e.g., Tic-Tac-Toe)"
                }
              ]
            },
            {
              "name": "5.2 Intermediate Projects",
              "children": [
                {
                  "name": "5.2.1  Student Management System"
                },
                {
                  "name": "5.2.2  Simple Text Editor"
                },
                {
                  "name": "5.2.3  Inventory Management System"
                }
              ]
            },
            {
              "name": "5.3 Advanced Projects (Optional)",
              "children": [
                {
                  "name": "5.3.1  Compiler"
                },
                {
                  "name": "5.3.2  Operating System Kernel (very challenging)"
                },
                {
                  "name": "5.3.3  Graphics Engine (very challenging)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Ruby roadmap",
    "output": {
      "name": "Ruby Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Methods and Functions"
                }
              ]
            },
            {
              "name": "1.2 Basic Syntax & I/O",
              "children": [
                {
                  "name": "1.2.1  Understanding Ruby's syntax"
                },
                {
                  "name": "1.2.2  Working with strings and numbers"
                },
                {
                  "name": "1.2.3  Input/Output operations (gets, puts)"
                }
              ]
            },
            {
              "name": "1.3 Arrays and Hashes",
              "children": [
                {
                  "name": "1.3.1  Creating and manipulating arrays"
                },
                {
                  "name": "1.3.2  Working with hashes (key-value pairs)"
                },
                {
                  "name": "1.3.3 Iterating through arrays and hashes (each, map, select)"
                },
                {
                  "name": "1.3.4 Project: Simple Address Book"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "2.1 Classes and Objects",
              "children": [
                {
                  "name": "2.1.1 Defining classes and creating objects"
                },
                {
                  "name": "2.1.2 Instance variables and methods"
                },
                {
                  "name": "2.1.3  Constructors (initialize method)"
                }
              ]
            },
            {
              "name": "2.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "2.2.1  Understanding inheritance"
                },
                {
                  "name": "2.2.2  Method overriding"
                },
                {
                  "name": "2.2.3  Polymorphism in action"
                }
              ]
            },
            {
              "name": "2.3 Modules and Mixins",
              "children": [
                {
                  "name": "2.3.1  Creating and using modules"
                },
                {
                  "name": "2.3.2  Including modules (mixins)"
                },
                {
                  "name": "2.3.3  Namespaces and organization"
                }
              ]
            },
            {
              "name": "2.4 Project:  Simple RPG Character System",
              "children": []
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Blocks and Procs",
              "children": [
                {
                  "name": "3.1.1  Understanding blocks"
                },
                {
                  "name": "3.1.2  Working with procs"
                },
                {
                  "name": "3.1.3  Lambdas"
                }
              ]
            },
            {
              "name": "3.2 Exception Handling",
              "children": [
                {
                  "name": "3.2.1  Handling errors with begin/rescue/end"
                },
                {
                  "name": "3.2.2  Custom exceptions"
                },
                {
                  "name": "3.2.3  Ensuring code robustness"
                }
              ]
            },
            {
              "name": "3.3 Metaprogramming",
              "children": [
                {
                  "name": "3.3.1 Introduction to metaprogramming"
                },
                {
                  "name": "3.3.2 Method_missing"
                },
                {
                  "name": "3.3.3  Defining methods dynamically"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Frameworks and Libraries",
          "children": [
            {
              "name": "4.1 Rails Introduction",
              "children": [
                {
                  "name": "4.1.1 Setting up a Rails environment"
                },
                {
                  "name": "4.1.2  Understanding MVC architecture"
                },
                {
                  "name": "4.1.3  Creating basic Rails applications"
                }
              ]
            },
            {
              "name": "4.2 Database Interaction (ActiveRecord)",
              "children": [
                {
                  "name": "4.2.1  Connecting to databases"
                },
                {
                  "name": "4.2.2  CRUD operations"
                },
                {
                  "name": "4.2.3  Database migrations"
                }
              ]
            },
            {
              "name": "4.3 Testing with RSpec",
              "children": [
                {
                  "name": "4.3.1  Writing unit and integration tests"
                },
                {
                  "name": "4.3.2  Test-driven development (TDD)"
                },
                {
                  "name": "4.3.3  Improving code quality through testing"
                }
              ]
            },
            {
              "name": "4.4 Project: Simple Web Application with Rails",
              "children": []
            }
          ]
        },
        {
          "name": "5.  Deployment and Beyond",
          "children": [
            {
              "name": "5.1 Deployment to Heroku",
              "children": [
                {
                  "name": "5.1.1 Account setup and project deployment"
                },
                {
                  "name": "5.1.2  Managing deployments"
                },
                {
                  "name": "5.1.3  Scaling and monitoring"
                }
              ]
            },
            {
              "name": "5.2 Gems and Package Management",
              "children": [
                {
                  "name": "5.2.1  Using Bundler"
                },
                {
                  "name": "5.2.2  Finding and installing gems"
                },
                {
                  "name": "5.2.3  Managing dependencies"
                }
              ]
            },
            {
              "name": "5.3  Advanced Rails Concepts (Optional)",
              "children": [
                {
                  "name": "5.3.1  Background jobs"
                },
                {
                  "name": "5.3.2  API development"
                },
                {
                  "name": "5.3.3  Authentication and Authorization"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Go (Golang) roadmap",
    "output": {
      "name": "Go (Golang) Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if-else, for, switch)"
                },
                {
                  "name": "1.1.3 Functions, parameters, return values"
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays, Slices"
                },
                {
                  "name": "1.2.2 Maps"
                },
                {
                  "name": "1.2.3 Structs"
                }
              ]
            },
            {
              "name": "1.3 Basic Input/Output",
              "children": [
                {
                  "name": "1.3.1 Reading from console (fmt.Scanln, etc.)"
                },
                {
                  "name": "1.3.2 Writing to console (fmt.Println, etc.)"
                },
                {
                  "name": "1.3.3 File I/O (reading and writing files)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Concurrency",
          "children": [
            {
              "name": "2.1 Goroutines",
              "children": [
                {
                  "name": "2.1.1 Creating and running goroutines"
                },
                {
                  "name": "2.1.2 Understanding goroutine scheduling"
                }
              ]
            },
            {
              "name": "2.2 Channels",
              "children": [
                {
                  "name": "2.2.1 Sending and receiving data through channels"
                },
                {
                  "name": "2.2.2 Buffered and unbuffered channels"
                },
                {
                  "name": "2.2.3 Select statement for multiple channel operations"
                }
              ]
            },
            {
              "name": "2.3 Synchronization",
              "children": [
                {
                  "name": "2.3.1 Mutexes for protecting shared resources"
                },
                {
                  "name": "2.3.2 WaitGroups for synchronizing goroutines"
                },
                {
                  "name": "2.3.3 Context for managing goroutine lifecycle"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Standard Library and Packages",
          "children": [
            {
              "name": "3.1 Networking",
              "children": [
                {
                  "name": "3.1.1 Creating simple HTTP servers and clients"
                },
                {
                  "name": "3.1.2 Working with TCP connections"
                },
                {
                  "name": "3.1.3 Project: Build a simple chat application"
                }
              ]
            },
            {
              "name": "3.2 Error Handling",
              "children": [
                {
                  "name": "3.2.1 Understanding Go's error handling mechanisms"
                },
                {
                  "name": "3.2.2 Implementing custom error types"
                }
              ]
            },
            {
              "name": "3.3 Useful Packages",
              "children": [
                {
                  "name": "3.3.1 json: Working with JSON data"
                },
                {
                  "name": "3.3.2 os: File system interaction"
                },
                {
                  "name": "3.3.3 testing: Writing unit tests"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Concepts",
          "children": [
            {
              "name": "4.1 Interfaces",
              "children": [
                {
                  "name": "4.1.1 Defining and implementing interfaces"
                },
                {
                  "name": "4.1.2 Polymorphism with interfaces"
                },
                {
                  "name": "4.1.3 Embedding interfaces"
                }
              ]
            },
            {
              "name": "4.2 Generics",
              "children": [
                {
                  "name": "4.2.1 Defining generic functions and types"
                },
                {
                  "name": "4.2.2 Type constraints"
                }
              ]
            },
            {
              "name": "4.3 Reflection",
              "children": [
                {
                  "name": "4.3.1 Introspection and dynamic type information"
                },
                {
                  "name": "4.3.2  Use cases and potential pitfalls"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Project & Deployment",
          "children": [
            {
              "name": "5.1 Building Executables",
              "children": [
                {
                  "name": "5.1.1 Cross-compilation for different platforms"
                },
                {
                  "name": "5.1.2  Optimizing build process"
                }
              ]
            },
            {
              "name": "5.2 Version Control (Git)",
              "children": [
                {
                  "name": "5.2.1 Basic Git commands"
                },
                {
                  "name": "5.2.2 Branching and merging"
                },
                {
                  "name": "5.2.3  GitHub/GitLab workflows"
                }
              ]
            },
            {
              "name": "5.3 Project: Build a REST API",
              "children": [
                {
                  "name": "5.3.1 Design and implement endpoints"
                },
                {
                  "name": "5.3.2  Database integration (e.g., using PostgreSQL or MySQL)"
                },
                {
                  "name": "5.3.3 Containerization with Docker"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Rust roadmap",
    "output": {
      "name": "Rust Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, and Mutability"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Ownership"
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays and Vectors"
                },
                {
                  "name": "1.2.2 Tuples"
                },
                {
                  "name": "1.2.3 Structs and Enums"
                }
              ]
            },
            {
              "name": "1.3 Ownership and Borrowing",
              "children": [
                {
                  "name": "1.3.1 Ownership Rules"
                },
                {
                  "name": "1.3.2 Borrowing and Lifetimes"
                },
                {
                  "name": "1.3.3  Project: Simple CLI application with data structures and ownership"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Error Handling",
              "children": [
                {
                  "name": "2.1.1 Result type"
                },
                {
                  "name": "2.1.2 Panic and Recover"
                },
                {
                  "name": "2.1.3 Custom Error Types"
                }
              ]
            },
            {
              "name": "2.2 Generics and Traits",
              "children": [
                {
                  "name": "2.2.1 Generic Functions and Types"
                },
                {
                  "name": "2.2.2 Traits and Trait Bounds"
                },
                {
                  "name": "2.2.3 Project: Create a generic data structure with associated traits"
                }
              ]
            },
            {
              "name": "2.3 Concurrency",
              "children": [
                {
                  "name": "2.3.1 Threads and Mutexes"
                },
                {
                  "name": "2.3.2 Channels"
                },
                {
                  "name": "2.3.3 Project: Simple concurrent program (e.g., producer-consumer)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 Smart Pointers",
              "children": [
                {
                  "name": "3.1.1 Box, Rc, Arc"
                },
                {
                  "name": "3.1.2  Managing Memory Efficiently"
                },
                {
                  "name": "3.1.3 Project: Implement a complex data structure using smart pointers"
                }
              ]
            },
            {
              "name": "3.2 Advanced Traits and Associated Types",
              "children": [
                {
                  "name": "3.2.1 Implementing complex trait interactions"
                },
                {
                  "name": "3.2.2  Associated types and their use cases"
                }
              ]
            },
            {
              "name": "3.3 Unsafe Rust",
              "children": [
                {
                  "name": "3.3.1 Understanding unsafe code blocks"
                },
                {
                  "name": "3.3.2  Working with raw pointers"
                },
                {
                  "name": "3.3.3  Project:  (Optional) Implementing a simple unsafe operation – use with extreme caution"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Working with External Libraries and Tools",
          "children": [
            {
              "name": "4.1 Cargo Package Manager",
              "children": [
                {
                  "name": "4.1.1 Managing dependencies"
                },
                {
                  "name": "4.1.2  Building and publishing crates"
                }
              ]
            },
            {
              "name": "4.2 Common crates (e.g., Serde, Reqwest)",
              "children": [
                {
                  "name": "4.2.1  JSON serialization/deserialization (Serde)"
                },
                {
                  "name": "4.2.2  Making HTTP requests (Reqwest)"
                },
                {
                  "name": "4.2.3 Project: Build a simple web scraper using Reqwest and Serde"
                }
              ]
            },
            {
              "name": "4.3 Testing",
              "children": [
                {
                  "name": "4.3.1 Unit and Integration Tests"
                },
                {
                  "name": "4.3.2 Mocking and Testing Strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Projects and Applications",
          "children": [
            {
              "name": "5.1 Web Development (Actix Web, Rocket)",
              "children": [
                {
                  "name": "5.1.1 Choose a framework and build a simple web server"
                }
              ]
            },
            {
              "name": "5.2 Embedded Systems Programming",
              "children": [
                {
                  "name": "5.2.1 Explore embedded hardware and relevant libraries"
                }
              ]
            },
            {
              "name": "5.3 Game Development (Bevy)",
              "children": [
                {
                  "name": "5.3.1 Learn Bevy engine and build a simple game"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "TypeScript roadmap",
    "output": {
      "name": "TypeScript Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Types: number, string, boolean, null, undefined"
                },
                {
                  "name": "1.1.2 Variables and Constants: let, const"
                },
                {
                  "name": "1.1.3 Basic Operators: +, -, *, /, %, =, ==, ===, etc."
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays"
                },
                {
                  "name": "1.2.2 Tuples"
                },
                {
                  "name": "1.2.3 Objects and Interfaces"
                }
              ]
            },
            {
              "name": "1.3 Control Flow",
              "children": [
                {
                  "name": "1.3.1 If/Else Statements"
                },
                {
                  "name": "1.3.2 For and While Loops"
                },
                {
                  "name": "1.3.3 Switch Statements"
                }
              ]
            },
            {
              "name": "1.4 Functions",
              "children": [
                {
                  "name": "1.4.1 Function Declarations and Expressions"
                },
                {
                  "name": "1.4.2 Function Parameters and Return Types"
                },
                {
                  "name": "1.4.3 Optional and Default Parameters",
                  "children": [
                    {
                      "name": "Exercise: Create a function with optional and default parameters"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Types",
          "children": [
            {
              "name": "2.1 Type Aliases and Unions",
              "children": [
                {
                  "name": "2.1.1 Creating Type Aliases"
                },
                {
                  "name": "2.1.2 Union Types"
                },
                {
                  "name": "2.1.3 Intersection Types"
                }
              ]
            },
            {
              "name": "2.2 Generics",
              "children": [
                {
                  "name": "2.2.1 Generic Functions"
                },
                {
                  "name": "2.2.2 Generic Interfaces and Classes"
                },
                {
                  "name": "2.2.3 Generic Constraints",
                  "children": [
                    {
                      "name": "Exercise: Implement a generic function with type constraints"
                    }
                  ]
                }
              ]
            },
            {
              "name": "2.3 Type Guards and Discriminating Unions",
              "children": [
                {
                  "name": "2.3.1 `typeof` and `instanceof` type guards"
                },
                {
                  "name": "2.3.2 Custom Type Guards"
                },
                {
                  "name": "2.3.3 Discriminating Unions"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "3.1 Classes",
              "children": [
                {
                  "name": "3.1.1 Class Declaration"
                },
                {
                  "name": "3.1.2 Constructors"
                },
                {
                  "name": "3.1.3 Methods and Properties"
                }
              ]
            },
            {
              "name": "3.2 Inheritance",
              "children": [
                {
                  "name": "3.2.1 Extending Classes"
                },
                {
                  "name": "3.2.2 Method Overriding"
                },
                {
                  "name": "3.2.3 Polymorphism"
                }
              ]
            },
            {
              "name": "3.3 Access Modifiers",
              "children": [
                {
                  "name": "3.3.1 Public, Private, and Protected"
                },
                {
                  "name": "3.3.2 Readonly Properties"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Modules and Namespaces",
          "children": [
            {
              "name": "4.1 Modules",
              "children": [
                {
                  "name": "4.1.1 `import` and `export`"
                },
                {
                  "name": "4.1.2 Module Resolution"
                },
                {
                  "name": "4.1.3 Default Exports"
                }
              ]
            },
            {
              "name": "4.2 Namespaces",
              "children": [
                {
                  "name": "4.2.1 Defining Namespaces"
                },
                {
                  "name": "4.2.2 Accessing Namespace Members"
                },
                {
                  "name": "4.2.3 (Optional) Namespaces vs. Modules"
                }
              ]
            },
            {
              "name": "4.3 Project Setup with npm/yarn",
              "children": [
                {
                  "name": "4.3.1 Creating a new TypeScript project"
                },
                {
                  "name": "4.3.2 Managing dependencies"
                },
                {
                  "name": "4.3.3 Compiling the code"
                },
                {
                  "name": "Exercise: Create a small project with multiple modules"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Practical Applications",
          "children": [
            {
              "name": "5.1 Decorators",
              "children": [
                {
                  "name": "5.1.1 Class Decorators"
                },
                {
                  "name": "5.1.2 Method Decorators"
                },
                {
                  "name": "5.1.3 Property Decorators"
                }
              ]
            },
            {
              "name": "5.2 Conditional Types",
              "children": [
                {
                  "name": "5.2.1 `infer` keyword"
                },
                {
                  "name": "5.2.2 Distributed Conditional Types"
                }
              ]
            },
            {
              "name": "5.3 Advanced Type Inference",
              "children": [
                {
                  "name": "5.3.1 Type Inference in Functions"
                },
                {
                  "name": "5.3.2 Contextual Typing"
                }
              ]
            },
            {
              "name": "5.4  Building a Real-World Application",
              "children": [
                {
                  "name": "5.4.1 Choose a project (e.g., To-do list, Simple CRUD app)"
                },
                {
                  "name": "5.4.2 Design the application using TypeScript"
                },
                {
                  "name": "5.4.3 Implement the application using best practices"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "PHP roadmap",
    "output": {
      "name": "PHP Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Syntax & Data Types",
              "children": [
                {
                  "name": "1.1.1 Variables, Constants, Operators"
                },
                {
                  "name": "1.1.2 Data Types (Integers, Floats, Strings, Booleans, Arrays)"
                },
                {
                  "name": "1.1.3 Control Structures (if/else, switch, loops)"
                }
              ]
            },
            {
              "name": "1.2 Working with Functions",
              "children": [
                {
                  "name": "1.2.1 Defining and Calling Functions"
                },
                {
                  "name": "1.2.2 Function Arguments and Return Values"
                },
                {
                  "name": "1.2.3 Scope and Lifetime of Variables"
                }
              ]
            },
            {
              "name": "1.3 Object-Oriented Programming (OOP) Basics",
              "children": [
                {
                  "name": "1.3.1 Classes and Objects"
                },
                {
                  "name": "1.3.2 Properties and Methods"
                },
                {
                  "name": "1.3.3 Constructors and Destructors"
                },
                {
                  "name": "1.3.4 Project: Simple OOP Application (e.g., a library system)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Working with Databases",
          "children": [
            {
              "name": "2.1 Database Fundamentals (MySQL)",
              "children": [
                {
                  "name": "2.1.1 Setting up MySQL"
                },
                {
                  "name": "2.1.2 Basic SQL Queries (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "2.1.3 Database Design (Normalization)"
                }
              ]
            },
            {
              "name": "2.2 PHP Database Interaction (MySQLi)",
              "children": [
                {
                  "name": "2.2.1 Connecting to a MySQL Database"
                },
                {
                  "name": "2.2.2 Prepared Statements for Security"
                },
                {
                  "name": "2.2.3 Fetching and Processing Data"
                }
              ]
            },
            {
              "name": "2.3 Project: Simple CRUD Application",
              "children": [
                {
                  "name": "2.3.1 Create, Read, Update, Delete operations on a database table"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Web Development with PHP",
          "children": [
            {
              "name": "3.1 HTTP and Web Servers",
              "children": [
                {
                  "name": "3.1.1 Understanding HTTP Requests and Responses"
                },
                {
                  "name": "3.1.2 Setting up a Local Web Server (e.g., XAMPP, Apache)"
                }
              ]
            },
            {
              "name": "3.2 Building Dynamic Web Pages",
              "children": [
                {
                  "name": "3.2.1 Server-Side Includes (SSI)"
                },
                {
                  "name": "3.2.2 Handling Forms and User Input"
                },
                {
                  "name": "3.2.3 Project: Basic Web Form with Database Interaction"
                }
              ]
            },
            {
              "name": "3.3 Sessions and Cookies",
              "children": [
                {
                  "name": "3.3.1 Managing User Sessions"
                },
                {
                  "name": "3.3.2 Using Cookies for Persistent Data"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced PHP Concepts",
          "children": [
            {
              "name": "4.1 Error Handling and Debugging",
              "children": [
                {
                  "name": "4.1.1 Using try-catch blocks"
                },
                {
                  "name": "4.1.2 Debugging techniques (var_dump, error_reporting, xdebug)"
                }
              ]
            },
            {
              "name": "4.2 Advanced OOP Concepts",
              "children": [
                {
                  "name": "4.2.1 Inheritance, Polymorphism, Abstraction"
                },
                {
                  "name": "4.2.2 Interfaces and Abstract Classes"
                },
                {
                  "name": "4.2.3 Design Patterns (Singleton, Factory)"
                }
              ]
            },
            {
              "name": "4.3 Working with Frameworks",
              "children": [
                {
                  "name": "4.3.1 Introduction to Laravel (or Symfony)"
                },
                {
                  "name": "4.3.2 Basic CRUD operations using a framework"
                },
                {
                  "name": "4.3.3 Project:  Larger application using a chosen framework"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Security",
          "children": [
            {
              "name": "5.1 Deployment Strategies",
              "children": [
                {
                  "name": "5.1.1 Local vs. Remote Servers"
                },
                {
                  "name": "5.1.2 Using Git for Version Control"
                },
                {
                  "name": "5.1.3 Deployment to a hosting provider (e.g., Netlify, Heroku)"
                }
              ]
            },
            {
              "name": "5.2 Security Best Practices",
              "children": [
                {
                  "name": "5.2.1 Input Validation and Sanitization"
                },
                {
                  "name": "5.2.2 Preventing SQL Injection and Cross-Site Scripting (XSS)"
                },
                {
                  "name": "5.2.3 Secure Password Handling"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Kotlin roadmap",
    "output": {
      "name": "Kotlin Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Syntax & Data Types",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types (Int, String, Boolean, etc.)"
                },
                {
                  "name": "1.1.2 Operators, Control Flow (if/else, for, while)"
                },
                {
                  "name": "1.1.3 Functions, Function types"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes, Objects, Constructors"
                },
                {
                  "name": "1.2.2 Inheritance, Polymorphism"
                },
                {
                  "name": "1.2.3 Interfaces, Abstract Classes",
                  "children": [
                    {
                      "name": "1.2.3.1 Practical Exercise: Design a simple animal hierarchy using interfaces and abstract classes"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Null Safety & Data Structures",
              "children": [
                {
                  "name": "1.3.1 Null Safety, the Elvis Operator"
                },
                {
                  "name": "1.3.2 Collections (Lists, Sets, Maps)"
                },
                {
                  "name": "1.3.3 Practical Exercise: Create a program that manages a student database using Collections"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Kotlin",
          "children": [
            {
              "name": "2.1 Functional Programming",
              "children": [
                {
                  "name": "2.1.1 Higher-Order Functions, Lambdas"
                },
                {
                  "name": "2.1.2 Extension Functions"
                },
                {
                  "name": "2.1.3 Practical Exercise: Implement a simple sorting algorithm using higher-order functions"
                }
              ]
            },
            {
              "name": "2.2 Generics & Data Classes",
              "children": [
                {
                  "name": "2.2.1 Generic Types and Functions"
                },
                {
                  "name": "2.2.2 Data Classes"
                },
                {
                  "name": "2.2.3 Practical Exercise: Create a generic data structure for managing different types of objects"
                }
              ]
            },
            {
              "name": "2.3 Coroutines & Concurrency",
              "children": [
                {
                  "name": "2.3.1 Introduction to Coroutines"
                },
                {
                  "name": "2.3.2 Asynchronous Programming with Coroutines"
                },
                {
                  "name": "2.3.3 Practical Exercise: Build a simple network call using coroutines"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Kotlin",
          "children": [
            {
              "name": "3.1 Kotlin DSLs",
              "children": [
                {
                  "name": "3.1.1 Understanding DSLs"
                },
                {
                  "name": "3.1.2 Building a simple DSL"
                },
                {
                  "name": "3.1.3 Practical Project:  Create a build system using a Kotlin DSL"
                }
              ]
            },
            {
              "name": "3.2 Serialization",
              "children": [
                {
                  "name": "3.2.1 Kotlin Serialization"
                },
                {
                  "name": "3.2.2 JSON Serialization & Deserialization"
                },
                {
                  "name": "3.2.3 Practical Exercise: Implement serialization for a custom data class"
                }
              ]
            },
            {
              "name": "3.3 Reflection",
              "children": [
                {
                  "name": "3.3.1 Intro to Reflection"
                },
                {
                  "name": "3.3.2 Using Reflection"
                },
                {
                  "name": "3.3.3 Practical Project: Create a simple dependency injection framework"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Kotlin Ecosystem & Tools",
          "children": [
            {
              "name": "4.1 Build Systems (Gradle, KMM)",
              "children": [
                {
                  "name": "4.1.1 Gradle basics"
                },
                {
                  "name": "4.1.2 Kotlin Multiplatform Mobile (KMM) introduction"
                },
                {
                  "name": "4.1.3 Practical Project: Build a simple Android app using Gradle"
                }
              ]
            },
            {
              "name": "4.2 Testing",
              "children": [
                {
                  "name": "4.2.1 Unit Testing"
                },
                {
                  "name": "4.2.2 Integration Testing"
                },
                {
                  "name": "4.2.3 Practical Exercise: Write unit tests for your previous projects"
                }
              ]
            },
            {
              "name": "4.3 IDEs & Tools",
              "children": [
                {
                  "name": "4.3.1 IntelliJ IDEA"
                },
                {
                  "name": "4.3.2 Android Studio"
                },
                {
                  "name": "4.3.3 Kotlin command-line compiler"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Real-World Applications",
          "children": [
            {
              "name": "5.1 Android Development",
              "children": [
                {
                  "name": "5.1.1 Android basics using Kotlin"
                },
                {
                  "name": "5.1.2 Working with UI elements"
                },
                {
                  "name": "5.1.3 Practical Project: Develop a simple Android application"
                }
              ]
            },
            {
              "name": "5.2 Backend Development (Spring Boot, Ktor)",
              "children": [
                {
                  "name": "5.2.1 Introduction to Spring Boot with Kotlin"
                },
                {
                  "name": "5.2.2 Introduction to Ktor"
                },
                {
                  "name": "5.2.3 Practical Project: Build a simple REST API using Spring Boot or Ktor"
                }
              ]
            },
            {
              "name": "5.3 Data Science with Kotlin",
              "children": [
                {
                  "name": "5.3.1 Kotlin for data science"
                },
                {
                  "name": "5.3.2 Libraries like Apache Spark"
                },
                {
                  "name": "5.3.3 Practical Project: Analyze a dataset using Kotlin"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Swift roadmap",
    "output": {
      "name": "Swift Roadmap",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Constants, and Data Types"
                },
                {
                  "name": "1.1.2 Operators and Control Flow"
                },
                {
                  "name": "1.1.3 Basic Input/Output"
                }
              ]
            },
            {
              "name": "1.2 Data Structures",
              "children": [
                {
                  "name": "1.2.1 Arrays and Dictionaries"
                },
                {
                  "name": "1.2.2 Sets and Tuples"
                },
                {
                  "name": "1.2.3 Practical Exercise: Build a simple contact list"
                }
              ]
            },
            {
              "name": "1.3 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.3.1 Classes and Structures"
                },
                {
                  "name": "1.3.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.3.3 Properties and Methods"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Swift",
          "children": [
            {
              "name": "2.1 Functions and Closures",
              "children": [
                {
                  "name": "2.1.1 Function parameters and return types"
                },
                {
                  "name": "2.1.2 Higher-order functions"
                },
                {
                  "name": "2.1.3 Closures and escaping closures"
                }
              ]
            },
            {
              "name": "2.2 Protocols and Extensions",
              "children": [
                {
                  "name": "2.2.1 Protocol definition and conformance"
                },
                {
                  "name": "2.2.2 Extension methods and properties"
                },
                {
                  "name": "2.2.3 Practical Exercise: Create a custom protocol for networking"
                }
              ]
            },
            {
              "name": "2.3 Error Handling",
              "children": [
                {
                  "name": "2.3.1 `try`, `catch`, `throw`"
                },
                {
                  "name": "2.3.2 Custom error types"
                },
                {
                  "name": "2.3.3  Error propagation and handling"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Swift",
          "children": [
            {
              "name": "3.1 Generics",
              "children": [
                {
                  "name": "3.1.1 Generic functions and types"
                },
                {
                  "name": "3.1.2 Type constraints"
                },
                {
                  "name": "3.1.3 Associated types"
                }
              ]
            },
            {
              "name": "3.2 Concurrency",
              "children": [
                {
                  "name": "3.2.1 Grand Central Dispatch (GCD)"
                },
                {
                  "name": "3.2.2 Operations and Operation Queues"
                },
                {
                  "name": "3.2.3 Async/await (Swift 5.5+)"
                }
              ]
            },
            {
              "name": "3.3 Memory Management",
              "children": [
                {
                  "name": "3.3.1 Automatic Reference Counting (ARC)"
                },
                {
                  "name": "3.3.2 Strong and weak references"
                },
                {
                  "name": "3.3.3 Understanding memory leaks"
                }
              ]
            }
          ]
        },
        {
          "name": "4. iOS Development with SwiftUI",
          "children": [
            {
              "name": "4.1 SwiftUI Fundamentals",
              "children": [
                {
                  "name": "4.1.1 Views and modifiers"
                },
                {
                  "name": "4.1.2 Data flow and state management"
                },
                {
                  "name": "4.1.3 Layouts (VStack, HStack, ZStack)"
                }
              ]
            },
            {
              "name": "4.2 Advanced SwiftUI",
              "children": [
                {
                  "name": "4.2.1 Animations and transitions"
                },
                {
                  "name": "4.2.2 Data binding and observable objects"
                },
                {
                  "name": "4.2.3 Navigation and routing"
                }
              ]
            },
            {
              "name": "4.3 Project: Build a simple iOS app",
              "children": [
                {
                  "name": "4.3.1 Design and planning"
                },
                {
                  "name": "4.3.2 Implementation using SwiftUI"
                },
                {
                  "name": "4.3.3 Testing and deployment"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced iOS Development & Frameworks",
          "children": [
            {
              "name": "5.1 Networking with URLSession",
              "children": [
                {
                  "name": "5.1.1 Making network requests"
                },
                {
                  "name": "5.1.2 Handling JSON responses"
                },
                {
                  "name": "5.1.3 Asynchronous operations"
                }
              ]
            },
            {
              "name": "5.2 Core Data",
              "children": [
                {
                  "name": "5.2.1 Setting up a Core Data stack"
                },
                {
                  "name": "5.2.2 Managing data using NSManagedObjects"
                },
                {
                  "name": "5.2.3 Data persistence"
                }
              ]
            },
            {
              "name": "5.3  Testing and Debugging",
              "children": [
                {
                  "name": "5.3.1 Unit testing"
                },
                {
                  "name": "5.3.2 UI testing"
                },
                {
                  "name": "5.3.3 Debugging techniques"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Ruby",
    "output": {
      "name": "Ruby",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types"
                },
                {
                  "name": "1.1.2 Operators and Expressions"
                },
                {
                  "name": "1.1.3 Control Flow (if/else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Basic Input/Output",
              "children": [
                {
                  "name": "1.2.1 Getting User Input"
                },
                {
                  "name": "1.2.2 Printing to the Console"
                },
                {
                  "name": "1.2.3 File I/O (reading and writing files)"
                }
              ]
            },
            {
              "name": "1.3 Methods and Functions",
              "children": [
                {
                  "name": "1.3.1 Defining and Calling Methods"
                },
                {
                  "name": "1.3.2 Parameters and Arguments"
                },
                {
                  "name": "1.3.3 Return Values and Scope",
                  "children": [
                    {
                      "name": "1.3.3.1 Practice: Build a simple calculator with methods"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "2.1 Classes and Objects",
              "children": [
                {
                  "name": "2.1.1 Creating Classes and Objects"
                },
                {
                  "name": "2.1.2 Attributes and Methods"
                },
                {
                  "name": "2.1.3 Constructors (initialize method)"
                }
              ]
            },
            {
              "name": "2.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "2.2.1 Understanding Inheritance"
                },
                {
                  "name": "2.2.2 Method Overriding"
                },
                {
                  "name": "2.2.3 Polymorphism in Practice"
                }
              ]
            },
            {
              "name": "2.3 Modules and Mixins",
              "children": [
                {
                  "name": "2.3.1 Creating and Using Modules"
                },
                {
                  "name": "2.3.2 Including Modules (Mixins)"
                },
                {
                  "name": "2.3.3 Namespaces and Module Organization",
                  "children": [
                    {
                      "name": "2.3.3.1 Project: Create a simple game using OOP principles"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Structures",
          "children": [
            {
              "name": "3.1 Arrays",
              "children": [
                {
                  "name": "3.1.1 Creating and Accessing Arrays"
                },
                {
                  "name": "3.1.2 Array Methods (push, pop, map, etc.)"
                },
                {
                  "name": "3.1.3 Iterating Through Arrays"
                }
              ]
            },
            {
              "name": "3.2 Hashes",
              "children": [
                {
                  "name": "3.2.1 Creating and Accessing Hashes"
                },
                {
                  "name": "3.2.2 Hash Methods (keys, values, merge, etc.)"
                },
                {
                  "name": "3.2.3 Iterating Through Hashes"
                }
              ]
            },
            {
              "name": "3.3 Other Data Structures",
              "children": [
                {
                  "name": "3.3.1 Sets"
                },
                {
                  "name": "3.3.2 Ranges"
                },
                {
                  "name": "3.3.3 Practice: Implement a simple address book using hashes and arrays"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Gems and Frameworks",
          "children": [
            {
              "name": "4.1 Gem Management (Bundler)",
              "children": [
                {
                  "name": "4.1.1 Installing Gems"
                },
                {
                  "name": "4.1.2 Managing Dependencies (Gemfile)"
                },
                {
                  "name": "4.1.3 Using Gems in your Projects"
                }
              ]
            },
            {
              "name": "4.2 Introduction to Rails (Optional)",
              "children": [
                {
                  "name": "4.2.1 Setting up a Rails environment"
                },
                {
                  "name": "4.2.2 Basic Rails Application Structure"
                },
                {
                  "name": "4.2.3 Building a simple Rails app"
                }
              ]
            },
            {
              "name": "4.3 Testing with RSpec (Optional)",
              "children": [
                {
                  "name": "4.3.1 Setting up RSpec"
                },
                {
                  "name": "4.3.2 Writing Unit and Integration Tests"
                },
                {
                  "name": "4.3.3 Test-Driven Development (TDD)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Metaprogramming",
              "children": [
                {
                  "name": "5.1.1 Methods and Blocks"
                },
                {
                  "name": "5.1.2 Method Missing"
                },
                {
                  "name": "5.1.3 Defining Methods Dynamically"
                }
              ]
            },
            {
              "name": "5.2 Exception Handling",
              "children": [
                {
                  "name": "5.2.1 Handling Errors with `begin`/`rescue`/`ensure`"
                },
                {
                  "name": "5.2.2 Custom Exceptions"
                },
                {
                  "name": "5.2.3 Debugging Techniques"
                }
              ]
            },
            {
              "name": "5.3 Concurrency and Parallelism",
              "children": [
                {
                  "name": "5.3.1 Threads"
                },
                {
                  "name": "5.3.2 Processes"
                },
                {
                  "name": "5.3.3 Concurrent Programming Best Practices"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn Ruby",
    "output": {
      "name": "Learn Ruby",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types"
                },
                {
                  "name": "1.1.2 Operators and Expressions"
                },
                {
                  "name": "1.1.3 Control Flow (if/else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Basic Input/Output",
              "children": [
                {
                  "name": "1.2.1 Getting user input (gets, gets.chomp)"
                },
                {
                  "name": "1.2.2 Printing output (puts, print)"
                },
                {
                  "name": "1.2.3 Simple console applications (e.g., a calculator)"
                }
              ]
            },
            {
              "name": "1.3 Data Structures",
              "children": [
                {
                  "name": "1.3.1 Arrays"
                },
                {
                  "name": "1.3.2 Hashes"
                },
                {
                  "name": "1.3.3 Working with arrays and hashes (practical exercises:  creating a simple address book, managing a list of items)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "2.1 Classes and Objects",
              "children": [
                {
                  "name": "2.1.1 Defining classes and creating objects"
                },
                {
                  "name": "2.1.2 Class methods and instance methods"
                },
                {
                  "name": "2.1.3 Attributes and accessors"
                }
              ]
            },
            {
              "name": "2.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "2.2.1 Understanding inheritance"
                },
                {
                  "name": "2.2.2 Method overriding"
                },
                {
                  "name": "2.2.3 Polymorphism examples (practical exercise: create a hierarchy of animal classes)"
                }
              ]
            },
            {
              "name": "2.3 Modules and Mixins",
              "children": [
                {
                  "name": "2.3.1 Defining and using modules"
                },
                {
                  "name": "2.3.2 Including modules (mixins)"
                },
                {
                  "name": "2.3.3  Improving code organization with modules (practical exercise: refactor previous animal class hierarchy using modules)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Working with Files and External Resources",
          "children": [
            {
              "name": "3.1 File I/O",
              "children": [
                {
                  "name": "3.1.1 Reading files"
                },
                {
                  "name": "3.1.2 Writing files"
                },
                {
                  "name": "3.1.3 Handling exceptions during file operations (practical exercise: create a program that reads and writes data to a file)"
                }
              ]
            },
            {
              "name": "3.2 Networking (Basic)",
              "children": [
                {
                  "name": "3.2.1 Making HTTP requests (using libraries like Net::HTTP)"
                },
                {
                  "name": "3.2.2 Parsing JSON/XML responses"
                },
                {
                  "name": "3.2.3 Simple web scraping (practical exercise: fetching data from a public API)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Gems and Frameworks",
          "children": [
            {
              "name": "4.1 Gem Management (Bundler)",
              "children": [
                {
                  "name": "4.1.1 Installing gems"
                },
                {
                  "name": "4.1.2 Managing dependencies with Gemfile"
                },
                {
                  "name": "4.1.3 Updating gems"
                }
              ]
            },
            {
              "name": "4.2 Introduction to Rails (Optional)",
              "children": [
                {
                  "name": "4.2.1 Setting up a Rails project"
                },
                {
                  "name": "4.2.2 Basic MVC architecture"
                },
                {
                  "name": "4.2.3 Building a simple Rails application (e.g., a to-do list)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Metaprogramming",
              "children": [
                {
                  "name": "5.1.1 Methods and `method_missing`"
                },
                {
                  "name": "5.1.2 Defining methods dynamically"
                },
                {
                  "name": "5.1.3 Exploring advanced metaprogramming techniques (e.g., `define_method`, `class_eval`)"
                }
              ]
            },
            {
              "name": "5.2 Concurrency and Parallelism",
              "children": [
                {
                  "name": "5.2.1 Threads"
                },
                {
                  "name": "5.2.2 Processes"
                },
                {
                  "name": "5.2.3  Understanding concurrency issues and solutions"
                }
              ]
            },
            {
              "name": "5.3 Testing",
              "children": [
                {
                  "name": "5.3.1 RSpec"
                },
                {
                  "name": "5.3.2 Minitest"
                },
                {
                  "name": "5.3.3 Writing unit and integration tests"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How to learn ruby",
    "output": {
      "name": "How to learn Ruby",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types"
                },
                {
                  "name": "1.1.2 Operators and Expressions"
                },
                {
                  "name": "1.1.3 Control Flow (if/else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Basic Syntax and Structure",
              "children": [
                {
                  "name": "1.2.1 Methods and Functions"
                },
                {
                  "name": "1.2.2 Classes and Objects (Introduction)"
                },
                {
                  "name": "1.2.3 Working with Strings and Numbers"
                }
              ]
            },
            {
              "name": "1.3 Input/Output and File Handling",
              "children": [
                {
                  "name": "1.3.1 Getting user input"
                },
                {
                  "name": "1.3.2 Printing output to the console"
                },
                {
                  "name": "1.3.3 Reading and writing to files"
                },
                {
                  "name": "1.3.4 Exercise: Create a simple text-based game"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "2.1 Classes and Objects",
              "children": [
                {
                  "name": "2.1.1 Defining classes and creating objects"
                },
                {
                  "name": "2.1.2 Encapsulation, Inheritance, Polymorphism"
                },
                {
                  "name": "2.1.3 Access Modifiers (public, private, protected)"
                }
              ]
            },
            {
              "name": "2.2 Modules and Mixins",
              "children": [
                {
                  "name": "2.2.1 Creating and using modules"
                },
                {
                  "name": "2.2.2 Including and extending modules"
                },
                {
                  "name": "2.2.3 Implementing Mixins"
                }
              ]
            },
            {
              "name": "2.3 Advanced OOP Concepts",
              "children": [
                {
                  "name": "2.3.1 Metaprogramming"
                },
                {
                  "name": "2.3.2 Design Patterns (Singleton, Factory)"
                },
                {
                  "name": "2.3.3 Exercise: Build a simple class hierarchy (e.g., animals)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Working with Data",
          "children": [
            {
              "name": "3.1 Arrays and Hashes",
              "children": [
                {
                  "name": "3.1.1 Creating and manipulating arrays"
                },
                {
                  "name": "3.1.2 Creating and manipulating hashes"
                },
                {
                  "name": "3.1.3 Iterating over arrays and hashes"
                }
              ]
            },
            {
              "name": "3.2 Data Structures",
              "children": [
                {
                  "name": "3.2.1 Sets"
                },
                {
                  "name": "3.2.2 Queues"
                },
                {
                  "name": "3.2.3 Stacks"
                }
              ]
            },
            {
              "name": "3.3 Working with Databases",
              "children": [
                {
                  "name": "3.3.1 Introduction to Databases (e.g., SQLite, PostgreSQL)"
                },
                {
                  "name": "3.3.2 Using Ruby gems for database interaction (e.g., ActiveRecord)"
                },
                {
                  "name": "3.3.3 Exercise: Create a simple database application"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Gems and Frameworks",
          "children": [
            {
              "name": "4.1 RubyGems",
              "children": [
                {
                  "name": "4.1.1 Understanding RubyGems"
                },
                {
                  "name": "4.1.2 Installing and managing gems"
                },
                {
                  "name": "4.1.3 Using Bundler"
                }
              ]
            },
            {
              "name": "4.2 Introduction to Rails (Optional)",
              "children": [
                {
                  "name": "4.2.1 Setting up a Rails project"
                },
                {
                  "name": "4.2.2 MVC Architecture"
                },
                {
                  "name": "4.2.3 Building a simple Rails application"
                }
              ]
            },
            {
              "name": "4.3 Other Frameworks (Sinatra, etc.)",
              "children": [
                {
                  "name": "4.3.1 Comparing different frameworks"
                },
                {
                  "name": "4.3.2 Choosing a framework for a project"
                },
                {
                  "name": "4.3.3 Exercise: Create a simple web application using Sinatra"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Testing and Debugging",
          "children": [
            {
              "name": "5.1 Testing",
              "children": [
                {
                  "name": "5.1.1 Introduction to Unit Testing (Rspec, Minitest)"
                },
                {
                  "name": "5.1.2 Writing effective tests"
                },
                {
                  "name": "5.1.3 Test-Driven Development (TDD)"
                }
              ]
            },
            {
              "name": "5.2 Debugging",
              "children": [
                {
                  "name": "5.2.1 Using the debugger (byebug)"
                },
                {
                  "name": "5.2.2 Logging"
                },
                {
                  "name": "5.2.3 Identifying and resolving common errors"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How to learn typescript",
    "output": {
      "name": "How to learn TypeScript",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Types: Basic Types (number, string, boolean, etc.)"
                },
                {
                  "name": "1.1.2 Variables and Constants: let, const"
                },
                {
                  "name": "1.1.3 Type Inference and Annotations"
                }
              ]
            },
            {
              "name": "1.2 Interfaces and Classes",
              "children": [
                {
                  "name": "1.2.1 Defining Interfaces"
                },
                {
                  "name": "1.2.2 Implementing Interfaces"
                },
                {
                  "name": "1.2.3 Defining Classes and Constructors"
                }
              ]
            },
            {
              "name": "1.3 Functions and Generics",
              "children": [
                {
                  "name": "1.3.1 Function Types and Parameters"
                },
                {
                  "name": "1.3.2 Generic Functions and Interfaces"
                },
                {
                  "name": "1.3.3 Project: Create a simple utility function with generics"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Types",
          "children": [
            {
              "name": "2.1 Union and Intersection Types",
              "children": [
                {
                  "name": "2.1.1 Understanding Union Types"
                },
                {
                  "name": "2.1.2 Understanding Intersection Types"
                },
                {
                  "name": "2.1.3 Practical Application: Modeling complex data structures"
                }
              ]
            },
            {
              "name": "2.2 Type Aliases and Literal Types",
              "children": [
                {
                  "name": "2.2.1 Creating Type Aliases"
                },
                {
                  "name": "2.2.2 Using Literal Types"
                },
                {
                  "name": "2.2.3 Project: Refactor existing code using type aliases"
                }
              ]
            },
            {
              "name": "2.3 Conditional Types",
              "children": [
                {
                  "name": "2.3.1 Inferring types based on conditions"
                },
                {
                  "name": "2.3.2 Advanced use cases"
                },
                {
                  "name": "2.3.3 Project: Implement a type-safe conditional logic"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Working with TypeScript",
          "children": [
            {
              "name": "3.1 Setting up a TypeScript Project",
              "children": [
                {
                  "name": "3.1.1 Installing TypeScript"
                },
                {
                  "name": "3.1.2 Configuring tsconfig.json"
                },
                {
                  "name": "3.1.3 Compiling TypeScript code"
                }
              ]
            },
            {
              "name": "3.2 Modules and Namespaces",
              "children": [
                {
                  "name": "3.2.1 Importing and Exporting Modules"
                },
                {
                  "name": "3.2.2 Using Namespaces"
                },
                {
                  "name": "3.2.3 Project: Organize a larger project into modules"
                }
              ]
            },
            {
              "name": "3.3 Debugging and Testing",
              "children": [
                {
                  "name": "3.3.1 Debugging TypeScript code"
                },
                {
                  "name": "3.3.2 Setting up unit tests"
                },
                {
                  "name": "3.3.3 Project: Write unit tests for a module"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Asynchronous Programming",
          "children": [
            {
              "name": "4.1 Promises and Async/Await",
              "children": [
                {
                  "name": "4.1.1 Working with Promises"
                },
                {
                  "name": "4.1.2 Using Async/Await"
                },
                {
                  "name": "4.1.3 Project: Fetch data from an API using Async/Await"
                }
              ]
            },
            {
              "name": "4.2 Error Handling",
              "children": [
                {
                  "name": "4.2.1 Try...catch Blocks"
                },
                {
                  "name": "4.2.2 Handling Errors in Promises"
                },
                {
                  "name": "4.2.3 Project: Implement robust error handling in an API call"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Frameworks",
          "children": [
            {
              "name": "5.1 Decorators",
              "children": [
                {
                  "name": "5.1.1 Understanding Decorators"
                },
                {
                  "name": "5.1.2 Implementing Custom Decorators"
                },
                {
                  "name": "5.1.3 Project: Create a custom logging decorator"
                }
              ]
            },
            {
              "name": "5.2 React with TypeScript",
              "children": [
                {
                  "name": "5.2.1 Setting up a React project with TypeScript"
                },
                {
                  "name": "5.2.2 Type checking in React components"
                },
                {
                  "name": "5.2.3 Project: Build a small React app using TypeScript"
                }
              ]
            },
            {
              "name": "5.3  Advanced Type Manipulation",
              "children": [
                {
                  "name": "5.3.1 Mapped Types"
                },
                {
                  "name": "5.3.2 Conditional Types (Advanced Use Cases)"
                },
                {
                  "name": "5.3.3 Template Literal Types"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How to learn php",
    "output": {
      "name": "How to learn PHP",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Setting up the Environment",
              "children": [
                {
                  "name": "1.1.1 Installing XAMPP/WAMP/Localhost"
                },
                {
                  "name": "1.1.2 Setting up a text editor/IDE (VS Code, Sublime Text, PhpStorm)"
                },
                {
                  "name": "1.1.3 Running your first PHP script (Hello World!)"
                }
              ]
            },
            {
              "name": "1.2 Basic Syntax and Data Types",
              "children": [
                {
                  "name": "1.2.1 Variables, Constants, and Data Types (integers, floats, strings, booleans)"
                },
                {
                  "name": "1.2.2 Operators (arithmetic, comparison, logical)"
                },
                {
                  "name": "1.2.3 Basic output using echo and print"
                }
              ]
            },
            {
              "name": "1.3 Control Structures",
              "children": [
                {
                  "name": "1.3.1 Conditional statements (if, else if, else, switch)"
                },
                {
                  "name": "1.3.2 Loops (for, while, do-while)"
                },
                {
                  "name": "1.3.3 Exercise: Create a simple calculator"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Working with Data",
          "children": [
            {
              "name": "2.1 Arrays",
              "children": [
                {
                  "name": "2.1.1 Indexed arrays"
                },
                {
                  "name": "2.1.2 Associative arrays"
                },
                {
                  "name": "2.1.3 Multidimensional arrays"
                }
              ]
            },
            {
              "name": "2.2 Strings",
              "children": [
                {
                  "name": "2.2.1 String manipulation functions (strlen, strpos, substr, etc.)"
                },
                {
                  "name": "2.2.2 String formatting"
                },
                {
                  "name": "2.2.3 Exercise: Create a program to reverse a string"
                }
              ]
            },
            {
              "name": "2.3 Functions",
              "children": [
                {
                  "name": "2.3.1 Defining and calling functions"
                },
                {
                  "name": "2.3.2 Function parameters and return values"
                },
                {
                  "name": "2.3.3 Exercise: Create a function to calculate the factorial of a number"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "3.1 Classes and Objects",
              "children": [
                {
                  "name": "3.1.1 Defining classes and creating objects"
                },
                {
                  "name": "3.1.2 Properties and methods"
                },
                {
                  "name": "3.1.3 Access modifiers (public, private, protected)"
                }
              ]
            },
            {
              "name": "3.2 Inheritance and Polymorphism",
              "children": [
                {
                  "name": "3.2.1 Extending classes"
                },
                {
                  "name": "3.2.2 Method overriding"
                },
                {
                  "name": "3.2.3 Interfaces and abstract classes"
                }
              ]
            },
            {
              "name": "3.3 Project: Create a simple e-commerce class structure",
              "children": []
            }
          ]
        },
        {
          "name": "4. Database Interaction",
          "children": [
            {
              "name": "4.1 Connecting to MySQL",
              "children": [
                {
                  "name": "4.1.1 Establishing a database connection"
                },
                {
                  "name": "4.1.2 Handling database errors"
                }
              ]
            },
            {
              "name": "4.2 CRUD Operations",
              "children": [
                {
                  "name": "4.2.1 Performing SELECT, INSERT, UPDATE, and DELETE queries"
                },
                {
                  "name": "4.2.2 Prepared statements to prevent SQL injection"
                }
              ]
            },
            {
              "name": "4.3 Project: Build a simple blog with user authentication",
              "children": []
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Working with Sessions and Cookies",
              "children": [
                {
                  "name": "5.1.1 Managing user sessions"
                },
                {
                  "name": "5.1.2 Storing user data using cookies"
                }
              ]
            },
            {
              "name": "5.2 Error Handling and Debugging",
              "children": [
                {
                  "name": "5.2.1 Using try-catch blocks"
                },
                {
                  "name": "5.2.2 Debugging techniques using var_dump, print_r, etc."
                }
              ]
            },
            {
              "name": "5.3 Frameworks (Laravel, Symfony, CodeIgniter)",
              "children": [
                {
                  "name": "5.3.1 Introduction to a chosen framework"
                },
                {
                  "name": "5.3.2 Building a small application using the framework"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How to learn kotlin",
    "output": {
      "name": "How to learn Kotlin",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Syntax",
              "children": [
                {
                  "name": "1.1.1 Variables and Data Types"
                },
                {
                  "name": "1.1.2 Control Flow (if-else, when, loops)"
                },
                {
                  "name": "1.1.3 Functions and Lambdas"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Interfaces and Abstract Classes"
                },
                {
                  "name": "1.2.4 Project: Simple OOP Application (e.g., a basic banking system)"
                }
              ]
            },
            {
              "name": "1.3 Null Safety",
              "children": [
                {
                  "name": "1.3.1 Understanding NullPointerExceptions"
                },
                {
                  "name": "1.3.2 Safe Calls (?.) and Elvis Operator (?:)"
                },
                {
                  "name": "1.3.3 The `lateinit` and `?` modifiers"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Concepts",
          "children": [
            {
              "name": "2.1 Collections",
              "children": [
                {
                  "name": "2.1.1 Lists, Sets, and Maps"
                },
                {
                  "name": "2.1.2 Iterators and Higher-Order Functions on Collections"
                },
                {
                  "name": "2.1.3 Project: Data processing with Collections (e.g., analyzing a CSV file)"
                }
              ]
            },
            {
              "name": "2.2 Generics",
              "children": [
                {
                  "name": "2.2.1 Defining Generic Types"
                },
                {
                  "name": "2.2.2 Type Bounds and Wildcards"
                },
                {
                  "name": "2.2.3 Project: Creating a generic data structure (e.g., a generic stack)"
                }
              ]
            },
            {
              "name": "2.3 Coroutines",
              "children": [
                {
                  "name": "2.3.1 Introduction to Coroutines"
                },
                {
                  "name": "2.3.2 Suspend Functions and Dispatchers"
                },
                {
                  "name": "2.3.3 Project: Asynchronous network call using Coroutines"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Kotlin Ecosystem",
          "children": [
            {
              "name": "3.1 Build Systems (Gradle/Kotlin DSL)",
              "children": [
                {
                  "name": "3.1.1 Setting up a project"
                },
                {
                  "name": "3.1.2 Dependencies management"
                },
                {
                  "name": "3.1.3 Build configurations"
                }
              ]
            },
            {
              "name": "3.2 Testing",
              "children": [
                {
                  "name": "3.2.1 Unit testing with JUnit and Kotlin test library"
                },
                {
                  "name": "3.2.2 Mocking and Testing Frameworks"
                },
                {
                  "name": "3.2.3 Project: Implementing unit tests for a previous project"
                }
              ]
            },
            {
              "name": "3.3 IDEs (IntelliJ IDEA, Android Studio)",
              "children": [
                {
                  "name": "3.3.1 Project setup and configuration"
                },
                {
                  "name": "3.3.2 Using Kotlin features within IDE"
                },
                {
                  "name": "3.3.3 Debugging and code analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Android Development with Kotlin",
          "children": [
            {
              "name": "4.1 Android Fundamentals",
              "children": [
                {
                  "name": "4.1.1 Activities and Fragments"
                },
                {
                  "name": "4.1.2 Layouts and UI elements"
                },
                {
                  "name": "4.1.3 Project: Simple Android app (e.g., a to-do list)"
                }
              ]
            },
            {
              "name": "4.2 Data Handling",
              "children": [
                {
                  "name": "4.2.1 Room Persistence Library"
                },
                {
                  "name": "4.2.2 Network operations with Retrofit"
                },
                {
                  "name": "4.2.3 Project: Integrate data persistence and network calls into an Android app"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Android Topics",
          "children": [
            {
              "name": "5.1 Architecture Components (ViewModel, LiveData)",
              "children": [
                {
                  "name": "5.1.1 Implementing MVVM architecture"
                },
                {
                  "name": "5.1.2 Handling lifecycle events"
                }
              ]
            },
            {
              "name": "5.2 Jetpack Compose",
              "children": [
                {
                  "name": "5.2.1 Declarative UI development"
                },
                {
                  "name": "5.2.2 Composable functions"
                }
              ]
            },
            {
              "name": "5.3 Advanced Android topics",
              "children": [
                {
                  "name": "5.3.1 Background tasks and services"
                },
                {
                  "name": "5.3.2 Notifications and push messaging"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How to learn swift",
    "output": {
      "name": "How to Learn Swift",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables and Constants"
                },
                {
                  "name": "1.1.2 Data Types (Int, String, Bool, etc.)"
                },
                {
                  "name": "1.1.3 Operators (Arithmetic, Comparison, Logical)"
                }
              ]
            },
            {
              "name": "1.2 Control Flow",
              "children": [
                {
                  "name": "1.2.1 if-else statements"
                },
                {
                  "name": "1.2.2 for and while loops"
                },
                {
                  "name": "1.2.3 switch statements"
                }
              ]
            },
            {
              "name": "1.3 Basic Data Structures",
              "children": [
                {
                  "name": "1.3.1 Arrays"
                },
                {
                  "name": "1.3.2 Dictionaries"
                },
                {
                  "name": "1.3.3 Sets"
                },
                {
                  "name": "1.3.4 Practical Exercise: Create a simple address book app using arrays and dictionaries"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "2.1 Classes and Structures",
              "children": [
                {
                  "name": "2.1.1 Defining classes and structs"
                },
                {
                  "name": "2.1.2 Properties and methods"
                },
                {
                  "name": "2.1.3 Inheritance"
                }
              ]
            },
            {
              "name": "2.2 Protocols and Extensions",
              "children": [
                {
                  "name": "2.2.1 Defining and implementing protocols"
                },
                {
                  "name": "2.2.2 Extending existing types"
                },
                {
                  "name": "2.2.3 Practical Exercise: Create a protocol for a shape and implement it for different shapes (circle, square, etc.)"
                }
              ]
            },
            {
              "name": "2.3 Optionals and Error Handling",
              "children": [
                {
                  "name": "2.3.1 Understanding optionals"
                },
                {
                  "name": "2.3.2 Optional binding and chaining"
                },
                {
                  "name": "2.3.3 Error handling with do-catch"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Working with UI (User Interface)",
          "children": [
            {
              "name": "3.1 UIKit Basics",
              "children": [
                {
                  "name": "3.1.1 Views and View Controllers"
                },
                {
                  "name": "3.1.2 Auto Layout"
                },
                {
                  "name": "3.1.3 Storyboards or SwiftUI Introduction (Choose one for now)"
                }
              ]
            },
            {
              "name": "3.2 Building Simple UI",
              "children": [
                {
                  "name": "3.2.1 Creating buttons, labels, and text fields"
                },
                {
                  "name": "3.2.2 Handling user input"
                },
                {
                  "name": "3.2.3 Practical Exercise: Build a simple calculator app"
                }
              ]
            },
            {
              "name": "3.3 Navigation and Data Passing",
              "children": [
                {
                  "name": "3.3.1 Segues (if using Storyboards)"
                },
                {
                  "name": "3.3.2 Navigation Controllers"
                },
                {
                  "name": "3.3.3 Passing data between View Controllers"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Concurrency",
              "children": [
                {
                  "name": "4.1.1 Grand Central Dispatch (GCD)"
                },
                {
                  "name": "4.1.2 Operations and Operation Queues"
                }
              ]
            },
            {
              "name": "4.2 Networking",
              "children": [
                {
                  "name": "4.2.1 URLSession"
                },
                {
                  "name": "4.2.2 Handling JSON data"
                },
                {
                  "name": "4.2.3 Practical Exercise: Fetch data from a public API and display it in a table view"
                }
              ]
            },
            {
              "name": "4.3 Data Persistence",
              "children": [
                {
                  "name": "4.3.1 UserDefaults"
                },
                {
                  "name": "4.3.2 Core Data (or other persistence solutions)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. SwiftUI (Optional, but Recommended)",
          "children": [
            {
              "name": "5.1 SwiftUI Fundamentals",
              "children": [
                {
                  "name": "5.1.1 Views and Modifiers"
                },
                {
                  "name": "5.1.2 Data Binding"
                },
                {
                  "name": "5.1.3 State and State Management"
                }
              ]
            },
            {
              "name": "5.2 Advanced SwiftUI",
              "children": [
                {
                  "name": "5.2.1 Navigation and Routing"
                },
                {
                  "name": "5.2.2 Working with Lists and Collections"
                },
                {
                  "name": "5.2.3 Practical Project: Recreate a previous project using SwiftUI"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Swift",
    "output": {
      "name": "Swift",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables & Constants"
                },
                {
                  "name": "1.1.2 Data Types (Int, String, Bool, etc.)"
                },
                {
                  "name": "1.1.3 Operators (Arithmetic, Comparison, Logical)"
                }
              ]
            },
            {
              "name": "1.2 Control Flow",
              "children": [
                {
                  "name": "1.2.1 if-else statements"
                },
                {
                  "name": "1.2.2 for and while loops"
                },
                {
                  "name": "1.2.3 switch statements"
                }
              ]
            },
            {
              "name": "1.3 Functions",
              "children": [
                {
                  "name": "1.3.1 Function declaration and parameters"
                },
                {
                  "name": "1.3.2 Return values"
                },
                {
                  "name": "1.3.3 Function overloading"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Object-Oriented Programming (OOP)",
          "children": [
            {
              "name": "2.1 Classes and Structures",
              "children": [
                {
                  "name": "2.1.1 Defining classes and structs"
                },
                {
                  "name": "2.1.2 Properties and methods"
                },
                {
                  "name": "2.1.3 Inheritance"
                }
              ]
            },
            {
              "name": "2.2 Protocols and Extensions",
              "children": [
                {
                  "name": "2.2.1 Protocol declaration and conformance"
                },
                {
                  "name": "2.2.2 Extension methods"
                },
                {
                  "name": "2.2.3 Protocol extensions"
                }
              ]
            },
            {
              "name": "2.3 Polymorphism",
              "children": [
                {
                  "name": "2.3.1 Understanding polymorphism"
                },
                {
                  "name": "2.3.2 Method overriding"
                },
                {
                  "name": "2.3.3 Practical Example: Shape hierarchy"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Structures & Algorithms",
          "children": [
            {
              "name": "3.1 Arrays and Dictionaries",
              "children": [
                {
                  "name": "3.1.1 Array operations (append, insert, remove)"
                },
                {
                  "name": "3.1.2 Dictionary operations (accessing, adding, deleting)"
                },
                {
                  "name": "3.1.1 Project: Simple data management app"
                }
              ]
            },
            {
              "name": "3.2 Sets",
              "children": [
                {
                  "name": "3.2.1 Set operations (union, intersection)"
                },
                {
                  "name": "3.2.2 Use cases for Sets"
                },
                {
                  "name": "3.2.3 Project: Unique word counter"
                }
              ]
            },
            {
              "name": "3.3 Optionals and Error Handling",
              "children": [
                {
                  "name": "3.3.1 Optional types and unwrapping"
                },
                {
                  "name": "3.3.2 Error handling with try-catch"
                },
                {
                  "name": "3.3.3 Project: Safe data retrieval"
                }
              ]
            }
          ]
        },
        {
          "name": "4. UI Development (with SwiftUI)",
          "children": [
            {
              "name": "4.1 Basic UI elements",
              "children": [
                {
                  "name": "4.1.1 Text, Image, Button"
                },
                {
                  "name": "4.1.2 Stacks (VStack, HStack, ZStack)"
                },
                {
                  "name": "4.1.3 Project: Simple calculator UI"
                }
              ]
            },
            {
              "name": "4.2 Data Binding and State Management",
              "children": [
                {
                  "name": "4.2.1 @State and @Binding"
                },
                {
                  "name": "4.2.2 ObservableObject and Combine"
                },
                {
                  "name": "4.2.3 Project: Dynamically updating UI"
                }
              ]
            },
            {
              "name": "4.3 Navigation and Views",
              "children": [
                {
                  "name": "4.3.1 NavigationView and NavigationLink"
                },
                {
                  "name": "4.3.2 Passing data between views"
                },
                {
                  "name": "4.3.3 Project: Multi-screen app with navigation"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Concurrency",
              "children": [
                {
                  "name": "5.1.1 Grand Central Dispatch (GCD)"
                },
                {
                  "name": "5.1.2 Operation Queues"
                },
                {
                  "name": "5.1.3 Async/Await"
                }
              ]
            },
            {
              "name": "5.2 Networking",
              "children": [
                {
                  "name": "5.2.1 URLSession"
                },
                {
                  "name": "5.2.2 JSON parsing"
                },
                {
                  "name": "5.2.3 Project: Simple network request app"
                }
              ]
            },
            {
              "name": "5.3 Core Data (or other persistence solutions)",
              "children": [
                {
                  "name": "5.3.1 Setting up Core Data"
                },
                {
                  "name": "5.3.2 Data modeling and persistence"
                },
                {
                  "name": "5.3.3 Project: Data persistence app"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "TypeScript",
    "output": {
      "name": "TypeScript",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Types: Basic types (number, string, boolean, etc.)"
                },
                {
                  "name": "1.1.2 Variables and Constants: Declaration and usage"
                },
                {
                  "name": "1.1.3 Type Annotations: Adding type information to variables and functions"
                },
                {
                  "name": "1.1.4 Exercise: Create a simple program with different data types and type annotations."
                }
              ]
            },
            {
              "name": "1.2 Interfaces and Classes",
              "children": [
                {
                  "name": "1.2.1 Interfaces: Defining the shape of objects"
                },
                {
                  "name": "1.2.2 Classes: Creating blueprints for objects"
                },
                {
                  "name": "1.2.3 Exercise: Model a simple 'Person' class and use interfaces to define its properties."
                }
              ]
            },
            {
              "name": "1.3 Functions",
              "children": [
                {
                  "name": "1.3.1 Function Types: Defining the types of function parameters and return values"
                },
                {
                  "name": "1.3.2 Optional and Default Parameters"
                },
                {
                  "name": "1.3.3 Rest Parameters and Tuple Types"
                },
                {
                  "name": "1.3.4 Exercise: Create a function that takes an array of numbers and returns the sum, with type annotations."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Types",
          "children": [
            {
              "name": "2.1 Generics",
              "children": [
                {
                  "name": "2.1.1 Generic Functions: Creating reusable functions that work with different types"
                },
                {
                  "name": "2.1.2 Generic Interfaces and Classes"
                },
                {
                  "name": "2.1.3 Exercise: Create a generic function that finds the maximum value in an array of any type."
                }
              ]
            },
            {
              "name": "2.2 Union and Intersection Types",
              "children": [
                {
                  "name": "2.2.1 Union Types: Representing values that can be of multiple types"
                },
                {
                  "name": "2.2.2 Intersection Types: Combining multiple types into one"
                },
                {
                  "name": "2.2.3 Exercise: Use union and intersection types to model a flexible data structure."
                }
              ]
            },
            {
              "name": "2.3 Type Aliases",
              "children": [
                {
                  "name": "2.3.1 Creating Type Aliases for readability and reusability"
                },
                {
                  "name": "2.3.2 Using Type Aliases with Interfaces and Classes"
                },
                {
                  "name": "2.3.3 Exercise: Refactor existing code using type aliases to improve readability."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Working with JavaScript",
          "children": [
            {
              "name": "3.1 Type Inference",
              "children": [
                {
                  "name": "3.1.1 How TypeScript infers types automatically"
                },
                {
                  "name": "3.1.2 Understanding when type inference fails"
                },
                {
                  "name": "3.1.3 Exercise: Analyze a code snippet and determine the types inferred by TypeScript."
                }
              ]
            },
            {
              "name": "3.2 Type Assertion",
              "children": [
                {
                  "name": "3.2.1 Explicitly specifying the type of a variable"
                },
                {
                  "name": "3.2.2 Use cases and potential pitfalls"
                },
                {
                  "name": "3.2.3 Exercise: Use type assertion to work with data from a JavaScript library."
                }
              ]
            },
            {
              "name": "3.3 `any` and `unknown` Types",
              "children": [
                {
                  "name": "3.3.1 Using `any` to opt out of type checking (with caution!)"
                },
                {
                  "name": "3.3.2 The safer alternative: the `unknown` type"
                },
                {
                  "name": "3.3.3 Exercise: Migrate code that uses `any` to use `unknown` and add proper type handling."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Modules and Namespaces",
          "children": [
            {
              "name": "4.1 Modules",
              "children": [
                {
                  "name": "4.1.1 Importing and exporting modules"
                },
                {
                  "name": "4.1.2 Module resolution strategies"
                },
                {
                  "name": "4.1.3 Exercise: Create and import several modules in a simple application."
                }
              ]
            },
            {
              "name": "4.2 Namespaces (Legacy)",
              "children": [
                {
                  "name": "4.2.1 Understanding namespaces (for older codebases)"
                },
                {
                  "name": "4.2.2 Comparison with modules"
                },
                {
                  "name": "4.2.3 Exercise: Refactor a project using namespaces to modules."
                }
              ]
            },
            {
              "name": "4.3 Namespaces vs. Modules: A Comparison",
              "children": [
                {
                  "name": "4.3.1 When to use namespaces"
                },
                {
                  "name": "4.3.2 When to use modules"
                },
                {
                  "name": "4.3.3 Best Practices"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced & Practical Applications",
          "children": [
            {
              "name": "5.1 Asynchronous Programming",
              "children": [
                {
                  "name": "5.1.1 Promises and Async/Await with type annotations"
                },
                {
                  "name": "5.1.2 Error handling in asynchronous code"
                },
                {
                  "name": "5.1.3 Exercise: Build a simple asynchronous API fetcher with error handling."
                }
              ]
            },
            {
              "name": "5.2 Decorators",
              "children": [
                {
                  "name": "5.2.1 Using decorators to modify classes and methods"
                },
                {
                  "name": "5.2.2 Common use cases for decorators"
                },
                {
                  "name": "5.2.3 Exercise: Create a simple logging decorator."
                }
              ]
            },
            {
              "name": "5.3  Project: Build a simple React application with TypeScript",
              "children": [
                {
                  "name": "5.3.1 Setting up TypeScript in a React project"
                },
                {
                  "name": "5.3.2 Type annotations for components and props"
                },
                {
                  "name": "5.3.3 Using TypeScript with state management libraries (Redux, Zustand etc.)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "I want to become AWS cloud engineer",
    "output": {
      "name": "I want to become AWS Cloud Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core AWS Concepts",
              "children": [
                {
                  "name": "1.1.1 AWS Global Infrastructure"
                },
                {
                  "name": "1.1.2 AWS Free Tier and Account Management"
                },
                {
                  "name": "1.1.3 AWS Management Console Navigation"
                }
              ]
            },
            {
              "name": "1.2 Cloud Computing Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Cloud Models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.2.2 Virtualization and Containerization"
                },
                {
                  "name": "1.2.3 High-Availability and Disaster Recovery"
                }
              ]
            },
            {
              "name": "1.3 Networking Fundamentals",
              "children": [
                {
                  "name": "1.3.1 IP Addressing and Subnetting"
                },
                {
                  "name": "1.3.2 VPC (Virtual Private Cloud) Basics"
                },
                {
                  "name": "1.3.3 Routing and Network Security Groups (NSGs)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core AWS Services",
          "children": [
            {
              "name": "2.1 Compute Services",
              "children": [
                {
                  "name": "2.1.1 EC2 (Elastic Compute Cloud): Instance Types, Launch Configurations"
                },
                {
                  "name": "2.1.2 Auto Scaling: Scaling strategies, policies"
                },
                {
                  "name": "2.1.3 Elastic Beanstalk: Deploying applications"
                }
              ]
            },
            {
              "name": "2.2 Storage Services",
              "children": [
                {
                  "name": "2.2.1 S3 (Simple Storage Service): Object storage, lifecycle management"
                },
                {
                  "name": "2.2.2 EBS (Elastic Block Store): Persistent storage for EC2 instances"
                },
                {
                  "name": "2.2.3 Glacier: Archival storage"
                }
              ]
            },
            {
              "name": "2.3 Database Services",
              "children": [
                {
                  "name": "2.3.1 RDS (Relational Database Service): Managing relational databases"
                },
                {
                  "name": "2.3.2 DynamoDB: NoSQL database"
                },
                {
                  "name": "2.3.3 Aurora: MySQL and PostgreSQL compatible database"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced AWS Services & Architectures",
          "children": [
            {
              "name": "3.1 Networking and Security",
              "children": [
                {
                  "name": "3.1.1 VPC Peering, Transit Gateway"
                },
                {
                  "name": "3.1.2 Security Groups and IAM (Identity and Access Management) Roles"
                },
                {
                  "name": "3.1.3 Implementing a secure VPC architecture - Project: Secure VPC Setup"
                }
              ]
            },
            {
              "name": "3.2 Deployment and Orchestration",
              "children": [
                {
                  "name": "3.2.1 CloudFormation: Infrastructure as Code"
                },
                {
                  "name": "3.2.2 AWS CodePipeline and CodeDeploy: Continuous Integration/Continuous Delivery (CI/CD)"
                },
                {
                  "name": "3.2.3 Containerization with ECS (Elastic Container Service) or EKS (Elastic Kubernetes Service)"
                }
              ]
            },
            {
              "name": "3.3 Monitoring and Logging",
              "children": [
                {
                  "name": "3.3.1 CloudWatch: Monitoring metrics and logs"
                },
                {
                  "name": "3.3.2 X-Ray: Application tracing"
                },
                {
                  "name": "3.3.3 Implementing comprehensive monitoring for a deployed application - Project: Monitoring Dashboard"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Practical Experience and Certification",
          "children": [
            {
              "name": "4.1 Hands-on Projects",
              "children": [
                {
                  "name": "4.1.1 Build a multi-tier web application on AWS"
                },
                {
                  "name": "4.1.2 Design and implement a highly available and scalable system"
                },
                {
                  "name": "4.1.3 Migrate an on-premises application to AWS"
                }
              ]
            },
            {
              "name": "4.2 AWS Certification",
              "children": [
                {
                  "name": "4.2.1 AWS Certified Cloud Practitioner"
                },
                {
                  "name": "4.2.2 AWS Certified Solutions Architect - Associate"
                },
                {
                  "name": "4.2.3 AWS Certified DevOps Engineer - Professional (Optional, Advanced)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning",
          "children": [
            {
              "name": "5.1 Stay Updated",
              "children": [
                {
                  "name": "5.1.1 Follow AWS blogs and announcements"
                },
                {
                  "name": "5.1.2 Participate in AWS online communities"
                },
                {
                  "name": "5.1.3 Attend AWS re:Invent and other AWS events"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "AWS Cloud engineer roadmap",
    "output": {
      "name": "AWS Cloud Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundational AWS Services",
          "children": [
            {
              "name": "1.1 Core AWS Concepts",
              "children": [
                {
                  "name": "1.1.1 AWS Global Infrastructure (Regions, Availability Zones)"
                },
                {
                  "name": "1.1.2 AWS Account Management and IAM (Users, Groups, Policies)"
                },
                {
                  "name": "1.1.3 AWS Pricing and Cost Management"
                },
                {
                  "name": "1.1.4 Practical Exercise: Create an AWS account, configure IAM users, and analyze pricing for basic services."
                }
              ]
            },
            {
              "name": "1.2 Compute Services",
              "children": [
                {
                  "name": "1.2.1 EC2 (Instance Types, Launch Configurations, AMI's)"
                },
                {
                  "name": "1.2.2 Auto Scaling Groups"
                },
                {
                  "name": "1.2.3 Elastic Beanstalk (Deployment of web applications)"
                },
                {
                  "name": "1.2.4 Practical Exercise: Launch an EC2 instance, configure security groups, and create an Auto Scaling group."
                }
              ]
            },
            {
              "name": "1.3 Storage Services",
              "children": [
                {
                  "name": "1.3.1 S3 (Buckets, Object Storage, Versioning)"
                },
                {
                  "name": "1.3.2 EBS (Volume Types, Snapshots)"
                },
                {
                  "name": "1.3.3 Glacier (Archive Storage)"
                },
                {
                  "name": "1.3.4 Practical Exercise: Create an S3 bucket, upload files, and configure lifecycle policies."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Networking and Security",
          "children": [
            {
              "name": "2.1 Networking Fundamentals",
              "children": [
                {
                  "name": "2.1.1 VPC (Virtual Private Cloud), Subnets, Route Tables"
                },
                {
                  "name": "2.1.2 Internet Gateway, NAT Gateway, VPN Connections"
                },
                {
                  "name": "2.1.3 Security Groups and Network ACLs"
                },
                {
                  "name": "2.1.4 Practical Exercise: Create a VPC, configure subnets, and set up security groups."
                }
              ]
            },
            {
              "name": "2.2 Security Best Practices",
              "children": [
                {
                  "name": "2.2.1 IAM Roles and Policies (Advanced Configurations)"
                },
                {
                  "name": "2.2.2 Key Management Service (KMS)"
                },
                {
                  "name": "2.2.3 AWS Shield (DDoS Protection)"
                },
                {
                  "name": "2.2.4 Practical Exercise: Implement role-based access control for EC2 instances and S3 buckets."
                }
              ]
            },
            {
              "name": "2.3 Networking Services",
              "children": [
                {
                  "name": "2.3.1 Load Balancing (ELB, Application Load Balancers, Network Load Balancers)"
                },
                {
                  "name": "2.3.2 CloudFront (CDN)"
                },
                {
                  "name": "2.3.3 Direct Connect"
                },
                {
                  "name": "2.3.4 Practical Exercise: Configure an Application Load Balancer in front of multiple EC2 instances."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Databases and Data Management",
          "children": [
            {
              "name": "3.1 Relational Databases",
              "children": [
                {
                  "name": "3.1.1 RDS (MySQL, PostgreSQL, Aurora)"
                },
                {
                  "name": "3.1.2 Database backups and snapshots"
                },
                {
                  "name": "3.1.3 Read replicas"
                },
                {
                  "name": "3.1.4 Practical Exercise: Create an RDS instance and configure backups."
                }
              ]
            },
            {
              "name": "3.2 NoSQL Databases",
              "children": [
                {
                  "name": "3.2.1 DynamoDB (Tables, Indexes, Scaling)"
                },
                {
                  "name": "3.2.2 Data Modeling for DynamoDB"
                },
                {
                  "name": "3.2.3 Querying and accessing data"
                },
                {
                  "name": "3.2.4 Practical Exercise: Create a DynamoDB table and perform basic CRUD operations."
                }
              ]
            },
            {
              "name": "3.3 Data Analytics",
              "children": [
                {
                  "name": "3.3.1 Redshift (Data Warehousing)"
                },
                {
                  "name": "3.3.2 S3 for data lakes"
                },
                {
                  "name": "3.3.3 Athena (Serverless query engine)"
                },
                {
                  "name": "3.3.4 Practical Exercise: Load data into S3 and analyze using Athena."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Automation",
          "children": [
            {
              "name": "4.1 Infrastructure as Code (IaC)",
              "children": [
                {
                  "name": "4.1.1 CloudFormation"
                },
                {
                  "name": "4.1.2 Terraform"
                },
                {
                  "name": "4.1.3 Practical Exercise: Create a simple infrastructure stack using CloudFormation or Terraform."
                }
              ]
            },
            {
              "name": "4.2 CI/CD Pipelines",
              "children": [
                {
                  "name": "4.2.1 CodePipeline"
                },
                {
                  "name": "4.2.2 CodeBuild"
                },
                {
                  "name": "4.2.3 CodeDeploy"
                },
                {
                  "name": "4.2.4 Practical Exercise: Create a simple CI/CD pipeline for deploying a web application."
                }
              ]
            },
            {
              "name": "4.3 Containerization",
              "children": [
                {
                  "name": "4.3.1 ECS (Elastic Container Service)"
                },
                {
                  "name": "4.3.2 EKS (Elastic Kubernetes Service)"
                },
                {
                  "name": "4.3.3 Docker"
                },
                {
                  "name": "4.3.4 Practical Exercise: Deploy a simple containerized application using ECS or EKS."
                }
              ]
            }
          ]
        },
        {
          "name": "5. Monitoring and Logging",
          "children": [
            {
              "name": "5.1 Monitoring",
              "children": [
                {
                  "name": "5.1.1 CloudWatch (Metrics, Logs, Alarms)"
                },
                {
                  "name": "5.1.2 X-Ray (Application tracing)"
                },
                {
                  "name": "5.1.3 Practical Exercise: Create CloudWatch alarms for EC2 instances and S3 buckets."
                }
              ]
            },
            {
              "name": "5.2 Logging and Auditing",
              "children": [
                {
                  "name": "5.2.1 CloudTrail (API activity tracking)"
                },
                {
                  "name": "5.2.2 Config (Configuration management)"
                },
                {
                  "name": "5.2.3 Practical Exercise: Analyze CloudTrail logs to identify API calls and security events."
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "AWS Cloud engineer",
    "output": {
      "name": "AWS Cloud Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core AWS Concepts",
              "children": [
                {
                  "name": "1.1.1 AWS Global Infrastructure"
                },
                {
                  "name": "1.1.2 AWS Management Console Navigation"
                },
                {
                  "name": "1.1.3 AWS Free Tier and Account Management"
                }
              ]
            },
            {
              "name": "1.2 Compute Services",
              "children": [
                {
                  "name": "1.2.1 EC2: Launching and managing instances"
                },
                {
                  "name": "1.2.2 EC2: Instance types, storage, and networking"
                },
                {
                  "name": "1.2.3 Project: Deploy a simple web server on EC2"
                }
              ]
            },
            {
              "name": "1.3 Storage Services",
              "children": [
                {
                  "name": "1.3.1 S3: Object storage, buckets, and access control"
                },
                {
                  "name": "1.3.2 EBS: Block storage for EC2 instances"
                },
                {
                  "name": "1.3.3 Project: Store and retrieve files using S3"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Networking & Security",
          "children": [
            {
              "name": "2.1 Networking Fundamentals",
              "children": [
                {
                  "name": "2.1.1 VPC: Virtual Private Cloud concepts and creation"
                },
                {
                  "name": "2.1.2 Subnets, routing tables, and internet gateways"
                },
                {
                  "name": "2.1.3 Project: Set up a VPC with public and private subnets"
                }
              ]
            },
            {
              "name": "2.2 Security Best Practices",
              "children": [
                {
                  "name": "2.2.1 IAM: Identity and Access Management roles and policies"
                },
                {
                  "name": "2.2.2 Security Groups: Network-level firewalls for EC2"
                },
                {
                  "name": "2.2.3 Project: Secure an EC2 instance using IAM roles and security groups"
                }
              ]
            },
            {
              "name": "2.3 Advanced Networking",
              "children": [
                {
                  "name": "2.3.1 Load Balancing (ELB/ALB): Distributing traffic across multiple instances"
                },
                {
                  "name": "2.3.2 Route53: DNS management for AWS resources"
                },
                {
                  "name": "2.3.3 Project: Implement load balancing for a web application"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Database & Data Management",
          "children": [
            {
              "name": "3.1 Relational Databases",
              "children": [
                {
                  "name": "3.1.1 RDS: Relational Database Service (MySQL, PostgreSQL, etc.)"
                },
                {
                  "name": "3.1.2 RDS: Instance management, backups, and security"
                },
                {
                  "name": "3.1.3 Project: Deploy a relational database on RDS"
                }
              ]
            },
            {
              "name": "3.2 NoSQL Databases",
              "children": [
                {
                  "name": "3.2.1 DynamoDB: NoSQL database for high throughput applications"
                },
                {
                  "name": "3.2.2 DynamoDB: Data modeling and query patterns"
                },
                {
                  "name": "3.2.3 Project: Build a simple application using DynamoDB"
                }
              ]
            },
            {
              "name": "3.3 Data Management",
              "children": [
                {
                  "name": "3.3.1 S3 for data lakes"
                },
                {
                  "name": "3.3.2 Redshift for data warehousing"
                },
                {
                  "name": "3.3.3 Project: Design a data pipeline using S3 and Redshift"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Automation & Deployment",
          "children": [
            {
              "name": "4.1 Infrastructure as Code (IaC)",
              "children": [
                {
                  "name": "4.1.1 CloudFormation: Template-based provisioning"
                },
                {
                  "name": "4.1.2 Terraform: Infrastructure as code using HashiCorp Terraform"
                },
                {
                  "name": "4.1.3 Project: Automate infrastructure deployment using CloudFormation or Terraform"
                }
              ]
            },
            {
              "name": "4.2 CI/CD Pipelines",
              "children": [
                {
                  "name": "4.2.1 CodePipeline: Automated build, test, and deploy"
                },
                {
                  "name": "4.2.2 CodeDeploy: Deploy applications to EC2, Lambda, etc."
                },
                {
                  "name": "4.2.3 Project: Implement a CI/CD pipeline for a simple application"
                }
              ]
            },
            {
              "name": "4.3 Serverless Computing",
              "children": [
                {
                  "name": "4.3.1 AWS Lambda: Event-driven compute"
                },
                {
                  "name": "4.3.2 API Gateway: Creating and managing APIs"
                },
                {
                  "name": "4.3.3 Project: Deploy a serverless application using Lambda and API Gateway"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Monitoring & Observability",
          "children": [
            {
              "name": "5.1 Monitoring & Logging",
              "children": [
                {
                  "name": "5.1.1 CloudWatch: Monitoring metrics and logs"
                },
                {
                  "name": "5.1.2 CloudTrail: Auditing AWS API calls"
                },
                {
                  "name": "5.1.3 Project: Set up CloudWatch monitoring for EC2 instances"
                }
              ]
            },
            {
              "name": "5.2 Alerting & Notifications",
              "children": [
                {
                  "name": "5.2.1 CloudWatch Alarms: Setting up alerts based on metrics"
                },
                {
                  "name": "5.2.2 SNS: Simple Notification Service for alerts and messages"
                },
                {
                  "name": "5.2.3 Project: Configure alerts for critical system events"
                }
              ]
            },
            {
              "name": "5.3 Observability Tools",
              "children": [
                {
                  "name": "5.3.1 X-Ray: Distributed tracing for microservices"
                },
                {
                  "name": "5.3.2  AWS Profiler: Performance profiling for Lambda functions"
                },
                {
                  "name": "5.3.3 Project: Implement tracing for a distributed application"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Steps to master AWS Cloud",
    "output": {
      "name": "Steps to master AWS Cloud",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 AWS Global Infrastructure"
                },
                {
                  "name": "1.1.2 AWS Free Tier and Account Setup"
                },
                {
                  "name": "1.1.3 AWS Management Console Navigation"
                }
              ]
            },
            {
              "name": "1.2 Compute Services",
              "children": [
                {
                  "name": "1.2.1 EC2: Launching and managing instances"
                },
                {
                  "name": "1.2.2 EC2: Instance types and optimization"
                },
                {
                  "name": "1.2.3 Project: Deploy a simple web server on EC2"
                }
              ]
            },
            {
              "name": "1.3 Storage Services",
              "children": [
                {
                  "name": "1.3.1 S3: Object storage basics and buckets"
                },
                {
                  "name": "1.3.2 EBS: Block storage for EC2 instances"
                },
                {
                  "name": "1.3.3 Project: Store and retrieve files using S3"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Networking & Security",
          "children": [
            {
              "name": "2.1 VPC & Subnets",
              "children": [
                {
                  "name": "2.1.1 VPC: Creating and configuring virtual networks"
                },
                {
                  "name": "2.1.2 Subnets: Public and private subnets"
                },
                {
                  "name": "2.1.3 Project: Set up a VPC with public and private subnets"
                }
              ]
            },
            {
              "name": "2.2 Security Groups & IAM",
              "children": [
                {
                  "name": "2.2.1 Security Groups: Controlling inbound/outbound traffic"
                },
                {
                  "name": "2.2.2 IAM: User management and permissions"
                },
                {
                  "name": "2.2.3 Project: Secure an EC2 instance using Security Groups and IAM roles"
                }
              ]
            },
            {
              "name": "2.3 Networking Services",
              "children": [
                {
                  "name": "2.3.1 Route 53: DNS management"
                },
                {
                  "name": "2.3.2 Elastic Load Balancing (ELB): Distributing traffic"
                },
                {
                  "name": "2.3.3 Project: Implement load balancing for a web application"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Databases & Data Management",
          "children": [
            {
              "name": "3.1 Relational Databases (RDS)",
              "children": [
                {
                  "name": "3.1.1 RDS: Creating and managing MySQL/PostgreSQL instances"
                },
                {
                  "name": "3.1.2 RDS: Connecting to RDS instances from EC2"
                },
                {
                  "name": "3.1.3 Project: Deploy a web application with a relational database"
                }
              ]
            },
            {
              "name": "3.2 NoSQL Databases (DynamoDB)",
              "children": [
                {
                  "name": "3.2.1 DynamoDB: Key-value and document database"
                },
                {
                  "name": "3.2.2 DynamoDB: Scaling and performance optimization"
                },
                {
                  "name": "3.2.3 Project: Build a simple application using DynamoDB"
                }
              ]
            },
            {
              "name": "3.3 Data Analytics (S3 & Athena)",
              "children": [
                {
                  "name": "3.3.1 S3 for data storage"
                },
                {
                  "name": "3.3.2 Athena for querying data"
                },
                {
                  "name": "3.3.3 Project: Analyze data stored in S3 using Athena"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Services & Architectures",
          "children": [
            {
              "name": "4.1 Serverless Computing (Lambda)",
              "children": [
                {
                  "name": "4.1.1 Lambda: Event-driven compute"
                },
                {
                  "name": "4.1.2 Lambda: Functions and triggers"
                },
                {
                  "name": "4.1.3 Project: Create a serverless application using Lambda"
                }
              ]
            },
            {
              "name": "4.2 Containerization (ECS & EKS)",
              "children": [
                {
                  "name": "4.2.1 ECS: Container orchestration"
                },
                {
                  "name": "4.2.2 EKS: Kubernetes on AWS"
                },
                {
                  "name": "4.2.3 Project: Deploy a containerized application using ECS"
                }
              ]
            },
            {
              "name": "4.3 CI/CD with AWS",
              "children": [
                {
                  "name": "4.3.1 CodePipeline: Building and deploying pipelines"
                },
                {
                  "name": "4.3.2 CodeDeploy: Deploying applications"
                },
                {
                  "name": "4.3.3 Project: Implement a CI/CD pipeline for an application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Cost Optimization and Best Practices",
          "children": [
            {
              "name": "5.1 Cost Explorer",
              "children": [
                {
                  "name": "5.1.1 Understanding AWS Costs"
                },
                {
                  "name": "5.1.2 Using Cost Explorer to Analyze Spending"
                },
                {
                  "name": "5.1.3 Implementing Cost Optimization Strategies"
                }
              ]
            },
            {
              "name": "5.2 Security Best Practices",
              "children": [
                {
                  "name": "5.2.1 Identity and Access Management (IAM) Best Practices"
                },
                {
                  "name": "5.2.2 Security Group and Network ACL Best Practices"
                },
                {
                  "name": "5.2.3 Data Encryption and Protection Best Practices"
                }
              ]
            },
            {
              "name": "5.3 Monitoring and Logging",
              "children": [
                {
                  "name": "5.3.1 CloudWatch Metrics and Logs"
                },
                {
                  "name": "5.3.2 Setting up Alarms and Notifications"
                },
                {
                  "name": "5.3.3 Analyzing Logs and Identifying Issues"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How do I become a AWS Cloud ENgineer",
    "output": {
      "name": "How do I become an AWS Cloud Engineer",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Cloud Computing Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Cloud Models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.1.2 Cloud Deployment Models (Public, Private, Hybrid)"
                },
                {
                  "name": "1.1.3 Cloud Security Principles"
                }
              ]
            },
            {
              "name": "1.2 AWS Core Services",
              "children": [
                {
                  "name": "1.2.1 EC2 (Compute): Launching instances, managing security groups"
                },
                {
                  "name": "1.2.2 S3 (Storage): Object storage, lifecycle management"
                },
                {
                  "name": "1.2.3 VPC (Networking): Subnets, routing tables, internet gateways"
                },
                {
                  "name": "1.2.4 IAM (Security): Users, groups, roles, policies"
                }
              ]
            },
            {
              "name": "1.3 Linux Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Command-line interface (CLI) basics"
                },
                {
                  "name": "1.3.2 File system navigation"
                },
                {
                  "name": "1.3.3 Basic Linux administration"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core AWS Services",
          "children": [
            {
              "name": "2.1 Compute Services",
              "children": [
                {
                  "name": "2.1.1 Deep dive into EC2 instance types, optimization"
                },
                {
                  "name": "2.1.2 Auto Scaling: Scaling based on demand"
                },
                {
                  "name": "2.1.3 Elastic Beanstalk: Deploying applications easily"
                },
                {
                  "name": "2.1.4 Containerization with ECS or EKS (choose one to start)"
                }
              ]
            },
            {
              "name": "2.2 Storage Services",
              "children": [
                {
                  "name": "2.2.1 S3 advanced features: Versioning, access control lists (ACLs)"
                },
                {
                  "name": "2.2.2 EBS (Elastic Block Store): Volume types, performance optimization"
                },
                {
                  "name": "2.2.3 Glacier: Archiving data for long-term storage"
                }
              ]
            },
            {
              "name": "2.3 Networking and Security",
              "children": [
                {
                  "name": "2.3.1 Advanced VPC configurations: Routing, VPN connections"
                },
                {
                  "name": "2.3.2 Security Groups and Network ACLs: Fine-grained control over traffic"
                },
                {
                  "name": "2.3.3 IAM roles for EC2 instances and other services"
                },
                {
                  "name": "2.3.4 AWS WAF (Web Application Firewall): Protecting web applications"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Database and Data Management",
          "children": [
            {
              "name": "3.1 Relational Databases",
              "children": [
                {
                  "name": "3.1.1 Amazon RDS: Managing different database engines (MySQL, PostgreSQL, etc.)"
                },
                {
                  "name": "3.1.2 Aurora: AWS's MySQL and PostgreSQL-compatible database service"
                }
              ]
            },
            {
              "name": "3.2 NoSQL Databases",
              "children": [
                {
                  "name": "3.2.1 DynamoDB: Key-value and document database"
                },
                {
                  "name": "3.2.2 Understanding scalability and performance considerations"
                }
              ]
            },
            {
              "name": "3.3 Data Analytics",
              "children": [
                {
                  "name": "3.3.1 S3 Data Analysis"
                },
                {
                  "name": "3.3.2 Introduction to AWS Glue, EMR, Redshift (Choose one to start)"
                },
                {
                  "name": "3.3.3 Project: Analyze a sample dataset using chosen service."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Automation and DevOps",
          "children": [
            {
              "name": "4.1 Infrastructure as Code (IaC)",
              "children": [
                {
                  "name": "4.1.1 CloudFormation: Defining infrastructure with YAML or JSON"
                },
                {
                  "name": "4.1.2 Terraform: Multi-cloud IaC tool"
                },
                {
                  "name": "4.1.3 Project: Automate EC2 instance creation using chosen IaC tool"
                }
              ]
            },
            {
              "name": "4.2 CI/CD Pipelines",
              "children": [
                {
                  "name": "4.2.1 CodePipeline: Creating automated build and deployment pipelines"
                },
                {
                  "name": "4.2.2 CodeDeploy: Deploying applications to EC2 instances"
                },
                {
                  "name": "4.2.3 Project: Set up a basic CI/CD pipeline for a simple application"
                }
              ]
            },
            {
              "name": "4.3 Monitoring and Logging",
              "children": [
                {
                  "name": "4.3.1 CloudWatch: Monitoring metrics and logs"
                },
                {
                  "name": "4.3.2 Setting up alarms and notifications"
                },
                {
                  "name": "4.3.3 Project: Set up CloudWatch monitoring for an EC2 instance"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Certification",
          "children": [
            {
              "name": "5.1 Advanced Networking",
              "children": [
                {
                  "name": "5.1.1 Direct Connect: Establishing a dedicated connection to AWS"
                },
                {
                  "name": "5.1.2 Transit Gateway: Connecting multiple VPCs"
                },
                {
                  "name": "5.1.3 AWS Global Accelerator: Improving application performance"
                }
              ]
            },
            {
              "name": "5.2 Serverless Computing",
              "children": [
                {
                  "name": "5.2.1 Lambda: Event-driven compute service"
                },
                {
                  "name": "5.2.2 API Gateway: Creating RESTful APIs"
                },
                {
                  "name": "5.2.3 Project: Build a serverless application"
                }
              ]
            },
            {
              "name": "5.3 AWS Certification",
              "children": [
                {
                  "name": "5.3.1 AWS Certified Cloud Practitioner"
                },
                {
                  "name": "5.3.2 AWS Certified Solutions Architect - Associate"
                },
                {
                  "name": "5.3.3 AWS Certified DevOps Engineer - Professional (consider after significant experience)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Google Cloud ",
    "output": {
      "name": "Google Cloud Platform Learning Roadmap",
      "children": [
        {
          "name": "1. Foundational Concepts",
          "children": [
            {
              "name": "1.1 Core GCP Services",
              "children": [
                {
                  "name": "1.1.1 Compute Engine (VM Instances): Launching, managing, and stopping VMs"
                },
                {
                  "name": "1.1.2 Cloud Storage: Object storage, buckets, lifecycle management"
                },
                {
                  "name": "1.1.3 Cloud Networking: VPC networks, subnets, firewalls, and routing"
                }
              ]
            },
            {
              "name": "1.2 GCP Pricing and Billing",
              "children": [
                {
                  "name": "1.2.1 Understanding GCP pricing models: pay-as-you-go, sustained use discounts"
                },
                {
                  "name": "1.2.2 Monitoring and managing your GCP costs: Setting budgets and alerts"
                },
                {
                  "name": "1.2.3 Free Tier resources and limitations"
                }
              ]
            },
            {
              "name": "1.3 Google Cloud Console and Command Line Interface (CLI)",
              "children": [
                {
                  "name": "1.3.1 Navigating the Google Cloud Console: Creating projects, managing resources"
                },
                {
                  "name": "1.3.2 Using the gcloud CLI:  Basic commands, authentication, and resource management"
                },
                {
                  "name": "1.3.3 Project organization and IAM roles: Understanding access control"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Compute and Networking",
          "children": [
            {
              "name": "2.1 Advanced Compute Engine",
              "children": [
                {
                  "name": "2.1.1 Managed Instance Groups (MIGs): Auto-scaling and high availability"
                },
                {
                  "name": "2.1.2 Custom machine images: Creating and managing your own VM images"
                },
                {
                  "name": "2.1.3 Preemptible VMs: Cost optimization strategies"
                }
              ]
            },
            {
              "name": "2.2 Networking Concepts",
              "children": [
                {
                  "name": "2.2.1 VPC Peering and Cloud Interconnect: Connecting to on-premises networks"
                },
                {
                  "name": "2.2.2 Cloud Load Balancing: Distributing traffic across multiple VMs"
                },
                {
                  "name": "2.2.3 Cloud DNS: Managing DNS records and configurations"
                }
              ]
            },
            {
              "name": "2.3 Kubernetes Engine (GKE)",
              "children": [
                {
                  "name": "2.3.1 Deploying a simple application to GKE"
                },
                {
                  "name": "2.3.2 Understanding Kubernetes concepts: pods, deployments, services"
                },
                {
                  "name": "2.3.3 Managing GKE clusters: scaling, upgrades, and monitoring"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Storage and Databases",
          "children": [
            {
              "name": "3.1 Cloud Storage Advanced Features",
              "children": [
                {
                  "name": "3.1.1 Advanced Storage options: Nearline, Coldline, Archive"
                },
                {
                  "name": "3.1.2 Data lifecycle management: Policies and automation"
                },
                {
                  "name": "3.1.3 Data transfer and synchronization tools"
                }
              ]
            },
            {
              "name": "3.2 Cloud SQL and other Databases",
              "children": [
                {
                  "name": "3.2.1 Setting up and managing Cloud SQL instances (MySQL, PostgreSQL, SQL Server)"
                },
                {
                  "name": "3.2.2 Cloud Spanner: Globally-distributed, scalable database"
                },
                {
                  "name": "3.2.3 Cloud Datastore: NoSQL database for flexible schema applications"
                }
              ]
            },
            {
              "name": "3.3 Big Data and Analytics",
              "children": [
                {
                  "name": "3.3.1 BigQuery: Data warehousing and analysis"
                },
                {
                  "name": "3.3.2 Dataflow: Stream and batch data processing"
                },
                {
                  "name": "3.3.3 Dataproc: Managed Hadoop and Spark clusters (Project)"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Serverless and App Development",
          "children": [
            {
              "name": "4.1 Cloud Functions",
              "children": [
                {
                  "name": "4.1.1 Creating and deploying serverless functions"
                },
                {
                  "name": "4.1.2 Event-driven architectures and integration with other services"
                },
                {
                  "name": "4.1.3 Function scaling and monitoring (Project)"
                }
              ]
            },
            {
              "name": "4.2 Cloud Run",
              "children": [
                {
                  "name": "4.2.1 Deploying containerized applications"
                },
                {
                  "name": "4.2.2 Auto-scaling and managed infrastructure"
                },
                {
                  "name": "4.2.3 Integrating with other GCP services (Project)"
                }
              ]
            },
            {
              "name": "4.3 App Engine",
              "children": [
                {
                  "name": "4.3.1 Deploying web applications using App Engine"
                },
                {
                  "name": "4.3.2 Scaling and managing App Engine instances"
                },
                {
                  "name": "4.3.3 Choosing between App Engine, Cloud Run and Cloud Functions"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Security and Operations",
          "children": [
            {
              "name": "5.1 Identity and Access Management (IAM)",
              "children": [
                {
                  "name": "5.1.1 Implementing role-based access control (RBAC)"
                },
                {
                  "name": "5.1.2 Managing service accounts and permissions"
                },
                {
                  "name": "5.1.3 Auditing and logging access"
                }
              ]
            },
            {
              "name": "5.2 Security Best Practices",
              "children": [
                {
                  "name": "5.2.1 Securing VMs and networks: firewalls, access control lists"
                },
                {
                  "name": "5.2.2 Data encryption: at rest and in transit"
                },
                {
                  "name": "5.2.3 Vulnerability scanning and remediation"
                }
              ]
            },
            {
              "name": "5.3 Monitoring and Logging",
              "children": [
                {
                  "name": "5.3.1 Using Cloud Monitoring: setting up dashboards and alerts"
                },
                {
                  "name": "5.3.2 Analyzing logs with Cloud Logging"
                },
                {
                  "name": "5.3.3 Implementing tracing and debugging with Cloud Trace and Debugger (Project)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Google cloud (GCP) roadmap",
    "output": {
      "name": "Google Cloud (GCP) Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 GCP Overview & Architecture"
                },
                {
                  "name": "1.1.2 Cloud Computing Fundamentals (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.1.3 GCP Pricing and Billing"
                }
              ]
            },
            {
              "name": "1.2 Google Cloud Console",
              "children": [
                {
                  "name": "1.2.1 Navigating the Console"
                },
                {
                  "name": "1.2.2 Creating and Managing Projects"
                },
                {
                  "name": "1.2.3 Understanding IAM (Identity and Access Management)"
                },
                {
                  "name": "1.2.4 Project Exercise: Setting up a GCP Project and enabling billing"
                }
              ]
            },
            {
              "name": "1.3 Compute Engine Basics",
              "children": [
                {
                  "name": "1.3.1 Virtual Machines (VMs)"
                },
                {
                  "name": "1.3.2 Instance Types and Machine Sizes"
                },
                {
                  "name": "1.3.3 Creating and Deleting VMs"
                },
                {
                  "name": "1.3.4 Project Exercise: Deploying a simple web server on a VM"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Compute and Networking",
          "children": [
            {
              "name": "2.1 Compute Engine Advanced",
              "children": [
                {
                  "name": "2.1.1 Persistent Disks"
                },
                {
                  "name": "2.1.2 Snapshots and Images"
                },
                {
                  "name": "2.1.3 Networking Concepts (VPCs, Subnets, Firewalls)"
                },
                {
                  "name": "2.1.4 Project Exercise: Setting up a highly available web application"
                }
              ]
            },
            {
              "name": "2.2 Networking Services",
              "children": [
                {
                  "name": "2.2.1 Cloud Load Balancing"
                },
                {
                  "name": "2.2.2 Cloud DNS"
                },
                {
                  "name": "2.2.3 Cloud VPN"
                },
                {
                  "name": "2.2.4 Project Exercise: Configuring Load Balancing for a web application"
                }
              ]
            },
            {
              "name": "2.3 Containerization with Kubernetes",
              "children": [
                {
                  "name": "2.3.1 Introduction to Kubernetes"
                },
                {
                  "name": "2.3.2 Deploying containers using Google Kubernetes Engine (GKE)"
                },
                {
                  "name": "2.3.3 Managing Kubernetes clusters"
                },
                {
                  "name": "2.3.4 Project Exercise: Deploying a simple application to GKE"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Storage and Databases",
          "children": [
            {
              "name": "3.1 Cloud Storage",
              "children": [
                {
                  "name": "3.1.1 Object Storage Concepts"
                },
                {
                  "name": "3.1.2 Buckets, Objects, and Access Control"
                },
                {
                  "name": "3.1.3 Data Transfer and Management"
                },
                {
                  "name": "3.1.4 Project Exercise: Uploading and managing files in Cloud Storage"
                }
              ]
            },
            {
              "name": "3.2 Cloud SQL",
              "children": [
                {
                  "name": "3.2.1 Relational Database Management Systems (RDBMS)"
                },
                {
                  "name": "3.2.2 MySQL, PostgreSQL instances"
                },
                {
                  "name": "3.2.3 Connecting to Cloud SQL"
                },
                {
                  "name": "3.2.4 Project Exercise: Creating and managing a Cloud SQL database"
                }
              ]
            },
            {
              "name": "3.3 BigQuery",
              "children": [
                {
                  "name": "3.3.1 Introduction to BigQuery"
                },
                {
                  "name": "3.3.2 Data Loading and Querying"
                },
                {
                  "name": "3.3.3 Data Analysis and Visualization"
                },
                {
                  "name": "3.3.4 Project Exercise: Analyzing a public dataset in BigQuery"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Data Analytics and Machine Learning",
          "children": [
            {
              "name": "4.1 Big Data Processing with Dataproc",
              "children": [
                {
                  "name": "4.1.1 Introduction to Apache Spark and Hadoop"
                },
                {
                  "name": "4.1.2 Creating and managing Dataproc clusters"
                },
                {
                  "name": "4.1.3 Running Spark and Hadoop jobs"
                },
                {
                  "name": "4.1.4 Project Exercise: Processing a large dataset using Dataproc"
                }
              ]
            },
            {
              "name": "4.2 Machine Learning with Vertex AI",
              "children": [
                {
                  "name": "4.2.1 Introduction to Vertex AI"
                },
                {
                  "name": "4.2.2 Training and deploying machine learning models"
                },
                {
                  "name": "4.2.3 Model monitoring and management"
                },
                {
                  "name": "4.2.4 Project Exercise: Training and deploying a simple machine learning model using Vertex AI"
                }
              ]
            },
            {
              "name": "4.3 Dataflow and Pub/Sub",
              "children": [
                {
                  "name": "4.3.1 Dataflow for streaming and batch data processing"
                },
                {
                  "name": "4.3.2 Pub/Sub for message queueing"
                },
                {
                  "name": "4.3.3 Integration between Dataflow and Pub/Sub"
                },
                {
                  "name": "4.3.4 Project Exercise: Building a real-time data pipeline using Dataflow and Pub/Sub"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Security and Operations",
          "children": [
            {
              "name": "5.1 Security Best Practices",
              "children": [
                {
                  "name": "5.1.1 IAM roles and permissions"
                },
                {
                  "name": "5.1.2 Network security (firewalls, VPC peering)"
                },
                {
                  "name": "5.1.3 Data encryption and key management"
                },
                {
                  "name": "5.1.4 Project Exercise: Implementing basic security measures for a GCP project"
                }
              ]
            },
            {
              "name": "5.2 Monitoring and Logging",
              "children": [
                {
                  "name": "5.2.1 Cloud Monitoring"
                },
                {
                  "name": "5.2.2 Cloud Logging"
                },
                {
                  "name": "5.2.3 Setting up alerts and dashboards"
                },
                {
                  "name": "5.2.4 Project Exercise: Monitoring a running application and setting up alerts"
                }
              ]
            },
            {
              "name": "5.3 Deployment and Management",
              "children": [
                {
                  "name": "5.3.1 Deployment Manager"
                },
                {
                  "name": "5.3.2 Terraform for Infrastructure as Code"
                },
                {
                  "name": "5.3.3 Continuous Integration/Continuous Delivery (CI/CD)"
                },
                {
                  "name": "5.3.4 Project Exercise: Automating the deployment of an application using Terraform"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a Google cloud expert",
    "output": {
      "name": "How to Become a Google Cloud Expert",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Core Cloud Concepts",
              "children": [
                {
                  "name": "1.1.1 Cloud Computing Fundamentals (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.1.2 Google Cloud Platform (GCP) Overview and Architecture"
                },
                {
                  "name": "1.1.3  Networking Fundamentals (IP addressing, subnetting, firewalls)"
                }
              ]
            },
            {
              "name": "1.2 Compute Engine Basics",
              "children": [
                {
                  "name": "1.2.1 Creating and managing Virtual Machines (VMs)"
                },
                {
                  "name": "1.2.2 Understanding VM instances, machine types, and zones"
                },
                {
                  "name": "1.2.3 Project: Deploy a simple web server on Compute Engine"
                }
              ]
            },
            {
              "name": "1.3 Storage Options",
              "children": [
                {
                  "name": "1.3.1 Cloud Storage (buckets, objects, lifecycle management)"
                },
                {
                  "name": "1.3.2 Persistent Disk (types, performance, snapshots)"
                },
                {
                  "name": "1.3.3 Project:  Store and retrieve data using Cloud Storage"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Essential GCP Services",
          "children": [
            {
              "name": "2.1 Databases",
              "children": [
                {
                  "name": "2.1.1 Cloud SQL (MySQL, PostgreSQL, SQL Server)"
                },
                {
                  "name": "2.1.2 Cloud Spanner (globally distributed database)"
                },
                {
                  "name": "2.1.3 Project: Build a simple application using Cloud SQL"
                }
              ]
            },
            {
              "name": "2.2 Networking and Security",
              "children": [
                {
                  "name": "2.2.1 Virtual Private Cloud (VPC) Networks"
                },
                {
                  "name": "2.2.2 Cloud Load Balancing"
                },
                {
                  "name": "2.2.3 Cloud Firewall Rules and Security Best Practices"
                }
              ]
            },
            {
              "name": "2.3 Big Data and Analytics",
              "children": [
                {
                  "name": "2.3.1 BigQuery (data warehousing)"
                },
                {
                  "name": "2.3.2 Dataflow (stream and batch processing)"
                },
                {
                  "name": "2.3.3 Project: Analyze a sample dataset using BigQuery"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced GCP Services and Architectures",
          "children": [
            {
              "name": "3.1 Serverless Computing",
              "children": [
                {
                  "name": "3.1.1 Cloud Functions (event-driven functions)"
                },
                {
                  "name": "3.1.2 Cloud Run (containerized applications)"
                },
                {
                  "name": "3.1.3 Project: Create a serverless application using Cloud Functions"
                }
              ]
            },
            {
              "name": "3.2 Kubernetes and Containerization",
              "children": [
                {
                  "name": "3.2.1 Google Kubernetes Engine (GKE)"
                },
                {
                  "name": "3.2.2 Deploying and managing containers on GKE"
                },
                {
                  "name": "3.2.3 Project: Deploy a microservices application on GKE"
                }
              ]
            },
            {
              "name": "3.3 DevOps and Automation",
              "children": [
                {
                  "name": "3.3.1 Deployment Manager"
                },
                {
                  "name": "3.3.2 Cloud Build"
                },
                {
                  "name": "3.3.3 Continuous Integration and Continuous Delivery (CI/CD) pipelines"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialization and Certification",
          "children": [
            {
              "name": "4.1 Choose a Specialization",
              "children": [
                {
                  "name": "4.1.1 Data Engineering"
                },
                {
                  "name": "4.1.2 Machine Learning"
                },
                {
                  "name": "4.1.3 DevOps"
                }
              ]
            },
            {
              "name": "4.2 Google Cloud Certifications",
              "children": [
                {
                  "name": "4.2.1 Professional Cloud Architect"
                },
                {
                  "name": "4.2.2 Professional Data Engineer"
                },
                {
                  "name": "4.2.3 Professional Cloud DevOps Engineer"
                }
              ]
            },
            {
              "name": "4.3 Hands-on Projects and Portfolio Building",
              "children": [
                {
                  "name": "4.3.1 Develop and deploy real-world applications"
                },
                {
                  "name": "4.3.2 Contribute to open-source projects"
                },
                {
                  "name": "4.3.3 Showcase your skills through a portfolio"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning and Community Engagement",
          "children": [
            {
              "name": "5.1 Stay Updated with GCP Announcements",
              "children": [
                {
                  "name": "5.1.1 Google Cloud Blog"
                },
                {
                  "name": "5.1.2 Google Cloud Documentation"
                }
              ]
            },
            {
              "name": "5.2 Engage with the Google Cloud Community",
              "children": [
                {
                  "name": "5.2.1 Attend conferences and workshops"
                },
                {
                  "name": "5.2.2 Participate in online forums and communities"
                }
              ]
            },
            {
              "name": "5.3 Continuous Learning Resources",
              "children": [
                {
                  "name": "5.3.1 Qwiklabs"
                },
                {
                  "name": "5.3.2 Coursera, Udemy, A Cloud Guru"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Azure Cloud roadmap",
    "output": {
      "name": "Azure Cloud Roadmap",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Core Azure Concepts",
              "children": [
                {
                  "name": "1.1.1 Azure Global Infrastructure"
                },
                {
                  "name": "1.1.2 Azure Regions and Availability Zones"
                },
                {
                  "name": "1.1.3 Azure Resource Groups and Management Groups"
                }
              ]
            },
            {
              "name": "1.2 Azure Accounts and Subscriptions",
              "children": [
                {
                  "name": "1.2.1 Creating Azure Accounts and Subscriptions"
                },
                {
                  "name": "1.2.2 Understanding Azure Roles and Permissions (RBAC)"
                },
                {
                  "name": "1.2.3 Managing Azure Costs and Billing"
                }
              ]
            },
            {
              "name": "1.3 Azure Portal and CLI",
              "children": [
                {
                  "name": "1.3.1 Navigating the Azure Portal"
                },
                {
                  "name": "1.3.2 Using the Azure CLI for basic tasks"
                },
                {
                  "name": "1.3.3 Project: Deploy a simple VM using the Azure portal and CLI"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Compute Services",
          "children": [
            {
              "name": "2.1 Virtual Machines (VMs)",
              "children": [
                {
                  "name": "2.1.1 VM Sizes and Pricing"
                },
                {
                  "name": "2.1.2 Creating and Managing VMs"
                },
                {
                  "name": "2.1.3 Connecting to VMs (RDP, SSH)"
                }
              ]
            },
            {
              "name": "2.2 Azure Container Instances (ACI)",
              "children": [
                {
                  "name": "2.2.1 Understanding Containerization"
                },
                {
                  "name": "2.2.2 Deploying containers to ACI"
                },
                {
                  "name": "2.2.3 Project: Deploy a simple web application using Docker and ACI"
                }
              ]
            },
            {
              "name": "2.3 Azure Kubernetes Service (AKS)",
              "children": [
                {
                  "name": "2.3.1 Understanding Kubernetes"
                },
                {
                  "name": "2.3.2 Deploying and managing AKS clusters"
                },
                {
                  "name": "2.3.3 Project: Deploy a microservice application to AKS"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Storage and Databases",
          "children": [
            {
              "name": "3.1 Azure Blob Storage",
              "children": [
                {
                  "name": "3.1.1 Understanding Blob Storage types"
                },
                {
                  "name": "3.1.2 Uploading and downloading blobs"
                },
                {
                  "name": "3.1.3 Project: Build a simple file upload application using Blob Storage"
                }
              ]
            },
            {
              "name": "3.2 Azure SQL Database",
              "children": [
                {
                  "name": "3.2.1 Creating and managing SQL databases"
                },
                {
                  "name": "3.2.2 Connecting to SQL databases"
                },
                {
                  "name": "3.2.3 Project: Build a simple web application connecting to Azure SQL Database"
                }
              ]
            },
            {
              "name": "3.3 Azure Cosmos DB",
              "children": [
                {
                  "name": "3.3.1 Understanding NoSQL databases"
                },
                {
                  "name": "3.3.2 Creating and managing Cosmos DB instances"
                },
                {
                  "name": "3.3.3 Project: Build a simple application using Cosmos DB"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Networking and Security",
          "children": [
            {
              "name": "4.1 Virtual Networks (VNets)",
              "children": [
                {
                  "name": "4.1.1 Creating and managing VNets"
                },
                {
                  "name": "4.1.2 Subnets and IP addressing"
                },
                {
                  "name": "4.1.3 Project: Set up a simple VNet with two subnets"
                }
              ]
            },
            {
              "name": "4.2 Azure Load Balancers",
              "children": [
                {
                  "name": "4.2.1 Understanding load balancing concepts"
                },
                {
                  "name": "4.2.2 Creating and configuring load balancers"
                },
                {
                  "name": "4.2.3 Project: Implement load balancing for a web application"
                }
              ]
            },
            {
              "name": "4.3 Azure Security Center",
              "children": [
                {
                  "name": "4.3.1 Understanding Azure Security best practices"
                },
                {
                  "name": "4.3.2 Using Azure Security Center for threat detection"
                },
                {
                  "name": "4.3.3 Implementing basic security measures for VMs and applications"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Monitoring and Management",
          "children": [
            {
              "name": "5.1 Azure Monitor",
              "children": [
                {
                  "name": "5.1.1 Monitoring VMs and applications"
                },
                {
                  "name": "5.1.2 Setting up alerts and notifications"
                },
                {
                  "name": "5.1.3 Analyzing logs and metrics"
                }
              ]
            },
            {
              "name": "5.2 Azure Automation",
              "children": [
                {
                  "name": "5.2.1 Automating tasks using Azure Automation"
                },
                {
                  "name": "5.2.2 Runbooks and workflows"
                },
                {
                  "name": "5.2.3 Project: Automate VM backups using Azure Automation"
                }
              ]
            },
            {
              "name": "5.3 Azure DevOps",
              "children": [
                {
                  "name": "5.3.1 Introduction to DevOps principles"
                },
                {
                  "name": "5.3.2 Integrating Azure DevOps with Azure resources"
                },
                {
                  "name": "5.3.3 Implementing CI/CD pipelines"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn Azure Cloud",
    "output": {
      "name": "Learn Azure Cloud",
      "children": [
        {
          "name": "1. Foundational Concepts",
          "children": [
            {
              "name": "1.1 Azure Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Azure Cloud Models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.1.2 Azure Regions and Availability Zones"
                },
                {
                  "name": "1.1.3 Azure Resource Groups and Management"
                }
              ]
            },
            {
              "name": "1.2 Azure Accounts and Subscriptions",
              "children": [
                {
                  "name": "1.2.1 Creating an Azure Account and Subscription"
                },
                {
                  "name": "1.2.2 Understanding Azure Pricing and Costs"
                },
                {
                  "name": "1.2.3 Managing Azure Subscriptions and Billing"
                }
              ]
            },
            {
              "name": "1.3 Azure Portal, CLI, and PowerShell",
              "children": [
                {
                  "name": "1.3.1 Navigating the Azure Portal"
                },
                {
                  "name": "1.3.2 Using the Azure CLI"
                },
                {
                  "name": "1.3.3 Using Azure PowerShell"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Compute Services",
          "children": [
            {
              "name": "2.1 Virtual Machines (VMs)",
              "children": [
                {
                  "name": "2.1.1 Creating and Managing VMs"
                },
                {
                  "name": "2.1.2 VM Networking and Security"
                },
                {
                  "name": "2.1.3 Project: Deploy a simple web application on a VM"
                }
              ]
            },
            {
              "name": "2.2 Azure App Service",
              "children": [
                {
                  "name": "2.2.1 Deploying Web Apps"
                },
                {
                  "name": "2.2.2 Scaling and Monitoring Web Apps"
                },
                {
                  "name": "2.2.3 Project: Deploy a web app using CI/CD"
                }
              ]
            },
            {
              "name": "2.3 Azure Functions",
              "children": [
                {
                  "name": "2.3.1 Introduction to Serverless Computing"
                },
                {
                  "name": "2.3.2 Creating and Deploying Functions"
                },
                {
                  "name": "2.3.3 Project: Build a simple function triggered by an HTTP request"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Storage and Databases",
          "children": [
            {
              "name": "3.1 Azure Blob Storage",
              "children": [
                {
                  "name": "3.1.1 Understanding Blob Storage Tiers"
                },
                {
                  "name": "3.1.2 Uploading and Downloading Blobs"
                },
                {
                  "name": "3.1.3 Project: Store and retrieve files using Blob Storage"
                }
              ]
            },
            {
              "name": "3.2 Azure SQL Database",
              "children": [
                {
                  "name": "3.2.1 Creating and Managing SQL Databases"
                },
                {
                  "name": "3.2.2 Connecting to SQL Databases"
                },
                {
                  "name": "3.2.3 Project: Create a database and manage data"
                }
              ]
            },
            {
              "name": "3.3 Azure Cosmos DB",
              "children": [
                {
                  "name": "3.3.1 Introduction to NoSQL Databases"
                },
                {
                  "name": "3.3.2 Working with Cosmos DB Collections and Documents"
                },
                {
                  "name": "3.3.3 Project: Build a simple application using Cosmos DB"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Networking and Security",
          "children": [
            {
              "name": "4.1 Azure Virtual Networks (VNets)",
              "children": [
                {
                  "name": "4.1.1 Creating and Configuring VNets"
                },
                {
                  "name": "4.1.2 Subnets and Routing"
                },
                {
                  "name": "4.1.3 Project: Create a VNet with multiple subnets"
                }
              ]
            },
            {
              "name": "4.2 Azure Load Balancers",
              "children": [
                {
                  "name": "4.2.1 Load Balancing Concepts"
                },
                {
                  "name": "4.2.2 Configuring Load Balancers"
                },
                {
                  "name": "4.2.3 Project: Implement load balancing for a web application"
                }
              ]
            },
            {
              "name": "4.3 Azure Security Center",
              "children": [
                {
                  "name": "4.3.1 Understanding Azure Security Best Practices"
                },
                {
                  "name": "4.3.2 Using Azure Security Center for Threat Detection"
                },
                {
                  "name": "4.3.3 Project: Implement basic security measures for a VM"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Monitoring and Management",
          "children": [
            {
              "name": "5.1 Azure Monitor",
              "children": [
                {
                  "name": "5.1.1 Monitoring Azure Resources"
                },
                {
                  "name": "5.1.2 Setting up Alerts and Notifications"
                },
                {
                  "name": "5.1.3 Project: Configure monitoring for a web application"
                }
              ]
            },
            {
              "name": "5.2 Azure Automation",
              "children": [
                {
                  "name": "5.2.1 Introduction to Automation Accounts"
                },
                {
                  "name": "5.2.2 Creating Runbooks"
                },
                {
                  "name": "5.2.3 Project: Automate VM backups"
                }
              ]
            },
            {
              "name": "5.3 Azure Resource Manager (ARM) Templates",
              "children": [
                {
                  "name": "5.3.1 Understanding ARM Templates"
                },
                {
                  "name": "5.3.2 Deploying Resources with ARM Templates"
                },
                {
                  "name": "5.3.3 Project: Create and deploy an ARM template to provision infrastructure"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "How to to learn Azure Cloud",
    "output": {
      "name": "How to Learn Azure Cloud",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Cloud Computing Fundamentals"
                },
                {
                  "name": "1.1.2 Azure Architecture (Regions, Availability Zones, etc.)"
                },
                {
                  "name": "1.1.3 Azure Pricing Models and Cost Optimization"
                }
              ]
            },
            {
              "name": "1.2 Azure Portal and CLI",
              "children": [
                {
                  "name": "1.2.1 Navigating the Azure Portal"
                },
                {
                  "name": "1.2.2 Using Azure CLI for basic operations (creating resource groups, VMs)"
                },
                {
                  "name": "1.2.3  Azure Cloud Shell and its use cases"
                }
              ]
            },
            {
              "name": "1.3 Azure Identity and Access Management (IAM)",
              "children": [
                {
                  "name": "1.3.1 Understanding Azure Active Directory"
                },
                {
                  "name": "1.3.2 Role-Based Access Control (RBAC)"
                },
                {
                  "name": "1.3.3 Managing subscriptions and access"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Compute Services",
          "children": [
            {
              "name": "2.1 Virtual Machines (VMs)",
              "children": [
                {
                  "name": "2.1.1 Creating and managing VMs"
                },
                {
                  "name": "2.1.2 VM sizes and types"
                },
                {
                  "name": "2.1.3 Connecting to VMs (RDP, SSH)"
                },
                {
                  "name": "2.1.4 Project: Deploy a simple web server on a VM"
                }
              ]
            },
            {
              "name": "2.2 App Service",
              "children": [
                {
                  "name": "2.2.1 Deploying web apps"
                },
                {
                  "name": "2.2.2 Scaling web apps"
                },
                {
                  "name": "2.2.3 Using App Service features (deployment slots, custom domains)"
                }
              ]
            },
            {
              "name": "2.3 Container Services (AKS)",
              "children": [
                {
                  "name": "2.3.1 Introduction to Docker and containers"
                },
                {
                  "name": "2.3.2 Deploying a containerized application to AKS"
                },
                {
                  "name": "2.3.3 Managing AKS clusters"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Storage and Databases",
          "children": [
            {
              "name": "3.1 Storage Accounts (Blobs, Queues, Files)",
              "children": [
                {
                  "name": "3.1.1 Understanding different storage types"
                },
                {
                  "name": "3.1.2 Uploading and downloading files"
                },
                {
                  "name": "3.1.3 Project: Create a storage account and upload files"
                }
              ]
            },
            {
              "name": "3.2 Azure SQL Database",
              "children": [
                {
                  "name": "3.2.1 Creating and managing databases"
                },
                {
                  "name": "3.2.2 Connecting to SQL Database"
                },
                {
                  "name": "3.2.3 Project: Build a simple application connecting to Azure SQL"
                }
              ]
            },
            {
              "name": "3.3 Cosmos DB (NoSQL)",
              "children": [
                {
                  "name": "3.3.1 Introduction to NoSQL databases"
                },
                {
                  "name": "3.3.2 Creating and querying Cosmos DB"
                },
                {
                  "name": "3.3.3 Scaling Cosmos DB"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Networking and Security",
          "children": [
            {
              "name": "4.1 Virtual Networks (VNets)",
              "children": [
                {
                  "name": "4.1.1 Creating and configuring VNets"
                },
                {
                  "name": "4.1.2 Subnets and IP addressing"
                },
                {
                  "name": "4.1.3 Project: Create a VNet with subnets and connect VMs"
                }
              ]
            },
            {
              "name": "4.2 Azure Firewall and Network Security Groups (NSGs)",
              "children": [
                {
                  "name": "4.2.1 Implementing network security"
                },
                {
                  "name": "4.2.2 Configuring NSGs and firewall rules"
                },
                {
                  "name": "4.2.3 Project: Secure a VM using NSGs"
                }
              ]
            },
            {
              "name": "4.3 Azure Load Balancer",
              "children": [
                {
                  "name": "4.3.1 Implementing load balancing"
                },
                {
                  "name": "4.3.2 Configuring load balancer rules"
                },
                {
                  "name": "4.3.3 Project: Deploy a load-balanced web application"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Monitoring",
          "children": [
            {
              "name": "5.1 Azure DevOps",
              "children": [
                {
                  "name": "5.1.1 Continuous Integration/Continuous Delivery (CI/CD)"
                },
                {
                  "name": "5.1.2 Azure Pipelines"
                },
                {
                  "name": "5.1.3 Project: Automate deployment using Azure DevOps"
                }
              ]
            },
            {
              "name": "5.2 Azure Monitor",
              "children": [
                {
                  "name": "5.2.1 Monitoring Azure resources"
                },
                {
                  "name": "5.2.2 Setting up alerts and notifications"
                },
                {
                  "name": "5.2.3 Analyzing logs and metrics"
                }
              ]
            },
            {
              "name": "5.3 Serverless Computing (Azure Functions)",
              "children": [
                {
                  "name": "5.3.1 Introduction to serverless architecture"
                },
                {
                  "name": "5.3.2 Creating and deploying Azure Functions"
                },
                {
                  "name": "5.3.3 Event-driven architectures"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Cloud Architecture roadmap",
    "output": {
      "name": "Cloud Architecture Roadmap",
      "children": [
        {
          "name": "1. Foundations of Cloud Computing",
          "children": [
            {
              "name": "1.1 Cloud Concepts & Models",
              "children": [
                {
                  "name": "1.1.1 IaaS, PaaS, SaaS"
                },
                {
                  "name": "1.1.2 Public, Private, Hybrid, Multi-cloud"
                },
                {
                  "name": "1.1.3 Cloud Deployment Models (e.g., on-premise, off-premise)"
                }
              ]
            },
            {
              "name": "1.2 Networking Fundamentals",
              "children": [
                {
                  "name": "1.2.1 IP addressing, Subnetting, DNS"
                },
                {
                  "name": "1.2.2 VPCs, Subnets, Route Tables"
                },
                {
                  "name": "1.2.3 Load Balancers, Firewalls"
                }
              ]
            },
            {
              "name": "1.3 Cloud Security Basics",
              "children": [
                {
                  "name": "1.3.1 Identity and Access Management (IAM)"
                },
                {
                  "name": "1.3.2 Security Groups and Network ACLs"
                },
                {
                  "name": "1.3.3 Data encryption and key management"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Cloud Services",
          "children": [
            {
              "name": "2.1 Compute Services",
              "children": [
                {
                  "name": "2.1.1 Virtual Machines (VMs)"
                },
                {
                  "name": "2.1.2 Containers and Orchestration (Docker, Kubernetes)"
                },
                {
                  "name": "2.1.3 Serverless Computing (e.g., AWS Lambda, Azure Functions)"
                },
                {
                  "name": "2.1.4 Project: Deploy a simple web application using VMs"
                }
              ]
            },
            {
              "name": "2.2 Storage Services",
              "children": [
                {
                  "name": "2.2.1 Object Storage (e.g., S3, Blob Storage)"
                },
                {
                  "name": "2.2.2 Block Storage (e.g., EBS, Managed Disks)"
                },
                {
                  "name": "2.2.3 File Storage (e.g., EFS, Azure Files)"
                },
                {
                  "name": "2.2.4 Project: Design a storage strategy for a specific application"
                }
              ]
            },
            {
              "name": "2.3 Databases",
              "children": [
                {
                  "name": "2.3.1 Relational Databases (e.g., RDS, SQL Database)"
                },
                {
                  "name": "2.3.2 NoSQL Databases (e.g., DynamoDB, Cosmos DB)"
                },
                {
                  "name": "2.3.3 Database scaling and high availability"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Designing Cloud Architectures",
          "children": [
            {
              "name": "3.1 Architectural Patterns",
              "children": [
                {
                  "name": "3.1.1 Microservices Architecture"
                },
                {
                  "name": "3.1.2 Event-Driven Architecture"
                },
                {
                  "name": "3.1.3 API Gateway and API Management"
                }
              ]
            },
            {
              "name": "3.2 High Availability and Disaster Recovery",
              "children": [
                {
                  "name": "3.2.1 Redundancy and Failover mechanisms"
                },
                {
                  "name": "3.2.2 Region and Availability Zone considerations"
                },
                {
                  "name": "3.2.3 Backup and Restore strategies"
                }
              ]
            },
            {
              "name": "3.3 Cost Optimization",
              "children": [
                {
                  "name": "3.3.1 Right-sizing instances"
                },
                {
                  "name": "3.3.2 Reserved Instances and Savings Plans"
                },
                {
                  "name": "3.3.3 Cost monitoring and analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 DevOps and CI/CD",
              "children": [
                {
                  "name": "4.1.1 Infrastructure as Code (IaC)"
                },
                {
                  "name": "4.1.2 Continuous Integration/Continuous Deployment (CI/CD) pipelines"
                },
                {
                  "name": "4.1.3 Configuration Management tools (e.g., Ansible, Chef)"
                }
              ]
            },
            {
              "name": "4.2 Cloud Monitoring and Logging",
              "children": [
                {
                  "name": "4.2.1 CloudWatch, Azure Monitor, Cloud Logging"
                },
                {
                  "name": "4.2.2 Alerting and notification systems"
                },
                {
                  "name": "4.2.3 Log aggregation and analysis"
                }
              ]
            },
            {
              "name": "4.3 Serverless Architectures",
              "children": [
                {
                  "name": "4.3.1 Advanced Serverless patterns"
                },
                {
                  "name": "4.3.2 Serverless Application design best practices"
                },
                {
                  "name": "4.3.3 Scaling and performance tuning of serverless functions"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Cloud Provider Specifics",
          "children": [
            {
              "name": "5.1 AWS",
              "children": [
                {
                  "name": "5.1.1 Core AWS services"
                },
                {
                  "name": "5.1.2 AWS Well-Architected Framework"
                },
                {
                  "name": "5.1.3 AWS Certified Solutions Architect Associate"
                }
              ]
            },
            {
              "name": "5.2 Azure",
              "children": [
                {
                  "name": "5.2.1 Core Azure services"
                },
                {
                  "name": "5.2.2 Azure Well-Architected Framework"
                },
                {
                  "name": "5.2.3 Azure Solutions Architect Expert"
                }
              ]
            },
            {
              "name": "5.3 GCP",
              "children": [
                {
                  "name": "5.3.1 Core GCP services"
                },
                {
                  "name": "5.3.2 GCP Well-Architected Framework"
                },
                {
                  "name": "5.3.3 Google Cloud Certified Professional Cloud Architect"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Cloud Security roadmap",
    "output": {
      "name": "Cloud Security Roadmap",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Cloud Computing Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Cloud Service Models (IaaS, PaaS, SaaS)"
                },
                {
                  "name": "1.1.2 Cloud Deployment Models (Public, Private, Hybrid, Multi-cloud)"
                },
                {
                  "name": "1.1.3 Basic Networking Concepts (IP addressing, subnets, firewalls)"
                }
              ]
            },
            {
              "name": "1.2 Cybersecurity Fundamentals",
              "children": [
                {
                  "name": "1.2.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.2.2 Common Threats and Vulnerabilities (Malware, Phishing, DDoS)"
                },
                {
                  "name": "1.2.3 Risk Management and Security Frameworks (NIST, ISO 27001)"
                }
              ]
            },
            {
              "name": "1.3 Compliance and Regulations",
              "children": [
                {
                  "name": "1.3.1 GDPR, HIPAA, PCI DSS"
                },
                {
                  "name": "1.3.2 SOC 2 Compliance"
                },
                {
                  "name": "1.3.3 Data Residency and Sovereignty"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Cloud Security Services",
          "children": [
            {
              "name": "2.1 Identity and Access Management (IAM)",
              "children": [
                {
                  "name": "2.1.1 Access Control Lists (ACLs)"
                },
                {
                  "name": "2.1.2 Role-Based Access Control (RBAC)"
                },
                {
                  "name": "2.1.3 Multi-Factor Authentication (MFA)"
                },
                {
                  "name": "2.1.4 Project: Implement IAM in AWS/Azure/GCP"
                }
              ]
            },
            {
              "name": "2.2 Data Security",
              "children": [
                {
                  "name": "2.2.1 Data Encryption (at rest and in transit)"
                },
                {
                  "name": "2.2.2 Data Loss Prevention (DLP)"
                },
                {
                  "name": "2.2.3 Key Management Services (KMS)"
                }
              ]
            },
            {
              "name": "2.3 Network Security",
              "children": [
                {
                  "name": "2.3.1 Virtual Private Networks (VPNs)"
                },
                {
                  "name": "2.3.2 Firewalls (Network and Web Application Firewalls)"
                },
                {
                  "name": "2.3.3 Intrusion Detection/Prevention Systems (IDS/IPS)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Security Concepts",
          "children": [
            {
              "name": "3.1 Security Automation and Orchestration",
              "children": [
                {
                  "name": "3.1.1 Security Information and Event Management (SIEM)"
                },
                {
                  "name": "3.1.2 Security Orchestration, Automation, and Response (SOAR)"
                },
                {
                  "name": "3.1.3 Infrastructure as Code (IaC) Security"
                }
              ]
            },
            {
              "name": "3.2 Cloud Security Posture Management (CSPM)",
              "children": [
                {
                  "name": "3.2.1 Continuous Security Assessment"
                },
                {
                  "name": "3.2.2 Vulnerability Management"
                },
                {
                  "name": "3.2.3 Compliance Monitoring"
                }
              ]
            },
            {
              "name": "3.3 Cloud Native Security",
              "children": [
                {
                  "name": "3.3.1 Container Security"
                },
                {
                  "name": "3.3.2 Serverless Security"
                },
                {
                  "name": "3.3.3 Microservices Security"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Cloud Security Tools and Technologies",
          "children": [
            {
              "name": "4.1 Cloud Provider Security Services (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "4.1.1 Hands-on Labs with each provider's security features"
                },
                {
                  "name": "4.1.2 Comparing security offerings across providers"
                }
              ]
            },
            {
              "name": "4.2 Security Monitoring and Logging Tools",
              "children": [
                {
                  "name": "4.2.1 Splunk, ELK stack"
                },
                {
                  "name": "4.2.2 CloudWatch, Azure Monitor, Cloud Logging"
                }
              ]
            },
            {
              "name": "4.3 Vulnerability Scanners",
              "children": [
                {
                  "name": "4.3.1 Nessus, OpenVAS"
                },
                {
                  "name": "4.3.2 Integrating scanners with CI/CD pipelines"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Case Studies and Advanced Topics",
          "children": [
            {
              "name": "5.1 Real-world Cloud Security Breaches",
              "children": [
                {
                  "name": "5.1.1 Analyzing root causes and preventative measures"
                },
                {
                  "name": "5.1.2 Case Study: Equifax Data Breach"
                }
              ]
            },
            {
              "name": "5.2 Advanced Threat Detection and Response",
              "children": [
                {
                  "name": "5.2.1 Threat Hunting Techniques"
                },
                {
                  "name": "5.2.2 Incident Response Planning and Execution"
                }
              ]
            },
            {
              "name": "5.3 DevSecOps Practices",
              "children": [
                {
                  "name": "5.3.1 Integrating security into the software development lifecycle"
                },
                {
                  "name": "5.3.2 Implementing Secure Coding Practices"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn Cloud Security",
    "output": {
      "name": "How to Learn Cloud Security",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Security Concepts",
              "children": [
                {
                  "name": "1.1.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.1.2 Risk Management & Threat Modeling"
                },
                {
                  "name": "1.1.3 Security Principles (Least Privilege, Defense in Depth)"
                }
              ]
            },
            {
              "name": "1.2 Networking Fundamentals",
              "children": [
                {
                  "name": "1.2.1 IP Addressing, Subnetting"
                },
                {
                  "name": "1.2.2 Firewalls & Network Segmentation"
                },
                {
                  "name": "1.2.3 VPNs and Secure Tunneling"
                }
              ]
            },
            {
              "name": "1.3 Cloud Computing Fundamentals",
              "children": [
                {
                  "name": "1.3.1 IaaS, PaaS, SaaS Models"
                },
                {
                  "name": "1.3.2 Virtualization & Containers"
                },
                {
                  "name": "1.3.3 Cloud Deployment Models (Public, Private, Hybrid)"
                },
                {
                  "name": "1.3.4 Project: Setup a basic VM in AWS/Azure/GCP"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Cloud Security Services",
          "children": [
            {
              "name": "2.1 Identity and Access Management (IAM)",
              "children": [
                {
                  "name": "2.1.1 Access Control Lists (ACLs)"
                },
                {
                  "name": "2.1.2 Roles and Policies"
                },
                {
                  "name": "2.1.3 Multi-Factor Authentication (MFA)"
                },
                {
                  "name": "2.1.4 Project: Implement IAM best practices in a cloud environment"
                }
              ]
            },
            {
              "name": "2.2 Data Security",
              "children": [
                {
                  "name": "2.2.1 Data Encryption (at rest and in transit)"
                },
                {
                  "name": "2.2.2 Data Loss Prevention (DLP)"
                },
                {
                  "name": "2.2.3 Key Management Services (KMS)"
                }
              ]
            },
            {
              "name": "2.3 Security Information and Event Management (SIEM)",
              "children": [
                {
                  "name": "2.3.1 Log Management and Analysis"
                },
                {
                  "name": "2.3.2 Security Monitoring and Alerting"
                },
                {
                  "name": "2.3.3 Incident Response"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Specific Cloud Provider Security",
          "children": [
            {
              "name": "3.1 AWS Security Best Practices",
              "children": [
                {
                  "name": "3.1.1 IAM Roles, Policies, and Groups"
                },
                {
                  "name": "3.1.2 S3 Bucket Security"
                },
                {
                  "name": "3.1.3 VPC and Security Groups"
                },
                {
                  "name": "3.1.4 Project: Secure an AWS EC2 Instance"
                }
              ]
            },
            {
              "name": "3.2 Azure Security Best Practices",
              "children": [
                {
                  "name": "3.2.1 Azure Active Directory (Azure AD)"
                },
                {
                  "name": "3.2.2 Azure Security Center"
                },
                {
                  "name": "3.2.3 Network Security Groups (NSGs)"
                }
              ]
            },
            {
              "name": "3.3 GCP Security Best Practices",
              "children": [
                {
                  "name": "3.3.1 Identity and Access Management (IAM)"
                },
                {
                  "name": "3.3.2 Virtual Private Cloud (VPC) Network"
                },
                {
                  "name": "3.3.3 Cloud Security Scanner"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Cloud Security Posture Management (CSPM)",
              "children": [
                {
                  "name": "4.1.1 Compliance and Auditing"
                },
                {
                  "name": "4.1.2 Vulnerability Management"
                }
              ]
            },
            {
              "name": "4.2 DevSecOps",
              "children": [
                {
                  "name": "4.2.1 Integrating Security into the SDLC"
                },
                {
                  "name": "4.2.2 Infrastructure as Code (IaC) Security"
                }
              ]
            },
            {
              "name": "4.3 Cloud Forensics and Incident Response",
              "children": [
                {
                  "name": "4.3.1 Investigating Cloud Security Incidents"
                },
                {
                  "name": "4.3.2 Remediation and Recovery"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Certifications and Career Paths",
          "children": [
            {
              "name": "5.1 Relevant Certifications (AWS Certified Security, Azure Security Engineer, GCP Certified Professional Cloud Security Engineer, etc.)",
              "children": []
            },
            {
              "name": "5.2 Career Paths (Security Engineer, Cloud Security Architect, Security Analyst)",
              "children": []
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to  learn Cloud Security",
    "output": {
      "name": "Learn Cloud Security",
      "children": [
        {
          "name": "1. Foundations of Cloud Computing & Security",
          "children": [
            {
              "name": "1.1 Cloud Computing Models",
              "children": [
                {
                  "name": "1.1.1 IaaS, PaaS, SaaS Comparison"
                },
                {
                  "name": "1.1.2 Public, Private, Hybrid Clouds"
                },
                {
                  "name": "1.1.3 Service Level Agreements (SLAs)"
                }
              ]
            },
            {
              "name": "1.2 Security Fundamentals",
              "children": [
                {
                  "name": "1.2.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.2.2 Risk Management and Assessment"
                },
                {
                  "name": "1.2.3 Common Security Threats (Malware, DDoS, Phishing)"
                }
              ]
            },
            {
              "name": "1.3 Networking Basics for Cloud Security",
              "children": [
                {
                  "name": "1.3.1 Virtual Private Networks (VPNs)"
                },
                {
                  "name": "1.3.2 Firewalls and Network Segmentation"
                },
                {
                  "name": "1.3.3 Basic IP addressing and subnetting"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Cloud Security Services and Tools",
          "children": [
            {
              "name": "2.1 Identity and Access Management (IAM)",
              "children": [
                {
                  "name": "2.1.1 User roles and permissions"
                },
                {
                  "name": "2.1.2 Multi-factor authentication (MFA)"
                },
                {
                  "name": "2.1.3 Single Sign-On (SSO)"
                }
              ]
            },
            {
              "name": "2.2 Security Information and Event Management (SIEM)",
              "children": [
                {
                  "name": "2.2.1 Log management and analysis"
                },
                {
                  "name": "2.2.2 Security monitoring and alerting"
                },
                {
                  "name": "2.2.3 Threat detection and response"
                }
              ]
            },
            {
              "name": "2.3 Data Security and Encryption",
              "children": [
                {
                  "name": "2.3.1 Data Loss Prevention (DLP)"
                },
                {
                  "name": "2.3.2 Encryption at rest and in transit"
                },
                {
                  "name": "2.3.3 Key management"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Security Best Practices and Compliance",
          "children": [
            {
              "name": "3.1 Security Hardening",
              "children": [
                {
                  "name": "3.1.1 Operating System hardening"
                },
                {
                  "name": "3.1.2 Application security"
                },
                {
                  "name": "3.1.3 Database security"
                }
              ]
            },
            {
              "name": "3.2 Compliance Frameworks",
              "children": [
                {
                  "name": "3.2.1 ISO 27001"
                },
                {
                  "name": "3.2.2 SOC 2"
                },
                {
                  "name": "3.2.3 HIPAA, GDPR (depending on your region)"
                }
              ]
            },
            {
              "name": "3.3 Vulnerability Management",
              "children": [
                {
                  "name": "3.3.1 Vulnerability scanning and penetration testing"
                },
                {
                  "name": "3.3.2 Patch management"
                },
                {
                  "name": "3.3.3 Security audits"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Cloud Security Architecture and Design",
          "children": [
            {
              "name": "4.1 Secure Design Principles",
              "children": [
                {
                  "name": "4.1.1 Least privilege"
                },
                {
                  "name": "4.1.2 Defense in depth"
                },
                {
                  "name": "4.1.3 Secure configuration management"
                }
              ]
            },
            {
              "name": "4.2 Infrastructure as Code (IaC)",
              "children": [
                {
                  "name": "4.2.1 Terraform or CloudFormation"
                },
                {
                  "name": "4.2.2 Implementing security within IaC"
                },
                {
                  "name": "4.2.3 Automated security testing of IaC"
                }
              ]
            },
            {
              "name": "4.3 Microservices Security",
              "children": [
                {
                  "name": "4.3.1 API security"
                },
                {
                  "name": "4.3.2 Service mesh security"
                },
                {
                  "name": "4.3.3 Authentication and authorization in microservices"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Hands-on Projects and Advanced Topics",
          "children": [
            {
              "name": "5.1 Cloud Security Project: Build a Secure Web Application",
              "children": [
                {
                  "name": "5.1.1 Design and implement a secure web application on AWS/Azure/GCP"
                },
                {
                  "name": "5.1.2 Integrate various security tools and services"
                },
                {
                  "name": "5.1.3 Perform security testing and vulnerability assessments"
                }
              ]
            },
            {
              "name": "5.2 Advanced Topics",
              "children": [
                {
                  "name": "5.2.1 Cloud Forensics"
                },
                {
                  "name": "5.2.2 Security Automation and Orchestration (e.g., using AWS Security Hub)"
                },
                {
                  "name": "5.2.3 Serverless Security"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Big data engineer roadmap",
    "output": {
      "name": "Big Data Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python for Data Science (Pandas, NumPy, Scikit-learn)"
                },
                {
                  "name": "1.1.2 SQL and Relational Databases"
                },
                {
                  "name": "1.1.3 Basic Linux Commands"
                }
              ]
            },
            {
              "name": "1.2 Data Structures and Algorithms",
              "children": [
                {
                  "name": "1.2.1 Arrays, Linked Lists, Trees, Graphs"
                },
                {
                  "name": "1.2.2 Sorting and Searching Algorithms"
                },
                {
                  "name": "1.2.3 Big O Notation and Time Complexity Analysis",
                  "children": []
                }
              ]
            },
            {
              "name": "1.3 Statistics and Probability",
              "children": [
                {
                  "name": "1.3.1 Descriptive Statistics"
                },
                {
                  "name": "1.3.2 Probability Distributions"
                },
                {
                  "name": "1.3.3 Hypothesis Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Big Data Technologies",
          "children": [
            {
              "name": "2.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "2.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "2.1.2 MapReduce"
                },
                {
                  "name": "2.1.3 YARN (Yet Another Resource Negotiator)"
                },
                {
                  "name": "2.1.4 Project:  Word Count using MapReduce"
                }
              ]
            },
            {
              "name": "2.2 Spark",
              "children": [
                {
                  "name": "2.2.1 Spark Core (RDDs, Transformations, Actions)"
                },
                {
                  "name": "2.2.2 Spark SQL"
                },
                {
                  "name": "2.2.3 Spark Streaming"
                },
                {
                  "name": "2.2.4 Project:  Analyzing a large dataset using Spark"
                }
              ]
            },
            {
              "name": "2.3 NoSQL Databases",
              "children": [
                {
                  "name": "2.3.1 MongoDB (Document Database)"
                },
                {
                  "name": "2.3.2 Cassandra (Wide-column store)"
                },
                {
                  "name": "2.3.3 Project: Implementing a NoSQL database for a specific use case"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Platforms",
          "children": [
            {
              "name": "3.1 AWS (Amazon Web Services)",
              "children": [
                {
                  "name": "3.1.1 EC2 (Elastic Compute Cloud)"
                },
                {
                  "name": "3.1.2 S3 (Simple Storage Service)"
                },
                {
                  "name": "3.1.3 EMR (Elastic MapReduce)"
                },
                {
                  "name": "3.1.4 Project: Deploying a Spark application on AWS EMR"
                }
              ]
            },
            {
              "name": "3.2 Azure (Microsoft Azure)",
              "children": [
                {
                  "name": "3.2.1 HDInsight"
                },
                {
                  "name": "3.2.2 Azure Data Lake Storage"
                },
                {
                  "name": "3.2.3 Azure Databricks"
                }
              ]
            },
            {
              "name": "3.3 GCP (Google Cloud Platform)",
              "children": [
                {
                  "name": "3.3.1 Google Cloud Storage"
                },
                {
                  "name": "3.3.2 Dataproc"
                },
                {
                  "name": "3.3.3 BigQuery"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Data Warehousing and ETL",
          "children": [
            {
              "name": "4.1 Data Warehousing Concepts",
              "children": [
                {
                  "name": "4.1.1 Star Schema and Snowflake Schema"
                },
                {
                  "name": "4.1.2 Dimensional Modeling"
                },
                {
                  "name": "4.1.3 Data Lake vs. Data Warehouse"
                }
              ]
            },
            {
              "name": "4.2 ETL Processes",
              "children": [
                {
                  "name": "4.2.1 Extract, Transform, Load"
                },
                {
                  "name": "4.2.2 Apache Kafka"
                },
                {
                  "name": "4.2.3 Apache Airflow (Workflow Management)"
                },
                {
                  "name": "4.2.4 Project: Building an ETL pipeline for a sample dataset"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 Data Visualization and Reporting",
              "children": [
                {
                  "name": "5.1.1 Tableau"
                },
                {
                  "name": "5.1.2 Power BI"
                }
              ]
            },
            {
              "name": "5.2 Machine Learning for Big Data",
              "children": [
                {
                  "name": "5.2.1 MLlib (Spark's Machine Learning Library)"
                },
                {
                  "name": "5.2.2 Distributed Machine Learning Algorithms"
                }
              ]
            },
            {
              "name": "5.3 Real-time Data Processing",
              "children": [
                {
                  "name": "5.3.1 Apache Flink"
                },
                {
                  "name": "5.3.2 Apache Storm"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Big data engineer",
    "output": {
      "name": "Big Data Engineer",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python for Data Processing"
                },
                {
                  "name": "1.1.2 SQL for Data Manipulation"
                },
                {
                  "name": "1.1.3 Basic Linux Commands"
                }
              ]
            },
            {
              "name": "1.2 Distributed Systems Concepts",
              "children": [
                {
                  "name": "1.2.1 Parallel Processing"
                },
                {
                  "name": "1.2.2 MapReduce Paradigm"
                },
                {
                  "name": "1.2.3 Distributed File Systems (HDFS, Ceph)"
                }
              ]
            },
            {
              "name": "1.3 Data Structures and Algorithms",
              "children": [
                {
                  "name": "1.3.1 Arrays, Linked Lists, Trees"
                },
                {
                  "name": "1.3.2 Sorting and Searching Algorithms"
                },
                {
                  "name": "1.3.3 Graph Algorithms (optional)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Big Data Technologies",
          "children": [
            {
              "name": "2.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "2.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "2.1.2 MapReduce"
                },
                {
                  "name": "2.1.3 YARN (Yet Another Resource Negotiator)"
                },
                {
                  "name": "2.1.4 Project: Word Count with Hadoop"
                }
              ]
            },
            {
              "name": "2.2 Spark",
              "children": [
                {
                  "name": "2.2.1 Spark Core"
                },
                {
                  "name": "2.2.2 Spark SQL"
                },
                {
                  "name": "2.2.3 Spark Streaming"
                },
                {
                  "name": "2.2.4 Project: Real-time data processing with Spark Streaming"
                }
              ]
            },
            {
              "name": "2.3 NoSQL Databases",
              "children": [
                {
                  "name": "2.3.1 Cassandra"
                },
                {
                  "name": "2.3.2 MongoDB"
                },
                {
                  "name": "2.3.3 Project: Choosing the right NoSQL database for a use case"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Warehousing and ETL",
          "children": [
            {
              "name": "3.1 Data Warehousing Principles",
              "children": [
                {
                  "name": "3.1.1 Data Modeling (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "3.1.2 Data Integration"
                },
                {
                  "name": "3.1.3 Data Quality"
                }
              ]
            },
            {
              "name": "3.2 ETL Processes",
              "children": [
                {
                  "name": "3.2.1 Extract, Transform, Load"
                },
                {
                  "name": "3.2.2 Apache Kafka"
                },
                {
                  "name": "3.2.3 Project: Building an ETL pipeline with Apache Kafka and Spark"
                }
              ]
            },
            {
              "name": "3.3 Cloud Data Warehouses",
              "children": [
                {
                  "name": "3.3.1 Snowflake"
                },
                {
                  "name": "3.3.2 Google BigQuery"
                },
                {
                  "name": "3.3.3 Amazon Redshift"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Cloud and DevOps",
          "children": [
            {
              "name": "4.1 Cloud Platforms",
              "children": [
                {
                  "name": "4.1.1 AWS (Amazon Web Services)"
                },
                {
                  "name": "4.1.2 Azure (Microsoft Azure)"
                },
                {
                  "name": "4.1.3 GCP (Google Cloud Platform)"
                }
              ]
            },
            {
              "name": "4.2 Containerization and Orchestration",
              "children": [
                {
                  "name": "4.2.1 Docker"
                },
                {
                  "name": "4.2.2 Kubernetes"
                }
              ]
            },
            {
              "name": "4.3 DevOps Practices",
              "children": [
                {
                  "name": "4.3.1 CI/CD Pipelines"
                },
                {
                  "name": "4.3.2 Monitoring and Logging"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 Machine Learning for Big Data",
              "children": [
                {
                  "name": "5.1.1 ML Libraries (Scikit-learn, TensorFlow, PyTorch)"
                },
                {
                  "name": "5.1.2 Model Deployment"
                },
                {
                  "name": "5.1.3 Project: Building a Machine Learning Model on a Big Data Set"
                }
              ]
            },
            {
              "name": "5.2 Real-time Data Processing",
              "children": [
                {
                  "name": "5.2.1 Apache Flink"
                },
                {
                  "name": "5.2.2 Apache Storm"
                }
              ]
            },
            {
              "name": "5.3 Data Visualization and Reporting",
              "children": [
                {
                  "name": "5.3.1 Tableau"
                },
                {
                  "name": "5.3.2 Power BI"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a Big Data Engineer",
    "output": {
      "name": "How to Become a Big Data Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming",
              "children": [
                {
                  "name": "1.1.1 Python Fundamentals"
                },
                {
                  "name": "1.1.2 SQL for Data Manipulation"
                },
                {
                  "name": "1.1.3 Object-Oriented Programming (OOP) Principles"
                }
              ]
            },
            {
              "name": "1.2 Mathematics & Statistics",
              "children": [
                {
                  "name": "1.2.1 Descriptive Statistics"
                },
                {
                  "name": "1.2.2 Probability & Distributions"
                },
                {
                  "name": "1.2.3 Linear Algebra basics"
                }
              ]
            },
            {
              "name": "1.3 Operating Systems & Networking",
              "children": [
                {
                  "name": "1.3.1 Linux Command Line"
                },
                {
                  "name": "1.3.2 Networking Basics (TCP/IP)"
                },
                {
                  "name": "1.3.3 Cloud Computing Fundamentals (AWS, Azure, GCP)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Big Data Technologies",
          "children": [
            {
              "name": "2.1 Hadoop Ecosystem",
              "children": [
                {
                  "name": "2.1.1 HDFS (Hadoop Distributed File System)"
                },
                {
                  "name": "2.1.2 MapReduce"
                },
                {
                  "name": "2.1.3 YARN (Yet Another Resource Negotiator)"
                },
                {
                  "name": "2.1.4 Project: Implement a simple MapReduce job"
                }
              ]
            },
            {
              "name": "2.2 Spark",
              "children": [
                {
                  "name": "2.2.1 Spark Core"
                },
                {
                  "name": "2.2.2 Spark SQL"
                },
                {
                  "name": "2.2.3 Spark Streaming"
                },
                {
                  "name": "2.2.4 Project: Process a large dataset with Spark"
                }
              ]
            },
            {
              "name": "2.3 NoSQL Databases",
              "children": [
                {
                  "name": "2.3.1 Cassandra"
                },
                {
                  "name": "2.3.2 MongoDB"
                },
                {
                  "name": "2.3.3 Project: Design and implement a NoSQL database solution"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Warehousing & ETL",
          "children": [
            {
              "name": "3.1 Data Warehousing Concepts",
              "children": [
                {
                  "name": "3.1.1 Dimensional Modeling"
                },
                {
                  "name": "3.1.2 Star Schema & Snowflake Schema"
                },
                {
                  "name": "3.1.3 Data Lake vs. Data Warehouse"
                }
              ]
            },
            {
              "name": "3.2 ETL Processes",
              "children": [
                {
                  "name": "3.2.1 Extract, Transform, Load (ETL)"
                },
                {
                  "name": "3.2.2 Apache Kafka"
                },
                {
                  "name": "3.2.3 Data Integration Tools (Informatica, Talend)"
                }
              ]
            },
            {
              "name": "3.3 Cloud Data Warehouses",
              "children": [
                {
                  "name": "3.3.1 Snowflake"
                },
                {
                  "name": "3.3.2 Google BigQuery"
                },
                {
                  "name": "3.3.3 Amazon Redshift"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Data Engineering Practices & Tools",
          "children": [
            {
              "name": "4.1 Version Control (Git)",
              "children": [
                {
                  "name": "4.1.1 Git Basics"
                },
                {
                  "name": "4.1.2 Git branching strategies"
                },
                {
                  "name": "4.1.3 Collaborative workflows"
                }
              ]
            },
            {
              "name": "4.2 CI/CD Pipelines",
              "children": [
                {
                  "name": "4.2.1 Continuous Integration"
                },
                {
                  "name": "4.2.2 Continuous Delivery/Deployment"
                },
                {
                  "name": "4.2.3 DevOps principles"
                }
              ]
            },
            {
              "name": "4.3 Monitoring & Logging",
              "children": [
                {
                  "name": "4.3.1 ELK Stack (Elasticsearch, Logstash, Kibana)"
                },
                {
                  "name": "4.3.2 CloudWatch, Datadog"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Machine Learning for Big Data",
              "children": [
                {
                  "name": "5.1.1 ML algorithms for large datasets"
                },
                {
                  "name": "5.1.2 Model deployment and scaling"
                }
              ]
            },
            {
              "name": "5.2 Real-time Data Processing",
              "children": [
                {
                  "name": "5.2.1 Apache Flink"
                },
                {
                  "name": "5.2.2 Apache Storm"
                }
              ]
            },
            {
              "name": "5.3 Big Data Security",
              "children": [
                {
                  "name": "5.3.1 Data encryption and access control"
                },
                {
                  "name": "5.3.2 Security best practices"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn big data",
    "output": {
      "name": "i want to learn big data",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 What is Big Data? (Volume, Velocity, Variety, Veracity, Value)"
                },
                {
                  "name": "1.1.2 Big Data Challenges and Solutions"
                },
                {
                  "name": "1.1.3 Big Data Architecture (Hadoop, Spark, NoSQL databases)"
                }
              ]
            },
            {
              "name": "1.2 Programming Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Python for Data Science (Data structures, libraries like Pandas, NumPy)"
                },
                {
                  "name": "1.2.2 SQL for Data Manipulation (SELECT, JOIN, GROUP BY, etc.)"
                },
                {
                  "name": "1.2.3 Shell Scripting (Basic commands for data manipulation and automation)"
                }
              ]
            },
            {
              "name": "1.3 Data Wrangling & Preprocessing",
              "children": [
                {
                  "name": "1.3.1 Data Cleaning (Handling missing values, outliers, inconsistencies)"
                },
                {
                  "name": "1.3.2 Data Transformation (Scaling, normalization, encoding)"
                },
                {
                  "name": "1.3.3 Feature Engineering (Creating new features from existing ones)"
                },
                {
                  "name": "1.3.4 Project: Clean and preprocess a real-world dataset (e.g., from Kaggle)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Hadoop Ecosystem",
          "children": [
            {
              "name": "2.1 Hadoop Distributed File System (HDFS)",
              "children": [
                {
                  "name": "2.1.1 Understanding HDFS architecture (NameNode, DataNode)"
                },
                {
                  "name": "2.1.2 Working with HDFS commands (hdfs dfs -ls, hdfs dfs -put, etc.)"
                },
                {
                  "name": "2.1.3 Project: Store and access data in HDFS"
                }
              ]
            },
            {
              "name": "2.2 MapReduce",
              "children": [
                {
                  "name": "2.2.1 MapReduce programming model"
                },
                {
                  "name": "2.2.2 Writing simple MapReduce programs in Java or Python"
                },
                {
                  "name": "2.2.3 Project: Implement a word count program using MapReduce"
                }
              ]
            },
            {
              "name": "2.3 YARN (Yet Another Resource Negotiator)",
              "children": [
                {
                  "name": "2.3.1 Understanding YARN architecture"
                },
                {
                  "name": "2.3.2 Resource Management in YARN"
                },
                {
                  "name": "2.3.3 Running applications on YARN"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Spark Ecosystem",
          "children": [
            {
              "name": "3.1 Spark Core",
              "children": [
                {
                  "name": "3.1.1 RDDs (Resilient Distributed Datasets)"
                },
                {
                  "name": "3.1.2 Transformations and Actions"
                },
                {
                  "name": "3.1.3 Project: Perform basic data transformations and actions using Spark Core"
                }
              ]
            },
            {
              "name": "3.2 Spark SQL",
              "children": [
                {
                  "name": "3.2.1 Working with DataFrames and Datasets"
                },
                {
                  "name": "3.2.2 SQL queries on Spark DataFrames"
                },
                {
                  "name": "3.2.3 Project: Query and analyze data using Spark SQL"
                }
              ]
            },
            {
              "name": "3.3 Spark Streaming",
              "children": [
                {
                  "name": "3.3.1 Processing real-time data streams"
                },
                {
                  "name": "3.3.2 DStream APIs"
                },
                {
                  "name": "3.3.3 Project: Build a simple real-time data processing pipeline using Spark Streaming"
                }
              ]
            }
          ]
        },
        {
          "name": "4. NoSQL Databases",
          "children": [
            {
              "name": "4.1 Introduction to NoSQL",
              "children": [
                {
                  "name": "4.1.1 CAP Theorem"
                },
                {
                  "name": "4.1.2 Different types of NoSQL databases (Document, Key-Value, Graph, Column-family)"
                }
              ]
            },
            {
              "name": "4.2 MongoDB",
              "children": [
                {
                  "name": "4.2.1 MongoDB basics (collections, documents, queries)"
                },
                {
                  "name": "4.2.2 Advanced MongoDB features (aggregation, indexing)"
                },
                {
                  "name": "4.2.3 Project: Build a simple application using MongoDB"
                }
              ]
            },
            {
              "name": "4.3 Cassandra",
              "children": [
                {
                  "name": "4.3.1 Cassandra data model"
                },
                {
                  "name": "4.3.2 CQL (Cassandra Query Language)"
                },
                {
                  "name": "4.3.3 Project: Design and implement a data model using Cassandra"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Applications",
          "children": [
            {
              "name": "5.1 Cloud Computing for Big Data (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "5.1.1 Setting up Big Data environments on cloud platforms"
                },
                {
                  "name": "5.1.2 Utilizing cloud-based Big Data services"
                },
                {
                  "name": "5.1.3 Project: Deploy a Big Data application on a cloud platform"
                }
              ]
            },
            {
              "name": "5.2 Machine Learning with Big Data",
              "children": [
                {
                  "name": "5.2.1 Applying machine learning algorithms to large datasets"
                },
                {
                  "name": "5.2.2 Using frameworks like MLlib (Spark) or scikit-learn"
                },
                {
                  "name": "5.2.3 Project: Build a machine learning model on a large dataset"
                }
              ]
            },
            {
              "name": "5.3 Big Data Visualization & Reporting",
              "children": [
                {
                  "name": "5.3.1 Tools for visualizing Big Data (Tableau, Power BI, etc.)"
                },
                {
                  "name": "5.3.2 Creating dashboards and reports"
                },
                {
                  "name": "5.3.3 Project: Create a visualization to present insights from a Big Data analysis"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn data warehouse",
    "output": {
      "name": "Learn Data Warehousing",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Database Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Relational Databases (SQL, ER Diagrams)"
                },
                {
                  "name": "1.1.2 Data Types and Normalization"
                },
                {
                  "name": "1.1.3 SQL Queries (SELECT, INSERT, UPDATE, DELETE)"
                }
              ]
            },
            {
              "name": "1.2 Data Warehousing Concepts",
              "children": [
                {
                  "name": "1.2.1 Data Warehouse vs. Operational Database"
                },
                {
                  "name": "1.2.2 Dimensional Modeling (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "1.2.3 Fact Tables and Dimension Tables"
                }
              ]
            },
            {
              "name": "1.3 ETL Processes",
              "children": [
                {
                  "name": "1.3.1 Extract, Transform, Load (ETL) Overview"
                },
                {
                  "name": "1.3.2 Data Cleaning and Transformation Techniques"
                },
                {
                  "name": "1.3.3 Project: Simple ETL Pipeline with Python (e.g., using Pandas)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Data Modeling & Design",
          "children": [
            {
              "name": "2.1 Dimensional Modeling Techniques",
              "children": [
                {
                  "name": "2.1.1 Star Schema Design"
                },
                {
                  "name": "2.1.2 Snowflake Schema Design"
                },
                {
                  "name": "2.1.3 Data Mart Design"
                }
              ]
            },
            {
              "name": "2.2 Data Warehousing Design Principles",
              "children": [
                {
                  "name": "2.2.1 Business Requirements Gathering"
                },
                {
                  "name": "2.2.2 Conceptual, Logical, and Physical Data Models"
                },
                {
                  "name": "2.2.3 Project: Design a Data Warehouse Schema for a Sample Business"
                }
              ]
            },
            {
              "name": "2.3 Data Governance and Metadata Management",
              "children": [
                {
                  "name": "2.3.1 Data Quality and Validation"
                },
                {
                  "name": "2.3.2 Data Lineage and Tracking"
                },
                {
                  "name": "2.3.3 Metadata Management Tools and Techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Warehousing Tools and Technologies",
          "children": [
            {
              "name": "3.1 Cloud-Based Data Warehouses",
              "children": [
                {
                  "name": "3.1.1 Amazon Redshift"
                },
                {
                  "name": "3.1.2 Google BigQuery"
                },
                {
                  "name": "3.1.3 Snowflake"
                }
              ]
            },
            {
              "name": "3.2 On-Premise Data Warehouses",
              "children": [
                {
                  "name": "3.2.1 Teradata"
                },
                {
                  "name": "3.2.2 Oracle Data Warehouse"
                },
                {
                  "name": "3.2.3 Microsoft SQL Server Data Warehouse"
                }
              ]
            },
            {
              "name": "3.3 ETL Tools",
              "children": [
                {
                  "name": "3.3.1 Informatica PowerCenter"
                },
                {
                  "name": "3.3.2 Apache Kafka"
                },
                {
                  "name": "3.3.3 Matillion"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Data Integration Patterns",
              "children": [
                {
                  "name": "4.1.1 Change Data Capture (CDC)"
                },
                {
                  "name": "4.1.2 Data Virtualization"
                },
                {
                  "name": "4.1.3 Data Federation"
                }
              ]
            },
            {
              "name": "4.2 Performance Optimization and Tuning",
              "children": [
                {
                  "name": "4.2.1 Query Optimization"
                },
                {
                  "name": "4.2.2 Indexing Strategies"
                },
                {
                  "name": "4.2.3 Partitioning and Clustering"
                }
              ]
            },
            {
              "name": "4.3 Data Warehousing Security",
              "children": [
                {
                  "name": "4.3.1 Access Control and Authorization"
                },
                {
                  "name": "4.3.2 Data Encryption and Masking"
                },
                {
                  "name": "4.3.3 Auditing and Compliance"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Project and Portfolio Building",
          "children": [
            {
              "name": "5.1 Capstone Project",
              "children": [
                {
                  "name": "5.1.1 Design, implement and deploy a data warehouse for a real-world scenario (e.g., e-commerce sales, social media analytics)."
                },
                {
                  "name": "5.1.2  Document the entire process, from requirements gathering to deployment and maintenance."
                }
              ]
            },
            {
              "name": "5.2 Build a Portfolio",
              "children": [
                {
                  "name": "5.2.1 Showcase your projects on GitHub or a similar platform."
                },
                {
                  "name": "5.2.2 Highlight your skills and experience in a professional resume and LinkedIn profile."
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become a  data warehouse engineer",
    "output": {
      "name": "Data Warehouse Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Database Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Relational Databases (SQL, Normalization)"
                },
                {
                  "name": "1.1.2 Database Design Principles (ER Diagrams)"
                },
                {
                  "name": "1.1.3 SQL Querying (SELECT, JOIN, Aggregate Functions) - Project: Build a simple database and query it."
                }
              ]
            },
            {
              "name": "1.2 Data Modeling",
              "children": [
                {
                  "name": "1.2.1 Dimensional Modeling (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "1.2.2 Data Warehousing Concepts (ETL, ELT)"
                },
                {
                  "name": "1.2.3 Fact and Dimension Tables - Project: Design a simple data warehouse schema for an e-commerce business."
                }
              ]
            },
            {
              "name": "1.3 Data Warehousing Architectures",
              "children": [
                {
                  "name": "1.3.1 Cloud Data Warehouses (Snowflake, BigQuery, AWS Redshift)"
                },
                {
                  "name": "1.3.2 On-Premise Data Warehouses"
                },
                {
                  "name": "1.3.3 Data Lake vs. Data Warehouse"
                }
              ]
            }
          ]
        },
        {
          "name": "2. ETL/ELT Processes",
          "children": [
            {
              "name": "2.1 ETL Tools",
              "children": [
                {
                  "name": "2.1.1 Apache Airflow"
                },
                {
                  "name": "2.1.2 Informatica PowerCenter"
                },
                {
                  "name": "2.1.3 Matillion"
                }
              ]
            },
            {
              "name": "2.2 Data Extraction Techniques",
              "children": [
                {
                  "name": "2.2.1 APIs"
                },
                {
                  "name": "2.2.2 Databases"
                },
                {
                  "name": "2.2.3 Files (CSV, JSON, Parquet)"
                }
              ]
            },
            {
              "name": "2.3 Data Transformation and Loading",
              "children": [
                {
                  "name": "2.3.1 Data Cleaning and Validation"
                },
                {
                  "name": "2.3.2 Data Transformation using SQL"
                },
                {
                  "name": "2.3.3 Data Loading Techniques - Project: Create an ETL pipeline to load data from multiple sources into a target database."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Cloud Platforms",
          "children": [
            {
              "name": "3.1 AWS for Data Warehousing",
              "children": [
                {
                  "name": "3.1.1 Amazon Redshift"
                },
                {
                  "name": "3.1.2 AWS Glue"
                },
                {
                  "name": "3.1.3 S3 for Data Storage"
                }
              ]
            },
            {
              "name": "3.2 Google Cloud Platform (GCP)",
              "children": [
                {
                  "name": "3.2.1 BigQuery"
                },
                {
                  "name": "3.2.2 Dataflow"
                },
                {
                  "name": "3.2.3 Cloud Storage"
                }
              ]
            },
            {
              "name": "3.3 Azure Data Services",
              "children": [
                {
                  "name": "3.3.1 Azure Synapse Analytics"
                },
                {
                  "name": "3.3.2 Azure Data Factory"
                },
                {
                  "name": "3.3.3 Azure Data Lake Storage"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Data Governance and Security",
              "children": [
                {
                  "name": "4.1.1 Data Quality Management"
                },
                {
                  "name": "4.1.2 Data Security and Access Control"
                },
                {
                  "name": "4.1.3 Compliance Regulations"
                }
              ]
            },
            {
              "name": "4.2 Performance Optimization",
              "children": [
                {
                  "name": "4.2.1 Query Optimization"
                },
                {
                  "name": "4.2.2 Indexing Strategies"
                },
                {
                  "name": "4.2.3 Partitioning and Clustering"
                }
              ]
            },
            {
              "name": "4.3 Big Data Technologies",
              "children": [
                {
                  "name": "4.3.1 Hadoop"
                },
                {
                  "name": "4.3.2 Spark"
                },
                {
                  "name": "4.3.3 Data Lake Management - Project: Design and implement a data lake solution to process and analyze large datasets."
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Deployment and Monitoring",
          "children": [
            {
              "name": "5.1 CI/CD for Data Warehouses",
              "children": [
                {
                  "name": "5.1.1 Setting up automated deployments"
                },
                {
                  "name": "5.1.2 Version control for ETL pipelines"
                },
                {
                  "name": "5.1.3 Testing and validation of deployments"
                }
              ]
            },
            {
              "name": "5.2 Monitoring and Alerting",
              "children": [
                {
                  "name": "5.2.1 Performance monitoring of the warehouse"
                },
                {
                  "name": "5.2.2 Data quality monitoring"
                },
                {
                  "name": "5.2.3 Setting up alerts for critical issues"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "data warehouse engineer roadmap",
    "output": {
      "name": "Data Warehouse Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Databases & SQL",
              "children": [
                {
                  "name": "1.1.1 Relational Database Concepts (ERD, Normalization)"
                },
                {
                  "name": "1.1.2 SQL Fundamentals (SELECT, INSERT, UPDATE, DELETE, JOINs)"
                },
                {
                  "name": "1.1.3 Advanced SQL (Window Functions, CTEs, Subqueries)"
                },
                {
                  "name": "1.1.4 Practical Exercise: Build a simple database and perform CRUD operations"
                }
              ]
            },
            {
              "name": "1.2 Data Modeling",
              "children": [
                {
                  "name": "1.2.1 Dimensional Modeling (Star Schema, Snowflake Schema)"
                },
                {
                  "name": "1.2.2 Data Warehousing Concepts (Data Mart, ETL)"
                },
                {
                  "name": "1.2.3 ERD Design and Practical Application"
                }
              ]
            },
            {
              "name": "1.3 Data Structures and Algorithms",
              "children": [
                {
                  "name": "1.3.1 Big O Notation"
                },
                {
                  "name": "1.3.2 Arrays, Linked Lists, Trees"
                },
                {
                  "name": "1.3.3 Sorting and Searching Algorithms"
                },
                {
                  "name": "1.3.4 Practical Exercise: Implement a simple search algorithm"
                }
              ]
            }
          ]
        },
        {
          "name": "2. ETL and Data Integration",
          "children": [
            {
              "name": "2.1 ETL Processes",
              "children": [
                {
                  "name": "2.1.1 Extract, Transform, Load (ETL) Pipeline Design"
                },
                {
                  "name": "2.1.2 Data Cleansing and Transformation Techniques"
                },
                {
                  "name": "2.1.3 Data Quality Assurance and Validation"
                }
              ]
            },
            {
              "name": "2.2 ETL Tools",
              "children": [
                {
                  "name": "2.2.1 Apache Kafka"
                },
                {
                  "name": "2.2.2 Apache Spark (with PySpark or Scala)"
                },
                {
                  "name": "2.2.3 Informatica PowerCenter (Optional)"
                }
              ]
            },
            {
              "name": "2.3 Data Integration Patterns",
              "children": [
                {
                  "name": "2.3.1 Batch Processing"
                },
                {
                  "name": "2.3.2 Real-time Data Integration"
                },
                {
                  "name": "2.3.3 Change Data Capture (CDC)"
                }
              ]
            },
            {
              "name": "2.4 Project: Build an ETL pipeline to extract, transform, and load data into a database"
            }
          ]
        },
        {
          "name": "3. Cloud Data Warehousing",
          "children": [
            {
              "name": "3.1 Cloud Platforms",
              "children": [
                {
                  "name": "3.1.1 AWS (Redshift, S3, Glue)"
                },
                {
                  "name": "3.1.2 Google Cloud Platform (BigQuery, Dataflow, Cloud Storage)"
                },
                {
                  "name": "3.1.3 Azure (Synapse Analytics, Data Factory, Blob Storage)"
                }
              ]
            },
            {
              "name": "3.2 Serverless Architectures",
              "children": [
                {
                  "name": "3.2.1 Understanding Serverless Concepts"
                },
                {
                  "name": "3.2.2 Implementing Serverless ETL Pipelines"
                }
              ]
            },
            {
              "name": "3.3 Cloud Data Warehousing Best Practices",
              "children": [
                {
                  "name": "3.3.1 Cost Optimization"
                },
                {
                  "name": "3.3.2 Security and Access Control"
                },
                {
                  "name": "3.3.3 Scalability and Performance Tuning"
                }
              ]
            },
            {
              "name": "3.4 Project: Design and implement a data warehouse on a chosen cloud platform"
            }
          ]
        },
        {
          "name": "4. Data Warehousing Advanced Concepts",
          "children": [
            {
              "name": "4.1 Data Governance and Metadata Management",
              "children": [
                {
                  "name": "4.1.1 Data Quality Management"
                },
                {
                  "name": "4.1.2 Data Lineage Tracking"
                },
                {
                  "name": "4.1.3 Metadata Management Tools"
                }
              ]
            },
            {
              "name": "4.2 Performance Optimization and Tuning",
              "children": [
                {
                  "name": "4.2.1 Query Optimization Techniques"
                },
                {
                  "name": "4.2.2 Indexing Strategies"
                },
                {
                  "name": "4.2.3 Performance Monitoring and Troubleshooting"
                }
              ]
            },
            {
              "name": "4.3 Advanced Analytics and Business Intelligence",
              "children": [
                {
                  "name": "4.3.1 Data Visualization Tools (Tableau, Power BI)"
                },
                {
                  "name": "4.3.2 Data Mining and Machine Learning Techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Monitoring",
          "children": [
            {
              "name": "5.1 CI/CD for Data Pipelines",
              "children": [
                {
                  "name": "5.1.1 Implementing CI/CD pipelines for ETL processes"
                },
                {
                  "name": "5.1.2 Infrastructure as Code (IaC) for data warehouse infrastructure"
                }
              ]
            },
            {
              "name": "5.2 Monitoring and Alerting",
              "children": [
                {
                  "name": "5.2.1 Setting up monitoring and alerting for data pipelines and warehouses"
                },
                {
                  "name": "5.2.2 Using monitoring tools to identify and resolve performance issues"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "MongoDB developer",
    "output": {
      "name": "MongoDB Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Documents and Collections"
                },
                {
                  "name": "1.1.2 BSON Data Types"
                },
                {
                  "name": "1.1.3 CRUD Operations (Create, Read, Update, Delete)"
                }
              ]
            },
            {
              "name": "1.2 MongoDB Shell",
              "children": [
                {
                  "name": "1.2.1 Basic Shell Commands"
                },
                {
                  "name": "1.2.2 Aggregation Framework Introduction"
                },
                {
                  "name": "1.2.3 Working with MongoDB Compass (GUI)"
                }
              ]
            },
            {
              "name": "1.3 Data Modeling",
              "children": [
                {
                  "name": "1.3.1 Choosing the right data model"
                },
                {
                  "name": "1.3.2 Designing efficient schemas"
                },
                {
                  "name": "1.3.3 Normalization and Denormalization strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Queries and Aggregation",
          "children": [
            {
              "name": "2.1 Advanced Query Operators",
              "children": [
                {
                  "name": "2.1.1 $lookup, $graphLookup, $unwind"
                },
                {
                  "name": "2.1.2 $group, $sort, $limit, $skip"
                },
                {
                  "name": "2.1.3 Projection and field selection"
                }
              ]
            },
            {
              "name": "2.2 Aggregation Pipeline",
              "children": [
                {
                  "name": "2.2.1 Stages and their order"
                },
                {
                  "name": "2.2.2 Complex aggregation pipelines"
                },
                {
                  "name": "2.2.3 Performance optimization of aggregations"
                }
              ]
            },
            {
              "name": "2.3 Indexing",
              "children": [
                {
                  "name": "2.3.1 Types of indexes (single, compound, geospatial)"
                },
                {
                  "name": "2.3.2 Index selection and optimization"
                },
                {
                  "name": "2.3.3 Analyzing query execution plans"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deployment and Management",
          "children": [
            {
              "name": "3.1 MongoDB Deployment Topologies",
              "children": [
                {
                  "name": "3.1.1 Replica Sets"
                },
                {
                  "name": "3.1.2 Sharding"
                },
                {
                  "name": "3.1.3 Choosing the right deployment topology"
                }
              ]
            },
            {
              "name": "3.2 Monitoring and Administration",
              "children": [
                {
                  "name": "3.2.1 Monitoring performance metrics"
                },
                {
                  "name": "3.2.2 Managing users and roles (security)"
                },
                {
                  "name": "3.2.3 Backup and restoration"
                }
              ]
            },
            {
              "name": "3.3 Cloud Deployment (Atlas)",
              "children": [
                {
                  "name": "3.3.1 Setting up MongoDB Atlas"
                },
                {
                  "name": "3.3.2 Configuring clusters and security"
                },
                {
                  "name": "3.3.3 Managing Atlas resources"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Drivers and Integrations",
          "children": [
            {
              "name": "4.1 Driver Selection",
              "children": [
                {
                  "name": "4.1.1 Node.js Driver"
                },
                {
                  "name": "4.1.2 Python Driver"
                },
                {
                  "name": "4.1.3 Other Drivers (Java, PHP, etc.)"
                }
              ]
            },
            {
              "name": "4.2 Application Integration",
              "children": [
                {
                  "name": "4.2.1 Building REST APIs with MongoDB"
                },
                {
                  "name": "4.2.2 Connecting to other databases"
                },
                {
                  "name": "4.2.3 Working with various application frameworks"
                }
              ]
            },
            {
              "name": "4.3 Practical Project",
              "children": [
                {
                  "name": "4.3.1 Build a full-stack application using MongoDB"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Transactions",
              "children": [
                {
                  "name": "5.1.1 Multi-document transactions"
                },
                {
                  "name": "5.1.2 Transaction management best practices"
                }
              ]
            },
            {
              "name": "5.2 Change Streams",
              "children": [
                {
                  "name": "5.2.1 Real-time data processing"
                },
                {
                  "name": "5.2.2 Building reactive applications"
                }
              ]
            },
            {
              "name": "5.3 Geospatial Queries",
              "children": [
                {
                  "name": "5.3.1 Geospatial indexing"
                },
                {
                  "name": "5.3.2 Implementing location-based services"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "MongoDB developer roadmap",
    "output": {
      "name": "MongoDB Developer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 NoSQL Databases and MongoDB's place"
                },
                {
                  "name": "1.1.2 Documents, Collections, and Databases"
                },
                {
                  "name": "1.1.3 Data Modeling with MongoDB (Choosing the right structure)"
                }
              ]
            },
            {
              "name": "1.2 Basic CRUD Operations",
              "children": [
                {
                  "name": "1.2.1 Inserting, Updating, and Deleting Documents"
                },
                {
                  "name": "1.2.2 Querying Documents using find() (Basic and advanced queries)"
                },
                {
                  "name": "1.2.3 Practical Exercise: Building a simple CRUD application"
                }
              ]
            },
            {
              "name": "1.3 MongoDB Shell and Compass",
              "children": [
                {
                  "name": "1.3.1 Navigating the MongoDB shell"
                },
                {
                  "name": "1.3.2 Using Compass for data visualization and management"
                },
                {
                  "name": "1.3.3 Practical Exercise:  Importing and exporting data using Compass"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced Querying and Aggregation",
          "children": [
            {
              "name": "2.1 Advanced Query Operators",
              "children": [
                {
                  "name": "2.1.1 $lookup, $unwind, $group"
                },
                {
                  "name": "2.1.2 Regular Expressions and Text Search"
                },
                {
                  "name": "2.1.3 Geospatial Queries"
                }
              ]
            },
            {
              "name": "2.2 Aggregation Framework",
              "children": [
                {
                  "name": "2.2.1 Pipelines and stages"
                },
                {
                  "name": "2.2.2 Working with $match, $project, $sort"
                },
                {
                  "name": "2.2.3 Practical Exercise: Building complex aggregations for reporting"
                }
              ]
            },
            {
              "name": "2.3 Indexing and Optimization",
              "children": [
                {
                  "name": "2.3.1 Understanding indexes and their impact on performance"
                },
                {
                  "name": "2.3.2 Creating different types of indexes (single-field, compound)"
                },
                {
                  "name": "2.3.3 Analyzing query execution plans"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Data Modeling and Design",
          "children": [
            {
              "name": "3.1 Schema Design Principles",
              "children": [
                {
                  "name": "3.1.1 Embedded documents vs. referenced documents"
                },
                {
                  "name": "3.1.2 Data normalization and denormalization in MongoDB"
                },
                {
                  "name": "3.1.3 Choosing the right data types"
                }
              ]
            },
            {
              "name": "3.2 Advanced Data Structures",
              "children": [
                {
                  "name": "3.2.1 Arrays and nested arrays"
                },
                {
                  "name": "3.2.2 Using arrays effectively for various scenarios"
                },
                {
                  "name": "3.2.3 Practical Exercise: Designing a schema for e-commerce application"
                }
              ]
            },
            {
              "name": "3.3 Data Validation",
              "children": [
                {
                  "name": "3.3.1 Using schema validation with MongoDB"
                },
                {
                  "name": "3.3.2 Custom validation using middleware"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Security",
          "children": [
            {
              "name": "4.1 Deployment Strategies",
              "children": [
                {
                  "name": "4.1.1 Setting up a MongoDB replica set"
                },
                {
                  "name": "4.1.2 Sharding and scaling MongoDB"
                },
                {
                  "name": "4.1.3 Cloud deployment options (Atlas, AWS, Azure, GCP)"
                }
              ]
            },
            {
              "name": "4.2 Security Best Practices",
              "children": [
                {
                  "name": "4.2.1 Authentication and Authorization"
                },
                {
                  "name": "4.2.2 Network security and firewalls"
                },
                {
                  "name": "4.2.3 Data encryption"
                }
              ]
            },
            {
              "name": "4.3 Monitoring and Maintenance",
              "children": [
                {
                  "name": "4.3.1 Using monitoring tools to track performance"
                },
                {
                  "name": "4.3.2 Backup and recovery strategies"
                },
                {
                  "name": "4.3.3 Practical Exercise: Setting up monitoring for a deployed MongoDB instance"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Working with Drivers and Frameworks",
          "children": [
            {
              "name": "5.1  Node.js Driver",
              "children": [
                {
                  "name": "5.1.1 Connecting to MongoDB from Node.js"
                },
                {
                  "name": "5.1.2 Performing CRUD operations using the Node.js driver"
                },
                {
                  "name": "5.1.3 Practical Exercise: Building a REST API with Node.js and MongoDB"
                }
              ]
            },
            {
              "name": "5.2 Python Driver",
              "children": [
                {
                  "name": "5.2.1 Connecting to MongoDB from Python"
                },
                {
                  "name": "5.2.2 Performing CRUD operations using the Python driver"
                },
                {
                  "name": "5.2.3 Practical Exercise: Building a data analysis application with Python and MongoDB"
                }
              ]
            },
            {
              "name": "5.3 Other Drivers (Optional)",
              "children": [
                {
                  "name": "5.3.1 Exploring drivers for other languages (Java, PHP, etc.)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "PostgreSQL Expert roadmap",
    "output": {
      "name": "PostgreSQL Expert Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Data Types and Operators"
                },
                {
                  "name": "1.1.2 SQL Basics (SELECT, INSERT, UPDATE, DELETE)"
                },
                {
                  "name": "1.1.3 Transactions and ACID properties",
                  "children": [
                    {
                      "name": "Exercise: Implement transactions in a simple banking application"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.2 Database Design",
              "children": [
                {
                  "name": "1.2.1 Normalization (1NF, 2NF, 3NF)"
                },
                {
                  "name": "1.2.2 ER Diagrams and Relational Model"
                },
                {
                  "name": "1.2.3 Indexing and Query Optimization",
                  "children": [
                    {
                      "name": "Project: Design and implement a database schema for an e-commerce platform"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Installation and Configuration",
              "children": [
                {
                  "name": "1.3.1 Installing PostgreSQL on different operating systems"
                },
                {
                  "name": "1.3.2 Basic Configuration (pg_hba.conf, postgresql.conf)"
                },
                {
                  "name": "1.3.3 User and Role Management"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Advanced SQL",
          "children": [
            {
              "name": "2.1 Window Functions",
              "children": [
                {
                  "name": "2.1.1 RANK(), ROW_NUMBER(), LAG(), LEAD()"
                },
                {
                  "name": "2.1.2 Window function usage in analytical queries"
                }
              ]
            },
            {
              "name": "2.2 Common Table Expressions (CTEs)",
              "children": [
                {
                  "name": "2.2.1 Recursive CTEs"
                },
                {
                  "name": "2.2.2 CTEs for simplifying complex queries"
                }
              ]
            },
            {
              "name": "2.3 Advanced Joins and Subqueries",
              "children": [
                {
                  "name": "2.3.1 Lateral Joins"
                },
                {
                  "name": "2.3.2 Optimizing subqueries"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Performance Tuning and Optimization",
          "children": [
            {
              "name": "3.1 Query Analysis and Profiling",
              "children": [
                {
                  "name": "3.1.1 Using EXPLAIN and EXPLAIN ANALYZE"
                },
                {
                  "name": "3.1.2 Identifying performance bottlenecks"
                }
              ]
            },
            {
              "name": "3.2 Indexing Strategies",
              "children": [
                {
                  "name": "3.2.1 B-tree, GiST, GIN, Hash indexes"
                },
                {
                  "name": "3.2.2 Index creation and maintenance"
                },
                {
                  "name": "Exercise: Improve query performance by creating appropriate indexes"
                }
              ]
            },
            {
              "name": "3.3 Database Monitoring and Tuning",
              "children": [
                {
                  "name": "3.3.1 Using pg_stat_statements"
                },
                {
                  "name": "3.3.2 Monitoring resource utilization (CPU, memory, I/O)"
                },
                {
                  "name": "3.3.3 Tuning configuration parameters"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Extensions and Advanced Features",
          "children": [
            {
              "name": "4.1 PostGIS (Spatial Data)",
              "children": [
                {
                  "name": "4.1.1 Working with geographic data"
                },
                {
                  "name": "4.1.2 Spatial queries and functions"
                }
              ]
            },
            {
              "name": "4.2 PL/pgSQL (Procedural Language)",
              "children": [
                {
                  "name": "4.2.1 Functions, Procedures, Triggers"
                },
                {
                  "name": "4.2.2 Error handling and exception management"
                },
                {
                  "name": "Project: Create stored procedures for common database operations"
                }
              ]
            },
            {
              "name": "4.3 Advanced Security",
              "children": [
                {
                  "name": "4.3.1 Row Level Security (RLS)"
                },
                {
                  "name": "4.3.2 Encryption and data protection"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Replication and High Availability",
          "children": [
            {
              "name": "5.1 Physical Replication (Streaming Replication)",
              "children": [
                {
                  "name": "5.1.1 Setting up a streaming replication environment"
                },
                {
                  "name": "5.1.2 Failover and recovery"
                }
              ]
            },
            {
              "name": "5.2 Logical Replication",
              "children": [
                {
                  "name": "5.2.1 Publication and subscription"
                },
                {
                  "name": "5.2.2 Customizing replication with publication rules"
                }
              ]
            },
            {
              "name": "5.3 High Availability Strategies",
              "children": [
                {
                  "name": "5.3.1 Patroni"
                },
                {
                  "name": "5.3.2 pgpool-II"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "PostgreSQL",
    "output": {
      "name": "PostgreSQL",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Databases and SQL"
                },
                {
                  "name": "1.1.2 PostgreSQL Architecture"
                },
                {
                  "name": "1.1.3 Setting up PostgreSQL (Installation and Configuration)"
                }
              ]
            },
            {
              "name": "1.2 Basic SQL Commands",
              "children": [
                {
                  "name": "1.2.1 CRUD Operations (CREATE, READ, UPDATE, DELETE)"
                },
                {
                  "name": "1.2.2 Data Types and Constraints"
                },
                {
                  "name": "1.2.3 Working with Tables and Views",
                  "children": [
                    {
                      "name": "1.2.3.1 Creating and querying tables"
                    },
                    {
                      "name": "1.2.3.2 Creating and using views"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Data Modeling",
              "children": [
                {
                  "name": "1.3.1 ER Diagrams"
                },
                {
                  "name": "1.3.2 Normalization"
                },
                {
                  "name": "1.3.3 Database Design Exercise: Design a simple e-commerce database"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate",
          "children": [
            {
              "name": "2.1 Advanced SQL",
              "children": [
                {
                  "name": "2.1.1 Joins (INNER, LEFT, RIGHT, FULL)"
                },
                {
                  "name": "2.1.2 Subqueries and CTEs (Common Table Expressions)"
                },
                {
                  "name": "2.1.3 Aggregate Functions and Window Functions"
                }
              ]
            },
            {
              "name": "2.2 Transactions and Concurrency",
              "children": [
                {
                  "name": "2.2.1 ACID Properties"
                },
                {
                  "name": "2.2.2 Transaction Isolation Levels"
                },
                {
                  "name": "2.2.3 Locking Mechanisms"
                }
              ]
            },
            {
              "name": "2.3 Indexing and Query Optimization",
              "children": [
                {
                  "name": "2.3.1 Index Types (B-tree, GiST, GIN, etc.)"
                },
                {
                  "name": "2.3.2 Query Planning and Execution"
                },
                {
                  "name": "2.3.3  Performance Tuning Exercise: Optimize a slow query"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced",
          "children": [
            {
              "name": "3.1 Functions and Procedures",
              "children": [
                {
                  "name": "3.1.1 Creating and using stored procedures"
                },
                {
                  "name": "3.1.2 User-defined functions (UDFs)"
                },
                {
                  "name": "3.1.3 Triggers and Event handling"
                }
              ]
            },
            {
              "name": "3.2 Security",
              "children": [
                {
                  "name": "3.2.1 User Roles and Privileges"
                },
                {
                  "name": "3.2.2 Authentication Methods"
                },
                {
                  "name": "3.2.3 Security Best Practices"
                }
              ]
            },
            {
              "name": "3.3 Extensions and Administration",
              "children": [
                {
                  "name": "3.3.1 Exploring useful PostgreSQL extensions"
                },
                {
                  "name": "3.3.2 Backup and Restore Strategies"
                },
                {
                  "name": "3.3.3 Monitoring and Maintenance"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Practical Applications",
          "children": [
            {
              "name": "4.1 Building a REST API with PostgreSQL",
              "children": [
                {
                  "name": "4.1.1 Choosing a framework (e.g., Node.js, Python/Flask/Django)"
                },
                {
                  "name": "4.1.2 Connecting to the database"
                },
                {
                  "name": "4.1.3 Handling CRUD operations via API endpoints"
                }
              ]
            },
            {
              "name": "4.2 Working with JSON Data",
              "children": [
                {
                  "name": "4.2.1 Storing and querying JSON data in PostgreSQL"
                },
                {
                  "name": "4.2.2 JSON functions and operators"
                },
                {
                  "name": "4.2.3 JSON project:  Building an API with JSON data"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Deployment and Cloud",
          "children": [
            {
              "name": "5.1 Containerization with Docker",
              "children": [
                {
                  "name": "5.1.1 Dockerizing a PostgreSQL database"
                },
                {
                  "name": "5.1.2 Running PostgreSQL in Docker Compose"
                }
              ]
            },
            {
              "name": "5.2 Cloud Deployment (AWS RDS, Google Cloud SQL, Azure Database for PostgreSQL)",
              "children": [
                {
                  "name": "5.2.1 Setting up PostgreSQL on a cloud provider"
                },
                {
                  "name": "5.2.2 Managing cloud resources"
                },
                {
                  "name": "5.2.3 Cloud-based project: Deploying a simple application to the cloud"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn PostgreSQL",
    "output": {
      "name": "Learn PostgreSQL",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Relational Databases & SQL"
                },
                {
                  "name": "1.1.2 PostgreSQL Architecture & Installation"
                },
                {
                  "name": "1.1.3 Connecting to PostgreSQL (pgAdmin, command line)"
                }
              ]
            },
            {
              "name": "1.2 Basic SQL Commands",
              "children": [
                {
                  "name": "1.2.1 Creating, Selecting, and Deleting Databases"
                },
                {
                  "name": "1.2.2 Creating and manipulating tables (CRUD operations)"
                },
                {
                  "name": "1.2.3 Data types and constraints (primary key, foreign key, etc.)",
                  "children": [
                    {
                      "name": "1.2.3.1 Exercise: Create a simple database with tables and constraints"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.3 Data Manipulation",
              "children": [
                {
                  "name": "1.3.1 INSERT, UPDATE, DELETE statements"
                },
                {
                  "name": "1.3.2 SELECT statements: WHERE clause, ORDER BY, LIMIT"
                },
                {
                  "name": "1.3.3 Aggregate functions (COUNT, SUM, AVG, MIN, MAX)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Advanced Queries",
              "children": [
                {
                  "name": "2.1.1 JOINs (INNER, LEFT, RIGHT, FULL)"
                },
                {
                  "name": "2.1.2 Subqueries and Common Table Expressions (CTEs)"
                },
                {
                  "name": "2.1.3 UNION, INTERSECT, EXCEPT operations"
                }
              ]
            },
            {
              "name": "2.2 Data Integrity and Transactions",
              "children": [
                {
                  "name": "2.2.1 Transactions and ACID properties"
                },
                {
                  "name": "2.2.2 Indexes and performance optimization"
                },
                {
                  "name": "2.2.3 Constraints (check, unique, not null)"
                }
              ]
            },
            {
              "name": "2.3 Functions and Procedures",
              "children": [
                {
                  "name": "2.3.1 Creating and using functions (scalar, aggregate)"
                },
                {
                  "name": "2.3.2 Creating and using stored procedures"
                },
                {
                  "name": "2.3.3 Exercise: Build a function to calculate the average of a column"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Topics",
          "children": [
            {
              "name": "3.1 Views and Materialized Views",
              "children": [
                {
                  "name": "3.1.1 Creating and managing views"
                },
                {
                  "name": "3.1.2 Materialized views and performance"
                },
                {
                  "name": "3.1.3 Exercise: Create a view to simplify complex queries"
                }
              ]
            },
            {
              "name": "3.2 Security and Access Control",
              "children": [
                {
                  "name": "3.2.1 User roles and permissions"
                },
                {
                  "name": "3.2.2 Granting and revoking privileges"
                },
                {
                  "name": "3.2.3 Security best practices"
                }
              ]
            },
            {
              "name": "3.3 Extensions and Administration",
              "children": [
                {
                  "name": "3.3.1 Installing and managing extensions"
                },
                {
                  "name": "3.3.2 Monitoring database performance"
                },
                {
                  "name": "3.3.3 Backup and recovery strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Practical Application",
          "children": [
            {
              "name": "4.1 Project: E-commerce Database",
              "children": [
                {
                  "name": "4.1.1 Design the database schema"
                },
                {
                  "name": "4.1.2 Implement CRUD operations"
                },
                {
                  "name": "4.1.3 Develop advanced queries for reporting"
                }
              ]
            },
            {
              "name": "4.2 Project: Blog Application Database",
              "children": [
                {
                  "name": "4.2.1 Schema design (users, posts, comments)"
                },
                {
                  "name": "4.2.2 Implement data manipulation and security features"
                },
                {
                  "name": "4.2.3 Optimize database for efficient data retrieval"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Further Exploration",
          "children": [
            {
              "name": "5.1 PostgreSQL JSON functions",
              "children": [
                {
                  "name": "5.1.1 Working with JSON data in PostgreSQL"
                }
              ]
            },
            {
              "name": "5.2  PostGIS (Geographic extensions)",
              "children": [
                {
                  "name": "5.2.1 Spatial data handling"
                }
              ]
            },
            {
              "name": "5.3  PL/pgSQL (Procedural language)",
              "children": [
                {
                  "name": "5.3.1 Advanced procedural programming"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Flutter Developer roadmap",
    "output": {
      "name": "Flutter Developer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Dart Programming",
              "children": [
                {
                  "name": "1.1.1 Data types, variables, operators"
                },
                {
                  "name": "1.1.2 Control flow, loops, functions"
                },
                {
                  "name": "1.1.3 Object-oriented programming (OOP) concepts"
                },
                {
                  "name": "1.1.4 Null safety, generics, asynchronous programming (async/await, Futures)"
                }
              ]
            },
            {
              "name": "1.2 Flutter Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Setting up the development environment"
                },
                {
                  "name": "1.2.2 Widgets: basic UI elements (Text, Image, Container, Row, Column)"
                },
                {
                  "name": "1.2.3 Layout: understanding and using different layout widgets (Row, Column, Stack, etc.)"
                },
                {
                  "name": "1.2.4 Project: Build a simple UI with basic widgets (e.g., a calculator layout)"
                }
              ]
            },
            {
              "name": "1.3 State Management Introduction",
              "children": [
                {
                  "name": "1.3.1 Understanding state in Flutter"
                },
                {
                  "name": "1.3.2 setState() method and its limitations"
                },
                {
                  "name": "1.3.3 Simple state management with Provider or Riverpod (choose one to start)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Flutter",
          "children": [
            {
              "name": "2.1 Advanced Widgets",
              "children": [
                {
                  "name": "2.1.1 Custom widgets and widget composition"
                },
                {
                  "name": "2.1.2 Animations and transitions"
                },
                {
                  "name": "2.1.3 Scrollable widgets (ListView, GridView, SingleChildScrollView)"
                }
              ]
            },
            {
              "name": "2.2 Navigation and Routing",
              "children": [
                {
                  "name": "2.2.1 Using Navigator and routes"
                },
                {
                  "name": "2.2.2 Passing data between screens"
                },
                {
                  "name": "2.2.3 Implementing named routes and route parameters"
                }
              ]
            },
            {
              "name": "2.3 State Management (Advanced)",
              "children": [
                {
                  "name": "2.3.1 Deep dive into Provider or Riverpod"
                },
                {
                  "name": "2.3.2 Exploring other state management solutions (Bloc, BLoC, GetX)"
                },
                {
                  "name": "2.3.3 Project: Build an app with complex state management (e.g., a to-do list app)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Flutter & Backend Integration",
          "children": [
            {
              "name": "3.1 API Integration",
              "children": [
                {
                  "name": "3.1.1 HTTP requests with http package"
                },
                {
                  "name": "3.1.2 Data serialization with JSON"
                },
                {
                  "name": "3.1.3 Error handling and loading states"
                }
              ]
            },
            {
              "name": "3.2 Database Integration",
              "children": [
                {
                  "name": "3.2.1 Using SQLite or Firebase Firestore"
                },
                {
                  "name": "3.2.2 Data persistence and retrieval"
                }
              ]
            },
            {
              "name": "3.3 Testing",
              "children": [
                {
                  "name": "3.3.1 Unit testing with Flutter's testing framework"
                },
                {
                  "name": "3.3.2 Widget testing"
                },
                {
                  "name": "3.3.3 Integration testing"
                }
              ]
            },
            {
              "name": "3.4 Deployment",
              "children": [
                {
                  "name": "3.4.1 Publishing to app stores (iOS and Android)"
                },
                {
                  "name": "3.4.2 Building for different platforms"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Advanced Topics & Best Practices",
          "children": [
            {
              "name": "4.1 Platform Channels",
              "children": [
                {
                  "name": "4.1.1 Communicating with native code (iOS/Android)"
                },
                {
                  "name": "4.1.2 Accessing platform-specific features"
                }
              ]
            },
            {
              "name": "4.2  Architecture Patterns",
              "children": [
                {
                  "name": "4.2.1 MVVM (Model-View-ViewModel)"
                },
                {
                  "name": "4.2.2 BLoC (Business Logic Component)"
                }
              ]
            },
            {
              "name": "4.3 Performance Optimization",
              "children": [
                {
                  "name": "4.3.1 Identifying performance bottlenecks"
                },
                {
                  "name": "4.3.2 Optimizing widget trees and build methods"
                },
                {
                  "name": "4.3.3 Using the Flutter DevTools"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Building a Portfolio Project",
          "children": [
            {
              "name": "5.1 Project Idea Generation",
              "children": [
                {
                  "name": "5.1.1 Choose a project based on your interests and skills"
                },
                {
                  "name": "5.1.2 Research similar apps for inspiration"
                }
              ]
            },
            {
              "name": "5.2 Project Execution",
              "children": [
                {
                  "name": "5.2.1 Plan your project's features and architecture"
                },
                {
                  "name": "5.2.2 Develop and test the app iteratively"
                },
                {
                  "name": "5.2.3 Continuously refine your design and functionality"
                }
              ]
            },
            {
              "name": "5.3 Project Deployment and Showcase",
              "children": [
                {
                  "name": "5.3.1 Publish your app to platforms like GitHub or app stores"
                },
                {
                  "name": "5.3.2 Create a compelling portfolio to showcase your work"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to become Flutter Developer",
    "output": {
      "name": "I want to become a Flutter Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Object-Oriented Programming (OOP)"
                },
                {
                  "name": "1.1.2 Data Structures (Lists, Maps, Sets)"
                },
                {
                  "name": "1.1.3 Algorithms and Problem Solving"
                }
              ]
            },
            {
              "name": "1.2 Dart Programming Language",
              "children": [
                {
                  "name": "1.2.1 Dart Syntax and Basic Types"
                },
                {
                  "name": "1.2.2 Control Flow and Functions"
                },
                {
                  "name": "1.2.3 Object-Oriented Programming in Dart",
                  "children": [
                    {
                      "name": "1.2.3.1 Classes and Objects"
                    },
                    {
                      "name": "1.2.3.2 Inheritance and Polymorphism"
                    },
                    {
                      "name": "1.2.3.3 Interfaces and Abstract Classes"
                    }
                  ]
                },
                {
                  "name": "1.2.4 Null Safety and Error Handling"
                },
                {
                  "name": "1.2.5 Asynchronous Programming (Futures, Streams)"
                }
              ]
            },
            {
              "name": "1.3 Setting up the Development Environment",
              "children": [
                {
                  "name": "1.3.1 Installing Flutter SDK"
                },
                {
                  "name": "1.3.2 Setting up an IDE (Android Studio or VS Code)"
                },
                {
                  "name": "1.3.3 Creating your first Flutter project",
                  "children": [
                    {
                      "name": "1.3.3.1 Running the default app"
                    },
                    {
                      "name": "1.3.3.2 Understanding project structure"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Flutter Fundamentals",
          "children": [
            {
              "name": "2.1 Widgets and Layouts",
              "children": [
                {
                  "name": "2.1.1 Understanding Widget Tree"
                },
                {
                  "name": "2.1.2 Basic Widgets (Text, Image, Icon, Button)"
                },
                {
                  "name": "2.1.3 Layout Widgets (Row, Column, Stack, Container)"
                },
                {
                  "name": "2.1.4 Working with different screen sizes"
                }
              ]
            },
            {
              "name": "2.2 State Management",
              "children": [
                {
                  "name": "2.2.1 setState() and StatefulWidgets"
                },
                {
                  "name": "2.2.2 Provider"
                },
                {
                  "name": "2.2.3 Riverpod or BLoC Pattern (choose one to start)"
                }
              ]
            },
            {
              "name": "2.3 Navigation and Routing",
              "children": [
                {
                  "name": "2.3.1 Named Routes"
                },
                {
                  "name": "2.3.2 Passing data between screens"
                },
                {
                  "name": "2.3.3 Handling deep links"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Flutter Concepts",
          "children": [
            {
              "name": "3.1 Animations and Transitions",
              "children": [
                {
                  "name": "3.1.1 AnimatedBuilder"
                },
                {
                  "name": "3.1.2 Hero Animations"
                },
                {
                  "name": "3.1.3 Tween Animations"
                }
              ]
            },
            {
              "name": "3.2 API Integration and Data Handling",
              "children": [
                {
                  "name": "3.2.1 HTTP requests using http package"
                },
                {
                  "name": "3.2.2 JSON parsing"
                },
                {
                  "name": "3.2.3 Data persistence (local storage)"
                }
              ]
            },
            {
              "name": "3.3 Testing",
              "children": [
                {
                  "name": "3.3.1 Widget Testing"
                },
                {
                  "name": "3.3.2 Integration Testing"
                },
                {
                  "name": "3.3.3 Unit Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Platform Integration & Deployment",
          "children": [
            {
              "name": "4.1 Platform Channels",
              "children": [
                {
                  "name": "4.1.1 Communicating with native code (Android & iOS)"
                },
                {
                  "name": "4.1.2 Implementing platform-specific features"
                }
              ]
            },
            {
              "name": "4.2 Deployment to App Stores",
              "children": [
                {
                  "name": "4.2.1 Building release APKs and IPAs"
                },
                {
                  "name": "4.2.2 Publishing to Google Play Store and Apple App Store"
                }
              ]
            },
            {
              "name": "4.3 Working with Plugins",
              "children": [
                {
                  "name": "4.3.1 Integrating third-party packages"
                },
                {
                  "name": "4.3.2 Creating custom plugins"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Projects and Portfolio",
          "children": [
            {
              "name": "5.1 Build a simple to-do app",
              "children": []
            },
            {
              "name": "5.2 Build a weather app with API integration",
              "children": []
            },
            {
              "name": "5.3 Build a more complex app (e.g., e-commerce app, social media app)",
              "children": []
            },
            {
              "name": "5.4 Contribute to open source projects",
              "children": []
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a Flutter Developer",
    "output": {
      "name": "How to Become a Flutter Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Object-Oriented Programming (OOP) principles"
                },
                {
                  "name": "1.1.2 Data structures (Lists, Maps, Sets)"
                },
                {
                  "name": "1.1.3 Control flow (if/else, loops)"
                }
              ]
            },
            {
              "name": "1.2 Dart Programming Language",
              "children": [
                {
                  "name": "1.2.1 Variables, data types, and operators"
                },
                {
                  "name": "1.2.2 Functions, classes, and methods"
                },
                {
                  "name": "1.2.3 Null safety and asynchronous programming (async/await, futures)"
                },
                {
                  "name": "1.2.4 Project: Build a simple command-line application in Dart"
                }
              ]
            },
            {
              "name": "1.3 Introduction to Flutter",
              "children": [
                {
                  "name": "1.3.1 Setting up the development environment (Flutter SDK, IDE)"
                },
                {
                  "name": "1.3.2 Understanding Widgets and Widget Trees"
                },
                {
                  "name": "1.3.3 Creating your first Flutter app (Hello World)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Building UI with Flutter",
          "children": [
            {
              "name": "2.1 Layouts and Widgets",
              "children": [
                {
                  "name": "2.1.1 Row, Column, Stack, and other layout widgets"
                },
                {
                  "name": "2.1.2 Container, Padding, and other styling widgets"
                },
                {
                  "name": "2.1.3 Project: Create a simple UI with multiple widgets"
                }
              ]
            },
            {
              "name": "2.2 Working with Material Design and Cupertino",
              "children": [
                {
                  "name": "2.2.1 Understanding Material Design principles"
                },
                {
                  "name": "2.2.2 Using Material widgets (AppBar, Button, Scaffold)"
                },
                {
                  "name": "2.2.3 Implementing Cupertino widgets for iOS style"
                },
                {
                  "name": "2.2.4 Project: Design a UI following Material Design guidelines"
                }
              ]
            },
            {
              "name": "2.3 State Management",
              "children": [
                {
                  "name": "2.3.1 setState() for simple state management"
                },
                {
                  "name": "2.3.2 Introduction to Provider or Riverpod"
                },
                {
                  "name": "2.3.3 Project: Build an app with dynamic UI updates"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Flutter Concepts",
          "children": [
            {
              "name": "3.1 Navigation and Routing",
              "children": [
                {
                  "name": "3.1.1 Implementing navigation with Navigator"
                },
                {
                  "name": "3.1.2 Using named routes and passing arguments"
                },
                {
                  "name": "3.1.3 Project: Create an app with multiple screens and navigation"
                }
              ]
            },
            {
              "name": "3.2 Asynchronous Programming and API Integration",
              "children": [
                {
                  "name": "3.2.1 Handling HTTP requests with http package"
                },
                {
                  "name": "3.2.2 Parsing JSON data"
                },
                {
                  "name": "3.2.3 Project: Build an app that fetches data from an API"
                }
              ]
            },
            {
              "name": "3.3 Animations and Transitions",
              "children": [
                {
                  "name": "3.3.1 Using AnimatedBuilder and AnimatedContainer"
                },
                {
                  "name": "3.3.2 Implementing Hero animations"
                },
                {
                  "name": "3.3.3 Project: Add animations to your app"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Testing and Deployment",
          "children": [
            {
              "name": "4.1 Unit and Widget Testing",
              "children": [
                {
                  "name": "4.1.1 Writing unit tests with the test package"
                },
                {
                  "name": "4.1.2 Performing widget tests"
                },
                {
                  "name": "4.1.3 Project: Add tests to your existing app"
                }
              ]
            },
            {
              "name": "4.2 Deployment to Play Store/App Store",
              "children": [
                {
                  "name": "4.2.1 Setting up keystores"
                },
                {
                  "name": "4.2.2 Building release APKs and IPAs"
                },
                {
                  "name": "4.2.3 Publishing your app to app stores"
                }
              ]
            },
            {
              "name": "4.3 State Management (Advanced)",
              "children": [
                {
                  "name": "4.3.1 BLoC pattern"
                },
                {
                  "name": "4.3.2 Redux"
                },
                {
                  "name": "4.3.3 Project: Implement a complex state management solution"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics and Specialization",
          "children": [
            {
              "name": "5.1 Platform Channels",
              "children": [
                {
                  "name": "5.1.1 Communicating with native code (Android/iOS)"
                },
                {
                  "name": "5.1.2 Project: Integrate a native feature into your Flutter app"
                }
              ]
            },
            {
              "name": "5.2  Third-Party Packages",
              "children": [
                {
                  "name": "5.2.1  Utilizing Pub.dev for package discovery"
                },
                {
                  "name": "5.2.2  Integrating common packages like Firebase, image pickers, etc."
                },
                {
                  "name": "5.2.3 Project: Enhance your app using third-party packages"
                }
              ]
            },
            {
              "name": "5.3  Advanced UI Techniques",
              "children": [
                {
                  "name": "5.3.1 Custom Painting"
                },
                {
                  "name": "5.3.2  Custom Widgets"
                },
                {
                  "name": "5.3.3 Project: Create a complex and customized UI component"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "React Native Developer",
    "output": {
      "name": "React Native Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions, Arrays, Objects"
                },
                {
                  "name": "1.1.4 Practice: Build a simple calculator app in JavaScript"
                }
              ]
            },
            {
              "name": "1.2 React Fundamentals",
              "children": [
                {
                  "name": "1.2.1 JSX, Components, Props"
                },
                {
                  "name": "1.2.2 State Management, Lifecycle Methods"
                },
                {
                  "name": "1.2.3 Events Handling"
                },
                {
                  "name": "1.2.4 Practice: Create a simple to-do list app in React"
                }
              ]
            },
            {
              "name": "1.3 Introduction to React Native",
              "children": [
                {
                  "name": "1.3.1 Setting up Development Environment"
                },
                {
                  "name": "1.3.2 Basic UI Components (Text, View, Image)"
                },
                {
                  "name": "1.3.3 Styling with StyleSheet"
                },
                {
                  "name": "1.3.4 Practice: Build a simple 'Hello World' app in React Native"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Components & Navigation",
          "children": [
            {
              "name": "2.1 Advanced UI Components",
              "children": [
                {
                  "name": "2.1.1 FlatList, SectionList, ScrollView"
                },
                {
                  "name": "2.1.2 Working with Images and Media"
                },
                {
                  "name": "2.1.3 Implementing Forms and Inputs"
                },
                {
                  "name": "2.1.4 Practice: Build a simple list view app with images and details"
                }
              ]
            },
            {
              "name": "2.2 Navigation",
              "children": [
                {
                  "name": "2.2.1 React Navigation basics (installation and setup)"
                },
                {
                  "name": "2.2.2 Navigating between screens"
                },
                {
                  "name": "2.2.3 Passing data between screens"
                },
                {
                  "name": "2.2.4 Practice: Create a multi-screen app with navigation"
                }
              ]
            },
            {
              "name": "2.3 State Management (Simple Apps)",
              "children": [
                {
                  "name": "2.3.1 useState and useContext hooks"
                },
                {
                  "name": "2.3.2 Simple state management for small to medium apps"
                },
                {
                  "name": "2.3.3 Practice: Build a counter app with complex state updates"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts & APIs",
          "children": [
            {
              "name": "3.1 API Integration",
              "children": [
                {
                  "name": "3.1.1 Fetch API and asynchronous operations"
                },
                {
                  "name": "3.1.2 Handling API responses and error handling"
                },
                {
                  "name": "3.1.3 Practice: Integrate an API to fetch and display data"
                }
              ]
            },
            {
              "name": "3.2 Asynchronous Programming",
              "children": [
                {
                  "name": "3.2.1 Promises and Async/Await"
                },
                {
                  "name": "3.2.2 Handling loading states and errors"
                },
                {
                  "name": "3.2.3 Practice: Improve the API integration app with better error handling"
                }
              ]
            },
            {
              "name": "3.3 Advanced State Management",
              "children": [
                {
                  "name": "3.3.1 Context API for complex state management"
                },
                {
                  "name": "3.3.2 Redux or Zustand (choose one)"
                },
                {
                  "name": "3.3.3 Practice: Refactor a previous project to use advanced state management"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Testing and Deployment",
          "children": [
            {
              "name": "4.1 Testing",
              "children": [
                {
                  "name": "4.1.1 Unit testing with Jest"
                },
                {
                  "name": "4.1.2 Integration testing"
                },
                {
                  "name": "4.1.3 Practice: Write unit tests for core components"
                }
              ]
            },
            {
              "name": "4.2 Deployment",
              "children": [
                {
                  "name": "4.2.1 Building release APK/IPA files"
                },
                {
                  "name": "4.2.2 Publishing to app stores (Google Play Store, Apple App Store)"
                },
                {
                  "name": "4.2.3 Practice: Deploy a completed app to a test environment"
                }
              ]
            },
            {
              "name": "4.3 Version Control",
              "children": [
                {
                  "name": "4.3.1 Git basics (init, add, commit, push, pull)"
                },
                {
                  "name": "4.3.2 Branching and merging"
                },
                {
                  "name": "4.3.3 Practice: Use Git for a personal project"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Libraries",
          "children": [
            {
              "name": "5.1 Third-Party Libraries",
              "children": [
                {
                  "name": "5.1.1 Integrating popular libraries (e.g., Lottie, React Native Paper)"
                },
                {
                  "name": "5.1.2 Understanding library documentation and usage"
                },
                {
                  "name": "5.1.3 Practice: Enhance an existing app with third-party libraries"
                }
              ]
            },
            {
              "name": "5.2 Native Modules",
              "children": [
                {
                  "name": "5.2.1 Understanding the concept of bridging native code"
                },
                {
                  "name": "5.2.2 Implementing custom native modules (optional, for advanced users)"
                },
                {
                  "name": "5.2.3 Practice: Explore existing native modules to expand app functionalities"
                }
              ]
            },
            {
              "name": "5.3 Performance Optimization",
              "children": [
                {
                  "name": "5.3.1 Optimizing rendering performance"
                },
                {
                  "name": "5.3.2 Reducing bundle size"
                },
                {
                  "name": "5.3.3 Practice: Analyze and improve the performance of a previous project"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "React Native Developer roadmap",
    "output": {
      "name": "React Native Developer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 JavaScript Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions, Arrays, Objects"
                },
                {
                  "name": "1.1.4 Practice: Build a simple calculator app in JavaScript"
                }
              ]
            },
            {
              "name": "1.2 React Fundamentals",
              "children": [
                {
                  "name": "1.2.1 JSX, Components, Props"
                },
                {
                  "name": "1.2.2 State, Lifecycle Methods (Class Components)"
                },
                {
                  "name": "1.2.3 Hooks (useState, useEffect)"
                },
                {
                  "name": "1.2.4 Practice: Build a simple to-do list app in React"
                }
              ]
            },
            {
              "name": "1.3 React Native Basics",
              "children": [
                {
                  "name": "1.3.1 Setting up Development Environment"
                },
                {
                  "name": "1.3.2 Basic UI Components (Text, View, Image, StyleSheet)"
                },
                {
                  "name": "1.3.3 Navigation (React Navigation)"
                },
                {
                  "name": "1.3.4 Practice: Build a simple welcome screen app"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Concepts",
          "children": [
            {
              "name": "2.1 Advanced UI Components",
              "children": [
                {
                  "name": "2.1.1 FlatList, SectionList for efficient data rendering"
                },
                {
                  "name": "2.1.2 Working with ScrollViews"
                },
                {
                  "name": "2.1.3 Implementing complex layouts (Flexbox)"
                },
                {
                  "name": "2.1.4 Practice: Build a list view app with data fetching"
                }
              ]
            },
            {
              "name": "2.2 State Management",
              "children": [
                {
                  "name": "2.2.1 Context API"
                },
                {
                  "name": "2.2.2 Redux or Zustand"
                },
                {
                  "name": "2.2.3 Async actions and data fetching"
                },
                {
                  "name": "2.2.4 Practice: Integrate state management into a larger app"
                }
              ]
            },
            {
              "name": "2.3 API Integration & Data Fetching",
              "children": [
                {
                  "name": "2.3.1 Using Fetch API or Axios"
                },
                {
                  "name": "2.3.2 Handling asynchronous operations (Promises, async/await)"
                },
                {
                  "name": "2.3.3 JSON parsing and data transformation"
                },
                {
                  "name": "2.3.4 Practice: Build an app that fetches data from a public API"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Topics",
          "children": [
            {
              "name": "3.1 Navigation & Routing",
              "children": [
                {
                  "name": "3.1.1 Deep linking"
                },
                {
                  "name": "3.1.2 Implementing complex navigation flows"
                },
                {
                  "name": "3.1.3 Parameter passing between screens"
                },
                {
                  "name": "3.1.4 Practice: Build an app with multiple screens and complex navigation"
                }
              ]
            },
            {
              "name": "3.2 Testing",
              "children": [
                {
                  "name": "3.2.1 Unit testing with Jest and React Testing Library"
                },
                {
                  "name": "3.2.2 Integration testing"
                },
                {
                  "name": "3.2.3 End-to-end testing"
                },
                {
                  "name": "3.2.4 Practice: Write unit and integration tests for components"
                }
              ]
            },
            {
              "name": "3.3 Deployment & Publishing",
              "children": [
                {
                  "name": "3.3.1 Building release APK/IPA files"
                },
                {
                  "name": "3.3.2 Publishing to app stores (Google Play Store and Apple App Store)"
                },
                {
                  "name": "3.3.3 App signing and security"
                },
                {
                  "name": "3.3.4 Practice: Deploy a completed app to the app stores"
                }
              ]
            }
          ]
        },
        {
          "name": "4.  Advanced React Native Techniques",
          "children": [
            {
              "name": "4.1 Animations and Gestures",
              "children": [
                {
                  "name": "4.1.1 Using Animated API for animations"
                },
                {
                  "name": "4.1.2 Implementing gestures with PanResponder and GestureResponderSystem"
                },
                {
                  "name": "4.1.3 Creating custom transition animations"
                },
                {
                  "name": "4.1.4 Practice: Add animations and gestures to an existing app"
                }
              ]
            },
            {
              "name": "4.2 Third-Party Libraries",
              "children": [
                {
                  "name": "4.2.1 Integrating popular libraries (e.g., Lottie, React Native Paper)"
                },
                {
                  "name": "4.2.2 Understanding library documentation and usage"
                },
                {
                  "name": "4.2.3  Troubleshooting library integration issues"
                },
                {
                  "name": "4.2.4 Practice: Use a third-party library to enhance an app's functionality"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Project Portfolio",
          "children": [
            {
              "name": "5.1  Building a portfolio of React Native applications",
              "children": [
                {
                  "name": "5.1.1 Showcase different skills and techniques"
                },
                {
                  "name": "5.1.2 Focus on user experience and design"
                },
                {
                  "name": "5.1.3 Prepare for job interviews by discussing projects"
                },
                {
                  "name": "5.1.4 Project Ideas: E-commerce app, Social media app, Fitness tracker"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Mobile game developer",
    "output": {
      "name": "Mobile Game Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                },
                {
                  "name": "1.1.4 Project: Simple Calculator App"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction"
                },
                {
                  "name": "1.2.4 Project: Simple 2D Shape Drawing App"
                }
              ]
            },
            {
              "name": "1.3 Version Control (Git)",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Using GitHub/GitLab"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Engine Selection & Basics",
          "children": [
            {
              "name": "2.1 Unity Introduction",
              "children": [
                {
                  "name": "2.1.1 Setting up Unity and the IDE"
                },
                {
                  "name": "2.1.2 Scene Management"
                },
                {
                  "name": "2.1.3 Game Objects and Components"
                },
                {
                  "name": "2.1.4 Project: Simple 3D Scene with Movement"
                }
              ]
            },
            {
              "name": "2.2 Game Engine Alternatives",
              "children": [
                {
                  "name": "2.2.1 Unreal Engine Overview"
                },
                {
                  "name": "2.2.2 Godot Engine Overview"
                },
                {
                  "name": "2.2.3 Choosing the right engine based on project needs"
                }
              ]
            },
            {
              "name": "2.3 Basic Game Mechanics",
              "children": [
                {
                  "name": "2.3.1 Input Handling"
                },
                {
                  "name": "2.3.2 Collision Detection"
                },
                {
                  "name": "2.3.3 Simple Physics"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Mobile Development Specifics",
          "children": [
            {
              "name": "3.1 Platform-Specific Considerations (iOS/Android)",
              "children": [
                {
                  "name": "3.1.1 iOS Development Setup (Xcode)"
                },
                {
                  "name": "3.1.2 Android Development Setup (Android Studio)"
                },
                {
                  "name": "3.1.3 Platform-specific UI elements"
                }
              ]
            },
            {
              "name": "3.2 Mobile Optimization Techniques",
              "children": [
                {
                  "name": "3.2.1 Performance optimization"
                },
                {
                  "name": "3.2.2 Memory management"
                },
                {
                  "name": "3.2.3 Battery optimization"
                }
              ]
            },
            {
              "name": "3.3 Deployment and Publishing",
              "children": [
                {
                  "name": "3.3.1 App Store Connect"
                },
                {
                  "name": "3.3.2 Google Play Console"
                },
                {
                  "name": "3.3.3  Preparing assets for different resolutions"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Concepts and Techniques",
          "children": [
            {
              "name": "4.1 Advanced Game Mechanics",
              "children": [
                {
                  "name": "4.1.1 AI (Pathfinding, Behavior Trees)"
                },
                {
                  "name": "4.1.2 Animation and Effects"
                },
                {
                  "name": "4.1.3 Networking"
                }
              ]
            },
            {
              "name": "4.2 Game Design Principles",
              "children": [
                {
                  "name": "4.2.1 Game balance"
                },
                {
                  "name": "4.2.2 Level design"
                },
                {
                  "name": "4.2.3 User experience (UX) and User interface (UI)"
                }
              ]
            },
            {
              "name": "4.3 Monetization Strategies",
              "children": [
                {
                  "name": "4.3.1 In-app purchases (IAP)"
                },
                {
                  "name": "4.3.2 Ads"
                },
                {
                  "name": "4.3.3 Subscription models"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Portfolio Building and Job Search",
          "children": [
            {
              "name": "5.1 Creating a Strong Portfolio",
              "children": [
                {
                  "name": "5.1.1 Showcase your best projects"
                },
                {
                  "name": "5.1.2 Highlight your skills and achievements"
                },
                {
                  "name": "5.1.3 Building a professional website/online presence"
                }
              ]
            },
            {
              "name": "5.2 Job Application Process",
              "children": [
                {
                  "name": "5.2.1 Crafting a compelling resume and cover letter"
                },
                {
                  "name": "5.2.2 Preparing for technical interviews"
                },
                {
                  "name": "5.2.3 Networking with industry professionals"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Mobile game developer roadmap",
    "output": {
      "name": "Mobile Game Developer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Learn a language (C#, Java, Kotlin, Swift)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) principles"
                },
                {
                  "name": "1.1.3 Data structures and algorithms (basics)"
                },
                {
                  "name": "1.1.4 Practice: Build a simple console application"
                }
              ]
            },
            {
              "name": "1.2 Game Design Basics",
              "children": [
                {
                  "name": "1.2.1 Game mechanics and systems"
                },
                {
                  "name": "1.2.2 Game loops and states"
                },
                {
                  "name": "1.2.3 Level design principles"
                },
                {
                  "name": "1.2.4 Practice: Design a simple game concept document"
                }
              ]
            },
            {
              "name": "1.3 Mathematics for Game Development",
              "children": [
                {
                  "name": "1.3.1 Linear algebra (vectors, matrices)"
                },
                {
                  "name": "1.3.2 Trigonometry (sin, cos, tan)"
                },
                {
                  "name": "1.3.3 Basic calculus (derivatives, integrals - optional)"
                },
                {
                  "name": "1.3.4 Practice: Implement basic 2D movement in a simple game"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Engine Selection and Learning",
          "children": [
            {
              "name": "2.1 Choose a Game Engine (Unity or Unreal Engine)",
              "children": [
                {
                  "name": "2.1.1 Research engine capabilities and community support"
                },
                {
                  "name": "2.1.2 Consider your platform targets (iOS, Android)"
                },
                {
                  "name": "2.1.3  Start with tutorials for your chosen engine"
                }
              ]
            },
            {
              "name": "2.2 Core Engine Features",
              "children": [
                {
                  "name": "2.2.1 Scene management"
                },
                {
                  "name": "2.2.2 UI design and implementation"
                },
                {
                  "name": "2.2.3 Asset management (importing, organizing)"
                }
              ]
            },
            {
              "name": "2.3 Scripting within the Engine",
              "children": [
                {
                  "name": "2.3.1  Learn the engine's scripting language (C# for Unity, C++ for Unreal Engine)"
                },
                {
                  "name": "2.3.2  Understand the engine's API and how to interact with it"
                },
                {
                  "name": "2.3.3  Practice: Create a simple interactive scene within the engine"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Mobile Game Development Specifics",
          "children": [
            {
              "name": "3.1 Platform-Specific Considerations",
              "children": [
                {
                  "name": "3.1.1 iOS development (Swift/Objective-C) or Android Development (Java/Kotlin) specifics"
                },
                {
                  "name": "3.1.2 Device limitations (screen size, processing power, memory)"
                },
                {
                  "name": "3.1.3  Adaptive UI design principles"
                }
              ]
            },
            {
              "name": "3.2 Mobile-Friendly UI/UX Design",
              "children": [
                {
                  "name": "3.2.1 Touch controls and gestures"
                },
                {
                  "name": "3.2.2 Mobile UI patterns and best practices"
                },
                {
                  "name": "3.2.3 User testing and iteration"
                }
              ]
            },
            {
              "name": "3.3 Optimization for Mobile",
              "children": [
                {
                  "name": "3.3.1 Performance profiling and optimization techniques"
                },
                {
                  "name": "3.3.2 Memory management (garbage collection, memory leaks)"
                },
                {
                  "name": "3.3.3 Asset optimization (textures, models)"
                },
                {
                  "name": "3.3.4 Practice: Optimize a simple game for mobile performance"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Publishing and Monetization",
          "children": [
            {
              "name": "4.1 App Store Submission Process",
              "children": [
                {
                  "name": "4.1.1  Understanding app store guidelines (Apple App Store, Google Play Store)"
                },
                {
                  "name": "4.1.2  Preparing marketing materials (icons, screenshots, descriptions)"
                },
                {
                  "name": "4.1.3  Building and submitting your app"
                }
              ]
            },
            {
              "name": "4.2 Monetization Strategies",
              "children": [
                {
                  "name": "4.2.1 In-app purchases (IAP)"
                },
                {
                  "name": "4.2.2 Ads (interstitial, banner, rewarded video)"
                },
                {
                  "name": "4.2.3 Freemium vs. paid models"
                }
              ]
            },
            {
              "name": "4.3 Analytics and Iteration",
              "children": [
                {
                  "name": "4.3.1  Implement analytics to track player behavior"
                },
                {
                  "name": "4.3.2  Use data to improve your game and monetization strategies"
                },
                {
                  "name": "4.3.3  Iterative development based on user feedback"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 Networking",
              "children": [
                {
                  "name": "5.1.1 Multiplayer game development (client-server architecture)"
                },
                {
                  "name": "5.1.2 Real-time communication protocols (e.g., WebSockets)"
                }
              ]
            },
            {
              "name": "5.2 Advanced Graphics",
              "children": [
                {
                  "name": "5.2.1 Shaders and post-processing effects"
                },
                {
                  "name": "5.2.2  Advanced rendering techniques"
                }
              ]
            },
            {
              "name": "5.3 AI and Machine Learning",
              "children": [
                {
                  "name": "5.3.1 Implementing AI for NPCs and game logic"
                },
                {
                  "name": "5.3.2  Using machine learning for game design and optimization"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn Mobile game developement",
    "output": {
      "name": "Mobile Game Development Learning Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Introduction to C# or Java/Kotlin"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) Concepts"
                },
                {
                  "name": "1.1.3 Data Structures and Algorithms (Basic)"
                },
                {
                  "name": "1.1.4 Practical Exercise: Create a simple console application"
                }
              ]
            },
            {
              "name": "1.2 Game Design Principles",
              "children": [
                {
                  "name": "1.2.1 Game Mechanics and Systems"
                },
                {
                  "name": "1.2.2 Level Design and Game Flow"
                },
                {
                  "name": "1.2.3 Game Balancing and Playtesting"
                },
                {
                  "name": "1.2.4 Project: Design a simple game concept document"
                }
              ]
            },
            {
              "name": "1.3 Version Control (Git)",
              "children": [
                {
                  "name": "1.3.1 Git Basics: Cloning, Committing, Pushing"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Collaborative workflows (GitHub/GitLab)"
                },
                {
                  "name": "1.3.4 Project: Create a Git repository and manage a small project"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Engine Selection and Basics",
          "children": [
            {
              "name": "2.1 Unity (C#)",
              "children": [
                {
                  "name": "2.1.1 Setting up Unity and the development environment"
                },
                {
                  "name": "2.1.2 Understanding the Unity editor interface"
                },
                {
                  "name": "2.1.3 Creating basic scenes and prefabs"
                },
                {
                  "name": "2.1.4 Project: Build a simple 3D scene with interactive elements"
                }
              ]
            },
            {
              "name": "2.2 Unreal Engine (C++)",
              "children": [
                {
                  "name": "2.2.1 Setting up Unreal Engine and the development environment"
                },
                {
                  "name": "2.2.2 Blueprint basics (visual scripting)"
                },
                {
                  "name": "2.2.3 Understanding the Unreal Editor Interface"
                },
                {
                  "name": "2.2.4 Project: Create a simple 3D scene with basic interactions using Blueprints"
                }
              ]
            },
            {
              "name": "2.3 Game Engine Comparison",
              "children": [
                {
                  "name": "2.3.1 Feature comparison between Unity and Unreal Engine"
                },
                {
                  "name": "2.3.2 Choosing the right engine based on project needs"
                },
                {
                  "name": "2.3.3 Community and resources available for each engine"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Core Game Development Concepts",
          "children": [
            {
              "name": "3.1 Game Programming",
              "children": [
                {
                  "name": "3.1.1 Input handling and user interface (UI) development"
                },
                {
                  "name": "3.1.2 Implementing game mechanics (e.g., movement, collision)"
                },
                {
                  "name": "3.1.3 Working with animation and particle systems"
                }
              ]
            },
            {
              "name": "3.2 2D Game Development",
              "children": [
                {
                  "name": "3.2.1 Sprite sheets and animations"
                },
                {
                  "name": "3.2.2 2D physics and collision"
                },
                {
                  "name": "3.2.3 Project: Develop a simple 2D platformer game"
                }
              ]
            },
            {
              "name": "3.3 3D Game Development",
              "children": [
                {
                  "name": "3.3.1 3D modeling basics (optional, use pre-made assets initially)"
                },
                {
                  "name": "3.3.2 3D animation and rigging (optional, use pre-made assets initially)"
                },
                {
                  "name": "3.3.3 3D physics and collision"
                },
                {
                  "name": "3.3.4 Project: Develop a simple 3D game with basic interactions"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Networking and Multiplayer",
              "children": [
                {
                  "name": "4.1.1 Understanding network architectures"
                },
                {
                  "name": "4.1.2 Implementing basic multiplayer functionality"
                },
                {
                  "name": "4.1.3 Project: Add simple multiplayer features to an existing game"
                }
              ]
            },
            {
              "name": "4.2 Mobile Platform Specifics (iOS/Android)",
              "children": [
                {
                  "name": "4.2.1 Building and deploying games to iOS and Android"
                },
                {
                  "name": "4.2.2 Optimizing game performance for mobile devices"
                },
                {
                  "name": "4.2.3 Working with mobile device specific features (e.g., gyroscope)"
                }
              ]
            },
            {
              "name": "4.3 Monetization Strategies",
              "children": [
                {
                  "name": "4.3.1 In-app purchases (IAP)"
                },
                {
                  "name": "4.3.2 Ads integration"
                },
                {
                  "name": "4.3.3 Freemium vs. Premium models"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Publishing and Distribution",
          "children": [
            {
              "name": "5.1 App Store Optimization (ASO)",
              "children": [
                {
                  "name": "5.1.1 Keyword research"
                },
                {
                  "name": "5.1.2 App store listing optimization"
                },
                {
                  "name": "5.1.3 App icon and screenshots"
                }
              ]
            },
            {
              "name": "5.2 Publishing to App Stores",
              "children": [
                {
                  "name": "5.2.1 Apple App Store Connect"
                },
                {
                  "name": "5.2.2 Google Play Console"
                },
                {
                  "name": "5.2.3 Understanding app store guidelines"
                }
              ]
            },
            {
              "name": "5.3 Post-Launch Activities",
              "children": [
                {
                  "name": "5.3.1 Monitoring app performance"
                },
                {
                  "name": "5.3.2 Gathering user feedback"
                },
                {
                  "name": "5.3.3 Implementing updates and bug fixes"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn desktop game development",
    "output": {
      "name": "i want to learn desktop game development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures",
                  "children": [
                    {
                      "name": "1.1.3.1 Practice: Create a simple calculator program"
                    }
                  ]
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Practice: Create a simple game character class"
                }
              ]
            },
            {
              "name": "1.3 Mathematics for Game Development",
              "children": [
                {
                  "name": "1.3.1 Linear Algebra (Vectors, Matrices)"
                },
                {
                  "name": "1.3.2 Trigonometry (sin, cos, tan)"
                },
                {
                  "name": "1.3.3 Practice: Implement basic 2D vector operations"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Engine Selection & Setup",
          "children": [
            {
              "name": "2.1 Choosing a Game Engine (Unity, Unreal Engine, Godot)",
              "children": [
                {
                  "name": "2.1.1 Research Engine Features and Community Support"
                },
                {
                  "name": "2.1.2 Consider your project scope and learning goals"
                },
                {
                  "name": "2.1.3 Install and configure chosen engine"
                }
              ]
            },
            {
              "name": "2.2 Basic Engine Interface",
              "children": [
                {
                  "name": "2.2.1 Navigating the editor"
                },
                {
                  "name": "2.2.2 Understanding scene hierarchy and organization"
                },
                {
                  "name": "2.2.3 Practice: Create a simple scene with basic objects"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Game Development Fundamentals",
          "children": [
            {
              "name": "3.1 Game Loop and Update Mechanisms",
              "children": [
                {
                  "name": "3.1.1 Understanding the game loop structure"
                },
                {
                  "name": "3.1.2 Implementing basic game logic within the loop"
                },
                {
                  "name": "3.1.3 Practice: Create a simple animation loop"
                }
              ]
            },
            {
              "name": "3.2 Input Handling",
              "children": [
                {
                  "name": "3.2.1 Keyboard and mouse input"
                },
                {
                  "name": "3.2.2 Gamepad/controller input"
                },
                {
                  "name": "3.2.3 Practice: Implement player movement using keyboard input"
                }
              ]
            },
            {
              "name": "3.3 2D Game Development",
              "children": [
                {
                  "name": "3.3.1 Sprites and animations"
                },
                {
                  "name": "3.3.2 Collision detection"
                },
                {
                  "name": "3.3.3 Practice: Create a simple 2D platformer game"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Techniques",
          "children": [
            {
              "name": "4.1 3D Game Development",
              "children": [
                {
                  "name": "4.1.1 3D Modeling basics"
                },
                {
                  "name": "4.1.2 Cameras and perspectives"
                },
                {
                  "name": "4.1.3 Practice: Create a simple 3D scene"
                }
              ]
            },
            {
              "name": "4.2 Advanced Rendering Techniques",
              "children": [
                {
                  "name": "4.2.1 Lighting and shadows"
                },
                {
                  "name": "4.2.2 Post-processing effects"
                },
                {
                  "name": "4.2.3 Practice: Implement basic lighting in your 3D scene"
                }
              ]
            },
            {
              "name": "4.3 Networking and Multiplayer",
              "children": [
                {
                  "name": "4.3.1 Client-server architecture"
                },
                {
                  "name": "4.3.2 Network protocols"
                },
                {
                  "name": "4.3.3 Practice: Implement a simple multiplayer feature (e.g., chat)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Game Publishing and Distribution",
          "children": [
            {
              "name": "5.1 Game Testing and Debugging",
              "children": [
                {
                  "name": "5.1.1 Bug tracking and reporting"
                },
                {
                  "name": "5.1.2 Playtesting and feedback incorporation"
                }
              ]
            },
            {
              "name": "5.2 Game Packaging and Deployment",
              "children": [
                {
                  "name": "5.2.1 Creating distributable builds"
                },
                {
                  "name": "5.2.2 Choosing a distribution platform (Steam, Itch.io, etc.)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "desktop game developer",
    "output": {
      "name": "desktop game developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Control Flow"
                },
                {
                  "name": "1.1.2 Functions, Objects, Classes"
                },
                {
                  "name": "1.1.3 Basic Algorithms and Data Structures (Arrays, Lists)"
                },
                {
                  "name": "1.1.4 Practice: Build a simple console application (e.g., text-based adventure)"
                }
              ]
            },
            {
              "name": "1.2 Mathematics for Game Development",
              "children": [
                {
                  "name": "1.2.1 Linear Algebra (Vectors, Matrices)"
                },
                {
                  "name": "1.2.2 Trigonometry (sin, cos, tan)"
                },
                {
                  "name": "1.2.3 2D and 3D Geometry"
                },
                {
                  "name": "1.2.4 Practice: Implement basic 2D transformations (rotation, scaling, translation)"
                }
              ]
            },
            {
              "name": "1.3 Game Design Principles",
              "children": [
                {
                  "name": "1.3.1 Game Mechanics"
                },
                {
                  "name": "1.3.2 Level Design"
                },
                {
                  "name": "1.3.3 Game Balance"
                },
                {
                  "name": "1.3.4 Practice: Design a simple board game and document its rules and mechanics"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Game Engine Selection and Basics",
          "children": [
            {
              "name": "2.1 Choosing a Game Engine (Unity, Unreal Engine, Godot)",
              "children": [
                {
                  "name": "2.1.1 Research and Comparison of Engines"
                },
                {
                  "name": "2.1.2 Setting up Development Environment"
                },
                {
                  "name": "2.1.3 Understanding Engine Architecture"
                }
              ]
            },
            {
              "name": "2.2 Core Engine Concepts",
              "children": [
                {
                  "name": "2.2.1 Scene Management"
                },
                {
                  "name": "2.2.2 Game Objects and Components"
                },
                {
                  "name": "2.2.3 Input Handling"
                },
                {
                  "name": "2.2.4 Practice: Create a simple scene with interactive elements"
                }
              ]
            },
            {
              "name": "2.3 Scripting and Programming in the Chosen Engine",
              "children": [
                {
                  "name": "2.3.1 Understanding Engine Scripting Language (C#, C++, GDScript)"
                },
                {
                  "name": "2.3.2 Working with Engine APIs"
                },
                {
                  "name": "2.3.3 Debugging Techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Intermediate Game Development",
          "children": [
            {
              "name": "3.1 2D Game Development",
              "children": [
                {
                  "name": "3.1.1 Sprite Animation"
                },
                {
                  "name": "3.1.2 Collision Detection"
                },
                {
                  "name": "3.1.3 UI Development"
                },
                {
                  "name": "3.1.4 Practice: Create a simple 2D Platformer game"
                }
              ]
            },
            {
              "name": "3.2 3D Game Development",
              "children": [
                {
                  "name": "3.2.1 3D Modeling Basics (Blender, Maya, 3ds Max)"
                },
                {
                  "name": "3.2.2 Importing Assets into Engine"
                },
                {
                  "name": "3.2.3 Lighting and Shading"
                },
                {
                  "name": "3.2.4 Practice: Create a simple 3D scene with basic lighting and character model"
                }
              ]
            },
            {
              "name": "3.3 Game Physics and Simulations",
              "children": [
                {
                  "name": "3.3.1 Understanding Game Physics Engines"
                },
                {
                  "name": "3.3.2 Rigid Body Dynamics"
                },
                {
                  "name": "3.3.3 Collision Response"
                },
                {
                  "name": "3.3.4 Practice: Implement simple physics interactions in a game"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Game Development",
          "children": [
            {
              "name": "4.1 Advanced Graphics Techniques",
              "children": [
                {
                  "name": "4.1.1 Shaders and Post-processing"
                },
                {
                  "name": "4.1.2 Particle Systems"
                },
                {
                  "name": "4.1.3 Advanced Rendering Techniques"
                }
              ]
            },
            {
              "name": "4.2 Networking",
              "children": [
                {
                  "name": "4.2.1 Client-Server Architecture"
                },
                {
                  "name": "4.2.2 Networking Protocols"
                },
                {
                  "name": "4.2.3 Multiplayer Game Development"
                }
              ]
            },
            {
              "name": "4.3 Sound Design and Implementation",
              "children": [
                {
                  "name": "4.3.1 Audio Middleware (FMOD, Wwise)"
                },
                {
                  "name": "4.3.2 Sound Effects and Music Integration"
                },
                {
                  "name": "4.3.3 Spatial Audio"
                }
              ]
            },
            {
              "name": "4.4 Game Optimization",
              "children": [
                {
                  "name": "4.4.1 Profiling and Performance Analysis"
                },
                {
                  "name": "4.4.2 Memory Management"
                },
                {
                  "name": "4.4.3 Optimization Techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Publishing",
          "children": [
            {
              "name": "5.1 Building and Packaging Games for Different Platforms",
              "children": [
                {
                  "name": "5.1.1 Platform-Specific Considerations (Windows, macOS, Linux)"
                },
                {
                  "name": "5.1.2 Version Control (Git)"
                }
              ]
            },
            {
              "name": "5.2 Game Publishing and Distribution",
              "children": [
                {
                  "name": "5.2.1 Digital Distribution Platforms (Steam, Epic Games Store, Itch.io)"
                },
                {
                  "name": "5.2.2 Marketing and Promotion"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "cross-platform developer",
    "output": {
      "name": "cross-platform developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Data Structures (Arrays, Lists, Hashmaps)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) principles"
                },
                {
                  "name": "1.1.3 Algorithms and Problem Solving (Sorting, Searching)"
                }
              ]
            },
            {
              "name": "1.2 Version Control (Git)",
              "children": [
                {
                  "name": "1.2.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.2.2 Branching and Merging"
                },
                {
                  "name": "1.2.3 Collaborative workflows (GitHub, GitLab)"
                }
              ]
            },
            {
              "name": "1.3  Command Line Interface (CLI)",
              "children": [
                {
                  "name": "1.3.1 Basic Navigation and Commands"
                },
                {
                  "name": "1.3.2 File Management"
                },
                {
                  "name": "1.3.3 Scripting basics (Bash or PowerShell)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Cross-Platform Framework",
          "children": [
            {
              "name": "2.1  React Native",
              "children": [
                {
                  "name": "2.1.1 Setting up development environment"
                },
                {
                  "name": "2.1.2 Basic components and layouts"
                },
                {
                  "name": "2.1.3 Project: Simple To-Do List app"
                }
              ]
            },
            {
              "name": "2.2 Flutter",
              "children": [
                {
                  "name": "2.2.1 Dart programming language fundamentals"
                },
                {
                  "name": "2.2.2 Widgets and layouts"
                },
                {
                  "name": "2.2.3 Project: Simple Calculator app"
                }
              ]
            },
            {
              "name": "2.3 Xamarin",
              "children": [
                {
                  "name": "2.3.1 C# Fundamentals"
                },
                {
                  "name": "2.3.2 Xamarin.Forms basics"
                },
                {
                  "name": "2.3.3 Project: Simple Weather app (using an API)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 State Management",
              "children": [
                {
                  "name": "3.1.1 Understanding state and its lifecycle"
                },
                {
                  "name": "3.1.2 Implementing state management solutions (Redux, Provider, BLoC)"
                },
                {
                  "name": "3.1.3 Project: Integrating state management into a larger app"
                }
              ]
            },
            {
              "name": "3.2 API Integration",
              "children": [
                {
                  "name": "3.2.1 HTTP requests (GET, POST, PUT, DELETE)"
                },
                {
                  "name": "3.2.2 JSON parsing and handling"
                },
                {
                  "name": "3.2.3 Project: Integrating an API for data fetching"
                }
              ]
            },
            {
              "name": "3.3 Testing",
              "children": [
                {
                  "name": "3.3.1 Unit testing"
                },
                {
                  "name": "3.3.2 Integration testing"
                },
                {
                  "name": "3.3.3 UI testing"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Distribution",
          "children": [
            {
              "name": "4.1 Building for different platforms",
              "children": [
                {
                  "name": "4.1.1 iOS deployment"
                },
                {
                  "name": "4.1.2 Android deployment"
                },
                {
                  "name": "4.1.3 Web deployment"
                }
              ]
            },
            {
              "name": "4.2 App stores",
              "children": [
                {
                  "name": "4.2.1 Apple App Store submission process"
                },
                {
                  "name": "4.2.2 Google Play Store submission process"
                }
              ]
            },
            {
              "name": "4.3  Debugging and Troubleshooting",
              "children": [
                {
                  "name": "4.3.1 Common issues and solutions"
                },
                {
                  "name": "4.3.2 Using debugging tools"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Cross-Platform Techniques",
          "children": [
            {
              "name": "5.1 Native Module Integration",
              "children": [
                {
                  "name": "5.1.1 Accessing device features (camera, GPS, etc.)"
                },
                {
                  "name": "5.1.2 Bridging native code with your framework"
                }
              ]
            },
            {
              "name": "5.2 Performance Optimization",
              "children": [
                {
                  "name": "5.2.1 Profiling and benchmarking"
                },
                {
                  "name": "5.2.2 Code optimization strategies"
                }
              ]
            },
            {
              "name": "5.3 Advanced UI/UX",
              "children": [
                {
                  "name": "5.3.1 Animations and transitions"
                },
                {
                  "name": "5.3.2 Custom component creation"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "cross-platform developer roadmap",
    "output": {
      "name": "Cross-Platform Developer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Data Structures (Arrays, Lists, Hash Tables)"
                },
                {
                  "name": "1.1.2 Object-Oriented Programming (OOP) Principles"
                },
                {
                  "name": "1.1.3 Algorithms and Problem Solving (searching, sorting)"
                }
              ]
            },
            {
              "name": "1.2 Version Control (Git)",
              "children": [
                {
                  "name": "1.2.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.2.2 Branching and Merging"
                },
                {
                  "name": "1.2.3 Collaborative workflows (GitHub, GitLab, Bitbucket)"
                },
                {
                  "name": "1.2.4 Project: Create a simple Git repository and manage changes."
                }
              ]
            },
            {
              "name": "1.3  Basic UI/UX Principles",
              "children": [
                {
                  "name": "1.3.1 User interface design basics"
                },
                {
                  "name": "1.3.2 User experience principles"
                },
                {
                  "name": "1.3.3 Common UI patterns and best practices"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Cross-Platform Framework",
          "children": [
            {
              "name": "2.1 React Native",
              "children": [
                {
                  "name": "2.1.1 Setting up development environment"
                },
                {
                  "name": "2.1.2 Core components and navigation"
                },
                {
                  "name": "2.1.3 State management (Context API, Redux)"
                },
                {
                  "name": "2.1.4 Project: Build a simple to-do list app."
                }
              ]
            },
            {
              "name": "2.2 Flutter",
              "children": [
                {
                  "name": "2.2.1 Dart programming language"
                },
                {
                  "name": "2.2.2 Widgets and layouts"
                },
                {
                  "name": "2.2.3 State management (Provider, BLoC, Riverpod)"
                },
                {
                  "name": "2.2.4 Project: Build a simple weather app."
                }
              ]
            },
            {
              "name": "2.3 Xamarin",
              "children": [
                {
                  "name": "2.3.1 C# fundamentals"
                },
                {
                  "name": "2.3.2 Xamarin.Forms basics"
                },
                {
                  "name": "2.3.3 Native UI elements"
                },
                {
                  "name": "2.3.4 Project: Build a simple calculator app."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 API Integration",
              "children": [
                {
                  "name": "3.1.1 RESTful APIs"
                },
                {
                  "name": "3.1.2 HTTP requests (GET, POST, PUT, DELETE)"
                },
                {
                  "name": "3.1.3 JSON parsing"
                },
                {
                  "name": "3.1.4 Project: Integrate an API into your chosen framework's app."
                }
              ]
            },
            {
              "name": "3.2 Database Integration",
              "children": [
                {
                  "name": "3.2.1 Local databases (SQLite, Realm)"
                },
                {
                  "name": "3.2.2 Cloud databases (Firebase, AWS Amplify)"
                },
                {
                  "name": "3.2.3 Data modeling and querying"
                }
              ]
            },
            {
              "name": "3.3 Testing and Debugging",
              "children": [
                {
                  "name": "3.3.1 Unit testing"
                },
                {
                  "name": "3.3.2 Integration testing"
                },
                {
                  "name": "3.3.3 Debugging tools and techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Distribution",
          "children": [
            {
              "name": "4.1 App Stores",
              "children": [
                {
                  "name": "4.1.1 Apple App Store submission process"
                },
                {
                  "name": "4.1.2 Google Play Store submission process"
                },
                {
                  "name": "4.1.3 App store optimization (ASO)"
                }
              ]
            },
            {
              "name": "4.2 Build Automation",
              "children": [
                {
                  "name": "4.2.1 CI/CD pipelines"
                },
                {
                  "name": "4.2.2 Build tools (fastlane, Jenkins)"
                }
              ]
            },
            {
              "name": "4.3 Analytics and Monitoring",
              "children": [
                {
                  "name": "4.3.1 Crash reporting"
                },
                {
                  "name": "4.3.2 Usage analytics"
                },
                {
                  "name": "4.3.3 Performance monitoring"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Technologies and Specialization",
          "children": [
            {
              "name": "5.1 State Management (Advanced)",
              "children": [
                {
                  "name": "5.1.1 Redux Toolkit (React Native)"
                },
                {
                  "name": "5.1.2 BLoC pattern (Flutter)"
                },
                {
                  "name": "5.1.3 MVVM architecture (Xamarin)"
                }
              ]
            },
            {
              "name": "5.2  Advanced UI/UX and Animations",
              "children": [
                {
                  "name": "5.2.1 Custom animations"
                },
                {
                  "name": "5.2.2 Advanced UI components"
                },
                {
                  "name": "5.2.3 UI/UX testing"
                }
              ]
            },
            {
              "name": "5.3 Platform-Specific Code",
              "children": [
                {
                  "name": "5.3.1 Native modules (React Native)"
                },
                {
                  "name": "5.3.2 Platform channels (Flutter)"
                },
                {
                  "name": "5.3.3 Dependency services (Xamarin)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn cross-platform developement",
    "output": {
      "name": "I want to learn cross-platform development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Programming Concepts",
              "children": [
                {
                  "name": "1.1.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.1.2 Control Flow (if/else, loops)"
                },
                {
                  "name": "1.1.3 Functions and Procedures"
                }
              ]
            },
            {
              "name": "1.2 Object-Oriented Programming (OOP)",
              "children": [
                {
                  "name": "1.2.1 Classes and Objects"
                },
                {
                  "name": "1.2.2 Inheritance and Polymorphism"
                },
                {
                  "name": "1.2.3 Encapsulation and Abstraction"
                }
              ]
            },
            {
              "name": "1.3 Version Control with Git",
              "children": [
                {
                  "name": "1.3.1 Git Basics (init, add, commit, push, pull)"
                },
                {
                  "name": "1.3.2 Branching and Merging"
                },
                {
                  "name": "1.3.3 Resolving Conflicts",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "name": "2. Choosing a Framework",
          "children": [
            {
              "name": "2.1 React Native",
              "children": [
                {
                  "name": "2.1.1 Setup and Environment"
                },
                {
                  "name": "2.1.2 JSX and Component Basics"
                },
                {
                  "name": "2.1.3 Project: Simple To-Do List App"
                }
              ]
            },
            {
              "name": "2.2 Flutter",
              "children": [
                {
                  "name": "2.2.1 Dart Programming Language"
                },
                {
                  "name": "2.2.2 Widgets and Layouts"
                },
                {
                  "name": "2.2.3 Project: Simple Calculator App"
                }
              ]
            },
            {
              "name": "2.3 Xamarin",
              "children": [
                {
                  "name": "2.3.1 C# Fundamentals"
                },
                {
                  "name": "2.3.2 Xamarin Forms Basics"
                },
                {
                  "name": "2.3.3 Project: Simple Weather App"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Concepts",
          "children": [
            {
              "name": "3.1 State Management",
              "children": [
                {
                  "name": "3.1.1 Understanding State"
                },
                {
                  "name": "3.1.2 Implementing State Management (Redux, Provider, BLoC)"
                }
              ]
            },
            {
              "name": "3.2 API Integration",
              "children": [
                {
                  "name": "3.2.1 REST APIs and HTTP requests"
                },
                {
                  "name": "3.2.2 JSON parsing and handling"
                },
                {
                  "name": "3.2.3 Project: Integrate an API into your chosen app"
                }
              ]
            },
            {
              "name": "3.3 Navigation and Routing",
              "children": [
                {
                  "name": "3.3.1 Implementing Navigation"
                },
                {
                  "name": "3.3.2 Passing Data Between Screens"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Testing",
          "children": [
            {
              "name": "4.1 Building and Deploying Apps",
              "children": [
                {
                  "name": "4.1.1 iOS Deployment"
                },
                {
                  "name": "4.1.2 Android Deployment"
                }
              ]
            },
            {
              "name": "4.2 Testing Strategies",
              "children": [
                {
                  "name": "4.2.1 Unit Testing"
                },
                {
                  "name": "4.2.2 Integration Testing"
                },
                {
                  "name": "4.2.3 UI Testing"
                }
              ]
            },
            {
              "name": "4.3 App Store and Play Store Submission",
              "children": [
                {
                  "name": "4.3.1 Apple App Store Connect"
                },
                {
                  "name": "4.3.2 Google Play Console"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics & Specialization",
          "children": [
            {
              "name": "5.1 Platform-Specific Code",
              "children": [
                {
                  "name": "5.1.1 Native Modules"
                },
                {
                  "name": "5.1.2 Bridging Native Code"
                }
              ]
            },
            {
              "name": "5.2  Performance Optimization",
              "children": [
                {
                  "name": "5.2.1 Profiling and debugging"
                },
                {
                  "name": "5.2.2 Memory management"
                }
              ]
            },
            {
              "name": "5.3  Security Best Practices",
              "children": [
                {
                  "name": "5.3.1 Data encryption"
                },
                {
                  "name": "5.3.2 Authentication and authorization"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn cross-platform development",
    "output": {
      "name": "How to Learn Cross-Platform Development",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Programming Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Object-Oriented Programming (OOP)"
                },
                {
                  "name": "1.1.2 Data Structures and Algorithms"
                },
                {
                  "name": "1.1.3 Version Control with Git"
                }
              ]
            },
            {
              "name": "1.2 Choose a Cross-Platform Framework",
              "children": [
                {
                  "name": "1.2.1 Research popular frameworks (React Native, Flutter, Xamarin, Ionic)"
                },
                {
                  "name": "1.2.2 Compare pros and cons based on project needs and personal preference"
                },
                {
                  "name": "1.2.3  Set up development environment for your chosen framework"
                }
              ]
            },
            {
              "name": "1.3 Basic UI/UX Principles",
              "children": [
                {
                  "name": "1.3.1  Understanding UI design basics (layout, typography, color palettes)"
                },
                {
                  "name": "1.3.2  Learning UX principles (user experience flow, usability)"
                },
                {
                  "name": "1.3.3 Practical exercise: Design a simple app UI using Figma or similar tool"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Framework-Specific Learning",
          "children": [
            {
              "name": "2.1 Core Framework Concepts",
              "children": [
                {
                  "name": "2.1.1 Learn the framework's architecture and components"
                },
                {
                  "name": "2.1.2 Understand state management techniques"
                },
                {
                  "name": "2.1.3 Master widget/component creation and usage"
                }
              ]
            },
            {
              "name": "2.2 Advanced Framework Features",
              "children": [
                {
                  "name": "2.2.1 Explore navigation and routing within the app"
                },
                {
                  "name": "2.2.2 Learn how to integrate APIs (REST, GraphQL)"
                },
                {
                  "name": "2.2.3  Implement data persistence (local storage, databases)"
                }
              ]
            },
            {
              "name": "2.3  Testing and Debugging",
              "children": [
                {
                  "name": "2.3.1 Learn unit testing and integration testing techniques"
                },
                {
                  "name": "2.3.2 Use debugging tools provided by the framework and IDE"
                },
                {
                  "name": "2.3.3 Implement logging for better error tracking"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Platform-Specific Considerations",
          "children": [
            {
              "name": "3.1 Handling Platform Differences",
              "children": [
                {
                  "name": "3.1.1  Understanding iOS and Android specific features and APIs"
                },
                {
                  "name": "3.1.2  Implementing platform-specific UI customizations"
                },
                {
                  "name": "3.1.3  Using conditional rendering to adapt UI for different platforms"
                }
              ]
            },
            {
              "name": "3.2 Native Modules and Plugins",
              "children": [
                {
                  "name": "3.2.1 Learn about native modules and plugins for extending framework capabilities"
                },
                {
                  "name": "3.2.2  Integrate native features (camera, geolocation, etc.)"
                },
                {
                  "name": "3.2.3 Project:  Integrate a native feature into a simple app"
                }
              ]
            },
            {
              "name": "3.3 Performance Optimization",
              "children": [
                {
                  "name": "3.3.1  Techniques for improving app performance"
                },
                {
                  "name": "3.3.2  Profiling and analyzing app performance"
                },
                {
                  "name": "3.3.3  Optimizing images and resources"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Distribution",
          "children": [
            {
              "name": "4.1 Building and Testing for Different Platforms",
              "children": [
                {
                  "name": "4.1.1  Generating build artifacts for iOS and Android"
                },
                {
                  "name": "4.1.2  Testing on different devices and emulators"
                },
                {
                  "name": "4.1.3  Performing thorough QA testing before release"
                }
              ]
            },
            {
              "name": "4.2 App Store Deployment",
              "children": [
                {
                  "name": "4.2.1 Understanding the requirements for submitting apps to the app stores"
                },
                {
                  "name": "4.2.2  Creating app store listings and managing app metadata"
                },
                {
                  "name": "4.2.3  Handling app updates and maintenance"
                }
              ]
            },
            {
              "name": "4.3  Advanced Deployment Strategies",
              "children": [
                {
                  "name": "4.3.1  Continuous integration and continuous deployment (CI/CD)"
                },
                {
                  "name": "4.3.2  Code signing and security best practices"
                },
                {
                  "name": "4.3.3  A/B testing and analytics integration"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 State Management",
              "children": [
                {
                  "name": "5.1.1  Advanced state management libraries (Redux, BLoC, MobX)"
                },
                {
                  "name": "5.1.2  Implement advanced state management in a complex app"
                },
                {
                  "name": "5.1.3  Project: Create a large application with sophisticated state management"
                }
              ]
            },
            {
              "name": "5.2  Third-Party Libraries and APIs",
              "children": [
                {
                  "name": "5.2.1  Learn to effectively use external libraries"
                },
                {
                  "name": "5.2.2  Integrate complex APIs and services"
                },
                {
                  "name": "5.2.3 Project: Build an app that uses multiple external APIs"
                }
              ]
            },
            {
              "name": "5.3  Architectural Patterns",
              "children": [
                {
                  "name": "5.3.1  Learn different architectural patterns (MVVM, MVC, MVI)"
                },
                {
                  "name": "5.3.2  Apply best architectural patterns in a cross-platform project"
                },
                {
                  "name": "5.3.3  Project: Refactor a large application using a chosen architectural pattern"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Deep Learning",
    "output": {
      "name": "Deep Learning",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Linear Transformations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Chain Rule"
                },
                {
                  "name": "1.2.3 Partial Derivatives"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Probability Distributions"
                },
                {
                  "name": "1.3.2 Hypothesis Testing"
                },
                {
                  "name": "1.3.3 Bayesian Statistics"
                }
              ]
            },
            {
              "name": "1.4 Programming for Deep Learning",
              "children": [
                {
                  "name": "1.4.1 Python Basics"
                },
                {
                  "name": "1.4.2 NumPy"
                },
                {
                  "name": "1.4.3 Pandas"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Neural Networks",
          "children": [
            {
              "name": "2.1 Perceptrons",
              "children": [
                {
                  "name": "2.1.1 Introduction to Perceptrons"
                },
                {
                  "name": "2.1.2 Activation Functions (Sigmoid, ReLU)"
                },
                {
                  "name": "2.1.3 Perceptron Learning Algorithm - Practice: Implement a simple perceptron"
                }
              ]
            },
            {
              "name": "2.2 Multilayer Perceptrons (MLPs)",
              "children": [
                {
                  "name": "2.2.1 Forward Propagation"
                },
                {
                  "name": "2.2.2 Backpropagation"
                },
                {
                  "name": "2.2.3 Gradient Descent - Practice: Build a MLP for MNIST classification"
                }
              ]
            },
            {
              "name": "2.3 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "2.3.1 Convolutional Layers"
                },
                {
                  "name": "2.3.2 Pooling Layers"
                },
                {
                  "name": "2.3.3 Application in Image Recognition - Practice: Train a CNN on CIFAR-10"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Recurrent Neural Networks & LSTMs",
          "children": [
            {
              "name": "3.1 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.1.1 Understanding RNN architecture"
                },
                {
                  "name": "3.1.2 Backpropagation Through Time (BPTT)"
                },
                {
                  "name": "3.1.3 Vanishing/Exploding Gradients"
                }
              ]
            },
            {
              "name": "3.2 Long Short-Term Memory (LSTM) Networks",
              "children": [
                {
                  "name": "3.2.1 LSTM Cell Architecture"
                },
                {
                  "name": "3.2.2 Gated Mechanisms"
                },
                {
                  "name": "3.2.3 Applications in NLP - Practice: Build an LSTM for sentiment analysis"
                }
              ]
            },
            {
              "name": "3.3 Gated Recurrent Units (GRUs)",
              "children": [
                {
                  "name": "3.3.1 GRU Architecture"
                },
                {
                  "name": "3.3.2 Comparison with LSTMs"
                },
                {
                  "name": "3.3.3 Practical Applications"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Autoencoders",
              "children": [
                {
                  "name": "4.1.1 Denoising Autoencoders"
                },
                {
                  "name": "4.1.2 Variational Autoencoders (VAEs)"
                },
                {
                  "name": "4.1.3 Applications in Dimensionality Reduction"
                }
              ]
            },
            {
              "name": "4.2 Generative Adversarial Networks (GANs)",
              "children": [
                {
                  "name": "4.2.1 Generator and Discriminator"
                },
                {
                  "name": "4.2.2 Training GANs"
                },
                {
                  "name": "4.2.3 Applications in Image Generation - Practice: Implement a simple GAN"
                }
              ]
            },
            {
              "name": "4.3 Reinforcement Learning",
              "children": [
                {
                  "name": "4.3.1 Markov Decision Processes (MDPs)"
                },
                {
                  "name": "4.3.2 Q-Learning"
                },
                {
                  "name": "4.3.3 Deep Q-Networks (DQNs)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Optimization",
          "children": [
            {
              "name": "5.1 Model Deployment",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.1.2 Model Serving Frameworks (TensorFlow Serving, TorchServe)"
                },
                {
                  "name": "5.1.3 Mobile and Edge Deployment"
                }
              ]
            },
            {
              "name": "5.2 Model Optimization",
              "children": [
                {
                  "name": "5.2.1 Pruning"
                },
                {
                  "name": "5.2.2 Quantization"
                },
                {
                  "name": "5.2.3 Knowledge Distillation"
                }
              ]
            },
            {
              "name": "5.3 Monitoring and Maintenance",
              "children": [
                {
                  "name": "5.3.1 Model Drift Detection"
                },
                {
                  "name": "5.3.2 Retraining Strategies"
                },
                {
                  "name": "5.3.3 A/B Testing"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Deep Learning Expert roadmap",
    "output": {
      "name": "Deep Learning Expert Roadmap",
      "children": [
        {
          "name": "1. Foundational Mathematics and Programming",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, and Operations"
                },
                {
                  "name": "1.1.2 Eigenvalues and Eigenvectors"
                },
                {
                  "name": "1.1.3 Linear Transformations"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Chain Rule and Backpropagation"
                },
                {
                  "name": "1.2.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Probability Distributions"
                },
                {
                  "name": "1.3.2 Hypothesis Testing"
                },
                {
                  "name": "1.3.3 Bayesian Statistics (Optional)"
                }
              ]
            },
            {
              "name": "1.4 Python Programming for Deep Learning",
              "children": [
                {
                  "name": "1.4.1 NumPy for numerical computation"
                },
                {
                  "name": "1.4.2 Pandas for data manipulation"
                },
                {
                  "name": "1.4.3 Matplotlib and Seaborn for visualization"
                },
                {
                  "name": "1.4.4 Project: Implement Linear Regression from scratch using NumPy"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Deep Learning Concepts",
          "children": [
            {
              "name": "2.1 Neural Networks Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Perceptrons and Activation Functions"
                },
                {
                  "name": "2.1.2 Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "2.1.3 Backpropagation Algorithm"
                }
              ]
            },
            {
              "name": "2.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "2.2.1 Convolutional Layers"
                },
                {
                  "name": "2.2.2 Pooling Layers"
                },
                {
                  "name": "2.2.3 Architectures (LeNet, AlexNet, VGG, ResNet)"
                },
                {
                  "name": "2.2.4 Project: Image Classification using CNNs (e.g., CIFAR-10)"
                }
              ]
            },
            {
              "name": "2.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "2.3.1 Basic RNN Architecture"
                },
                {
                  "name": "2.3.2 LSTMs and GRUs"
                },
                {
                  "name": "2.3.3 Applications (NLP, Time Series Analysis)"
                },
                {
                  "name": "2.3.4 Project: Text Generation or Sentiment Analysis using RNNs"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Deep Learning Techniques",
          "children": [
            {
              "name": "3.1 Autoencoders and Generative Models",
              "children": [
                {
                  "name": "3.1.1 Variational Autoencoders (VAEs)"
                },
                {
                  "name": "3.1.2 Generative Adversarial Networks (GANs)"
                },
                {
                  "name": "3.1.3 Project: Image generation using GANs"
                }
              ]
            },
            {
              "name": "3.2 Deep Reinforcement Learning",
              "children": [
                {
                  "name": "3.2.1 Q-learning"
                },
                {
                  "name": "3.2.2 Deep Q-Networks (DQNs)"
                },
                {
                  "name": "3.2.3 Policy Gradients"
                },
                {
                  "name": "3.2.4 Project: Simple game playing using DQN"
                }
              ]
            },
            {
              "name": "3.3 Transfer Learning and Fine-tuning",
              "children": [
                {
                  "name": "3.3.1 Using pre-trained models"
                },
                {
                  "name": "3.3.2 Fine-tuning for specific tasks"
                },
                {
                  "name": "3.3.3 Domain Adaptation"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Optimization",
          "children": [
            {
              "name": "4.1 Model Deployment Strategies",
              "children": [
                {
                  "name": "4.1.1 Cloud platforms (AWS, GCP, Azure)"
                },
                {
                  "name": "4.1.2 Edge devices and mobile deployment"
                },
                {
                  "name": "4.1.3 Model Serving frameworks (TensorFlow Serving, TorchServe)"
                }
              ]
            },
            {
              "name": "4.2 Model Optimization Techniques",
              "children": [
                {
                  "name": "4.2.1 Pruning and Quantization"
                },
                {
                  "name": "4.2.2 Knowledge Distillation"
                },
                {
                  "name": "4.2.3 Model Compression"
                }
              ]
            },
            {
              "name": "4.3 Monitoring and Maintenance",
              "children": [
                {
                  "name": "4.3.1 Model Drift Detection"
                },
                {
                  "name": "4.3.2 Retraining and updating models"
                },
                {
                  "name": "4.3.3 Performance monitoring"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialized Deep Learning Areas (Choose One or More)",
          "children": [
            {
              "name": "5.1 Natural Language Processing (NLP)",
              "children": [
                {
                  "name": "5.1.1 Transformers and BERT"
                },
                {
                  "name": "5.1.2 Language Modeling"
                },
                {
                  "name": "5.1.3 Machine Translation"
                }
              ]
            },
            {
              "name": "5.2 Computer Vision",
              "children": [
                {
                  "name": "5.2.1 Object Detection"
                },
                {
                  "name": "5.2.2 Image Segmentation"
                },
                {
                  "name": "5.2.3 Video Processing"
                }
              ]
            },
            {
              "name": "5.3 Time Series Forecasting",
              "children": [
                {
                  "name": "5.3.1 Recurrent Neural Networks (RNNs) for time series"
                },
                {
                  "name": "5.3.2 Convolutional Neural Networks (CNNs) for time series"
                },
                {
                  "name": "5.3.3 Attention Mechanisms for time series"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Deep Learning Specialist roadmap",
    "output": {
      "name": "Deep Learning Specialist Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, and Linear Transformations"
                },
                {
                  "name": "1.1.2 Derivatives, Gradients, and Chain Rule"
                },
                {
                  "name": "1.1.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.2 Probability & Statistics",
              "children": [
                {
                  "name": "1.2.1 Probability Distributions"
                },
                {
                  "name": "1.2.2 Hypothesis Testing and Statistical Significance"
                },
                {
                  "name": "1.2.3 Bayesian Statistics (Optional, but recommended)"
                }
              ]
            },
            {
              "name": "1.3 Programming for Deep Learning",
              "children": [
                {
                  "name": "1.3.1 Python Fundamentals"
                },
                {
                  "name": "1.3.2 NumPy for Numerical Computing"
                },
                {
                  "name": "1.3.3 Pandas for Data Manipulation",
                  "children": []
                },
                {
                  "name": "1.3.4 Matplotlib & Seaborn for Data Visualization"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Deep Learning Concepts",
          "children": [
            {
              "name": "2.1 Neural Networks Fundamentals",
              "children": [
                {
                  "name": "2.1.1 Perceptrons and Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "2.1.2 Activation Functions (Sigmoid, ReLU, etc.)"
                },
                {
                  "name": "2.1.3 Backpropagation Algorithm"
                }
              ]
            },
            {
              "name": "2.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "2.2.1 Convolutional Layers and Pooling Layers"
                },
                {
                  "name": "2.2.2 Architectures (LeNet, AlexNet, VGG, ResNet)"
                },
                {
                  "name": "2.2.3 Applications in Image Classification and Object Detection",
                  "children": []
                }
              ]
            },
            {
              "name": "2.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "2.3.1 Basic RNNs, LSTMs, GRUs"
                },
                {
                  "name": "2.3.2 Applications in Natural Language Processing (NLP)"
                },
                {
                  "name": "2.3.3 Sequence-to-Sequence Models"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning Frameworks & Tools",
          "children": [
            {
              "name": "3.1 TensorFlow/Keras",
              "children": [
                {
                  "name": "3.1.1 Building and Training Models"
                },
                {
                  "name": "3.1.2 Data Preprocessing and Augmentation"
                },
                {
                  "name": "3.1.3 Model Deployment"
                }
              ]
            },
            {
              "name": "3.2 PyTorch",
              "children": [
                {
                  "name": "3.2.1 Building and Training Models"
                },
                {
                  "name": "3.2.2 Autograd and Computational Graphs"
                },
                {
                  "name": "3.2.3 Model Deployment"
                }
              ]
            },
            {
              "name": "3.3  Model Versioning and Experiment Tracking",
              "children": [
                {
                  "name": "3.3.1 MLflow"
                },
                {
                  "name": "3.3.2 Weights & Biases"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specialization",
          "children": [
            {
              "name": "4.1 Generative Adversarial Networks (GANs)",
              "children": [
                {
                  "name": "4.1.1 GAN Architectures and Training"
                },
                {
                  "name": "4.1.2 Applications in Image Generation and Synthesis"
                }
              ]
            },
            {
              "name": "4.2 Autoencoders and Variational Autoencoders (VAEs)",
              "children": [
                {
                  "name": "4.2.1 Dimensionality Reduction and Feature Extraction"
                },
                {
                  "name": "4.2.2 Applications in Anomaly Detection and Data Compression"
                }
              ]
            },
            {
              "name": "4.3  Deployment and MLOps",
              "children": [
                {
                  "name": "4.3.1 Containerization (Docker)"
                },
                {
                  "name": "4.3.2 Cloud Deployment (AWS SageMaker, Google Cloud AI Platform, Azure Machine Learning)"
                },
                {
                  "name": "4.3.3 Model Monitoring and Retraining"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Projects and Portfolio Building",
          "children": [
            {
              "name": "5.1 Image Classification Project (e.g., CIFAR-10, ImageNet)",
              "children": []
            },
            {
              "name": "5.2  Natural Language Processing Project (e.g., Sentiment Analysis, Text Generation)",
              "children": []
            },
            {
              "name": "5.3  Time Series Forecasting Project",
              "children": []
            },
            {
              "name": "5.4  Contribute to Open Source Projects",
              "children": []
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a Deep Learning Specialist",
    "output": {
      "name": "How to Become a Deep Learning Specialist",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra & Calculus",
              "children": [
                {
                  "name": "1.1.1 Vectors, Matrices, and Linear Transformations"
                },
                {
                  "name": "1.1.2 Derivatives, Gradients, and Chain Rule"
                },
                {
                  "name": "1.1.3 Optimization Techniques (Gradient Descent)"
                }
              ]
            },
            {
              "name": "1.2 Probability & Statistics",
              "children": [
                {
                  "name": "1.2.1 Probability Distributions (Normal, Binomial, etc.)"
                },
                {
                  "name": "1.2.2 Hypothesis Testing and Statistical Significance"
                },
                {
                  "name": "1.2.3 Bayesian Statistics (Optional, but beneficial)"
                }
              ]
            },
            {
              "name": "1.3 Programming Fundamentals (Python)",
              "children": [
                {
                  "name": "1.3.1 Data Structures (Lists, Dictionaries, Arrays)"
                },
                {
                  "name": "1.3.2 Object-Oriented Programming"
                },
                {
                  "name": "1.3.3 NumPy, Pandas for Data Manipulation",
                  "children": [
                    {
                      "name": "Project: Data cleaning and preprocessing exercise using a real-world dataset"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (SVM, Decision Trees)"
                },
                {
                  "name": "2.1.3 Model Evaluation Metrics (Accuracy, Precision, Recall)"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-means, DBSCAN)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "Project: Implement a clustering algorithm on a dataset and evaluate its performance"
                }
              ]
            },
            {
              "name": "2.3 Model Selection and Evaluation",
              "children": [
                {
                  "name": "2.3.1 Cross-validation"
                },
                {
                  "name": "2.3.2 Hyperparameter Tuning"
                },
                {
                  "name": "2.3.3 Bias-Variance Tradeoff"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning Core Concepts",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptrons and Multilayer Perceptrons (MLPs)"
                },
                {
                  "name": "3.1.2 Activation Functions (Sigmoid, ReLU, etc.)"
                },
                {
                  "name": "3.1.3 Backpropagation Algorithm"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "3.2.1 Convolutional Layers, Pooling Layers"
                },
                {
                  "name": "3.2.2 Applications in Image Recognition and Object Detection"
                },
                {
                  "name": "Project: Build a CNN for image classification using a dataset like CIFAR-10 or MNIST"
                }
              ]
            },
            {
              "name": "3.3 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "3.3.1 LSTMs and GRUs"
                },
                {
                  "name": "3.3.2 Applications in Natural Language Processing"
                },
                {
                  "name": "Project: Build an RNN for text generation or sentiment analysis"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Deep Learning & Specialization",
          "children": [
            {
              "name": "4.1 Generative Adversarial Networks (GANs)",
              "children": [
                {
                  "name": "4.1.1 Generator and Discriminator Networks"
                },
                {
                  "name": "4.1.2 Training GANs and common issues"
                },
                {
                  "name": "Project: Train a GAN for image generation"
                }
              ]
            },
            {
              "name": "4.2 Autoencoders & Variational Autoencoders (VAEs)",
              "children": [
                {
                  "name": "4.2.1 Dimensionality Reduction and Feature Extraction"
                },
                {
                  "name": "4.2.2 Generative capabilities of VAEs"
                },
                {
                  "name": "Project: Build an autoencoder for image compression or anomaly detection"
                }
              ]
            },
            {
              "name": "4.3 Deep Reinforcement Learning (Optional)",
              "children": [
                {
                  "name": "4.3.1 Q-learning and Deep Q-Networks (DQNs)"
                },
                {
                  "name": "4.3.2 Policy Gradient methods"
                },
                {
                  "name": "Project: Implement a DQN for a simple game environment"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment & Practical Skills",
          "children": [
            {
              "name": "5.1 Cloud Computing (AWS, GCP, Azure)",
              "children": [
                {
                  "name": "5.1.1 Setting up cloud instances for deep learning"
                },
                {
                  "name": "5.1.2 Utilizing cloud-based deep learning frameworks"
                },
                {
                  "name": "5.1.3 Deploying models using cloud services"
                }
              ]
            },
            {
              "name": "5.2 Model Optimization & Deployment",
              "children": [
                {
                  "name": "5.2.1 Model compression techniques"
                },
                {
                  "name": "5.2.2 Quantization and pruning"
                },
                {
                  "name": "5.2.3 Deployment to edge devices (if applicable)"
                }
              ]
            },
            {
              "name": "5.3 Version Control and Collaboration",
              "children": [
                {
                  "name": "5.3.1 Git and GitHub"
                },
                {
                  "name": "5.3.2 Collaborative coding practices"
                },
                {
                  "name": "5.3.3 Documentation and reporting"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn Deep Learning",
    "output": {
      "name": "How to Learn Deep Learning",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Linear Algebra",
              "children": [
                {
                  "name": "1.1.1 Vectors and Matrices"
                },
                {
                  "name": "1.1.2 Matrix Operations"
                },
                {
                  "name": "1.1.3 Eigenvalues and Eigenvectors"
                }
              ]
            },
            {
              "name": "1.2 Calculus",
              "children": [
                {
                  "name": "1.2.1 Derivatives and Gradients"
                },
                {
                  "name": "1.2.2 Chain Rule"
                },
                {
                  "name": "1.2.3 Partial Derivatives"
                }
              ]
            },
            {
              "name": "1.3 Probability and Statistics",
              "children": [
                {
                  "name": "1.3.1 Probability Distributions"
                },
                {
                  "name": "1.3.2 Statistical Inference"
                },
                {
                  "name": "1.3.3 Hypothesis Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Machine Learning Fundamentals",
          "children": [
            {
              "name": "2.1 Supervised Learning",
              "children": [
                {
                  "name": "2.1.1 Regression (Linear, Logistic)"
                },
                {
                  "name": "2.1.2 Classification (SVM, Decision Trees)"
                },
                {
                  "name": "2.1.3 Model Evaluation Metrics"
                }
              ]
            },
            {
              "name": "2.2 Unsupervised Learning",
              "children": [
                {
                  "name": "2.2.1 Clustering (K-means, Hierarchical)"
                },
                {
                  "name": "2.2.2 Dimensionality Reduction (PCA)"
                },
                {
                  "name": "2.2.3 Anomaly Detection"
                }
              ]
            },
            {
              "name": "2.3 Model Selection and Evaluation",
              "children": [
                {
                  "name": "2.3.1 Cross-validation"
                },
                {
                  "name": "2.3.2 Bias-Variance Tradeoff"
                },
                {
                  "name": "2.3.3 Hyperparameter Tuning"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Introduction to Deep Learning",
          "children": [
            {
              "name": "3.1 Neural Networks",
              "children": [
                {
                  "name": "3.1.1 Perceptrons"
                },
                {
                  "name": "3.1.2 Multilayer Perceptrons (MLP)"
                },
                {
                  "name": "3.1.3 Activation Functions (Sigmoid, ReLU)"
                }
              ]
            },
            {
              "name": "3.2 Backpropagation",
              "children": [
                {
                  "name": "3.2.1 Gradient Descent"
                },
                {
                  "name": "3.2.2 Stochastic Gradient Descent (SGD)"
                },
                {
                  "name": "3.2.3 Optimization Algorithms (Adam, RMSprop)"
                }
              ]
            },
            {
              "name": "3.3 Practical Project:  Simple Image Classification (MNIST)",
              "children": []
            }
          ]
        },
        {
          "name": "4. Advanced Deep Learning",
          "children": [
            {
              "name": "4.1 Convolutional Neural Networks (CNNs)",
              "children": [
                {
                  "name": "4.1.1 Convolutional Layers"
                },
                {
                  "name": "4.1.2 Pooling Layers"
                },
                {
                  "name": "4.1.3 Architectures (AlexNet, VGG, ResNet)"
                }
              ]
            },
            {
              "name": "4.2 Recurrent Neural Networks (RNNs)",
              "children": [
                {
                  "name": "4.2.1 LSTMs"
                },
                {
                  "name": "4.2.2 GRUs"
                },
                {
                  "name": "4.2.3 Applications in NLP"
                }
              ]
            },
            {
              "name": "4.3 Practical Project: Image Classification with CNNs (CIFAR-10)",
              "children": []
            }
          ]
        },
        {
          "name": "5. Deployment and Further Learning",
          "children": [
            {
              "name": "5.1 Model Deployment",
              "children": [
                {
                  "name": "5.1.1 Cloud Platforms (AWS, Google Cloud, Azure)"
                },
                {
                  "name": "5.1.2 API Development"
                },
                {
                  "name": "5.1.3 Model Optimization for Deployment"
                }
              ]
            },
            {
              "name": "5.2 Advanced Topics",
              "children": [
                {
                  "name": "5.2.1 Generative Adversarial Networks (GANs)"
                },
                {
                  "name": "5.2.2 Autoencoders"
                },
                {
                  "name": "5.2.3 Reinforcement Learning"
                }
              ]
            },
            {
              "name": "5.3 Continuous Learning",
              "children": [
                {
                  "name": "5.3.1 Following Research Papers"
                },
                {
                  "name": "5.3.2 Engaging with the Community"
                },
                {
                  "name": "5.3.3 Participating in Competitions (Kaggle)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn Speech recognition",
    "output": {
      "name": "How to Learn Speech Recognition",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Sound Waves and Digital Audio"
                },
                {
                  "name": "1.1.2 Acoustic Phonetics"
                },
                {
                  "name": "1.1.3 Speech Signal Processing Basics (Sampling, Quantization)"
                }
              ]
            },
            {
              "name": "1.2 Introduction to Speech Recognition Systems",
              "children": [
                {
                  "name": "1.2.1 Feature Extraction (MFCCs, PLP)"
                },
                {
                  "name": "1.2.2 Hidden Markov Models (HMMs)"
                },
                {
                  "name": "1.2.3 Acoustic Modeling"
                }
              ]
            },
            {
              "name": "1.3 Basic Python Programming for Speech",
              "children": [
                {
                  "name": "1.3.1 Libraries (Librosa, PyDub, SpeechRecognition)"
                },
                {
                  "name": "1.3.2 Audio File I/O"
                },
                {
                  "name": "1.3.3 Basic Signal Processing in Python (Project: Noise Reduction)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate Techniques",
          "children": [
            {
              "name": "2.1 Advanced Signal Processing",
              "children": [
                {
                  "name": "2.1.1 Windowing Techniques"
                },
                {
                  "name": "2.1.2 Filter Design (Project: Implementing a Bandpass Filter)"
                },
                {
                  "name": "2.1.3 Spectral Subtraction"
                }
              ]
            },
            {
              "name": "2.2 Language Modeling",
              "children": [
                {
                  "name": "2.2.1 N-grams"
                },
                {
                  "name": "2.2.2 Hidden Markov Models (HMMs) for Language Modeling"
                },
                {
                  "name": "2.2.3 Practical implementation with NLTK (Project: Build a simple language model)"
                }
              ]
            },
            {
              "name": "2.3 Deep Learning for Speech Recognition",
              "children": [
                {
                  "name": "2.3.1 Recurrent Neural Networks (RNNs), LSTMs, GRUs"
                },
                {
                  "name": "2.3.2 Connectionist Temporal Classification (CTC)"
                },
                {
                  "name": "2.3.3 Introduction to TensorFlow/PyTorch for Speech (Project: Build a simple RNN based ASR system)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Topics",
          "children": [
            {
              "name": "3.1 Deep Neural Networks for ASR",
              "children": [
                {
                  "name": "3.1.1 Convolutional Neural Networks (CNNs) for Speech"
                },
                {
                  "name": "3.1.2 Hybrid CNN-RNN Architectures"
                },
                {
                  "name": "3.1.3 Attention Mechanisms"
                }
              ]
            },
            {
              "name": "3.2 Speech Enhancement and Noise Reduction",
              "children": [
                {
                  "name": "3.2.1 Advanced Noise Reduction Techniques (Spectral Subtraction, Wiener Filtering)"
                },
                {
                  "name": "3.2.2 Deep Learning Based Noise Suppression"
                },
                {
                  "name": "3.2.3 Dereverberation"
                }
              ]
            },
            {
              "name": "3.3 Speaker Recognition and Diarization",
              "children": [
                {
                  "name": "3.3.1 i-vector and x-vector embeddings"
                },
                {
                  "name": "3.3.2 Speaker Change Detection"
                },
                {
                  "name": "3.3.3 Advanced Diarization techniques"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Evaluation",
          "children": [
            {
              "name": "4.1 System Evaluation Metrics",
              "children": [
                {
                  "name": "4.1.1 Word Error Rate (WER)"
                },
                {
                  "name": "4.1.2 Precision, Recall, F1-score"
                },
                {
                  "name": "4.1.3 Evaluating on different datasets"
                }
              ]
            },
            {
              "name": "4.2 Deployment Strategies",
              "children": [
                {
                  "name": "4.2.1 Cloud-based deployment (AWS, Google Cloud)"
                },
                {
                  "name": "4.2.2 On-device deployment (mobile, embedded systems)"
                },
                {
                  "name": "4.2.3 Optimizing for latency and resource usage"
                }
              ]
            },
            {
              "name": "4.3 Real-world Applications",
              "children": [
                {
                  "name": "4.3.1 Voice Assistants"
                },
                {
                  "name": "4.3.2 Dictation Software"
                },
                {
                  "name": "4.3.3 Accessibility Technologies"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Projects and Research",
          "children": [
            {
              "name": "5.1 Low-resource Speech Recognition",
              "children": [
                {
                  "name": "5.1.1 Data augmentation techniques"
                },
                {
                  "name": "5.1.2 Transfer learning approaches"
                },
                {
                  "name": "5.1.3 Cross-lingual speech recognition"
                }
              ]
            },
            {
              "name": "5.2 Robust Speech Recognition",
              "children": [
                {
                  "name": "5.2.1 Dealing with noise and reverberation"
                },
                {
                  "name": "5.2.2 Speaker adaptation techniques"
                },
                {
                  "name": "5.2.3 Developing robust acoustic models"
                }
              ]
            },
            {
              "name": "5.3 Exploring cutting-edge research",
              "children": [
                {
                  "name": "5.3.1 Reading latest papers and publications"
                },
                {
                  "name": "5.3.2 Contributing to open-source projects"
                },
                {
                  "name": "5.3.3 Participating in research communities"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Speech recognition engineer",
    "output": {
      "name": "Speech Recognition Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Acoustics and Phonetics"
                },
                {
                  "name": "1.1.2 Signal Processing Fundamentals"
                },
                {
                  "name": "1.1.3 Digital Signal Processing (DSP) basics"
                }
              ]
            },
            {
              "name": "1.2 Speech Signal Processing",
              "children": [
                {
                  "name": "1.2.1 Pre-processing techniques (Windowing, Framing)"
                },
                {
                  "name": "1.2.2 Feature Extraction (MFCCs, PLP)"
                },
                {
                  "name": "1.2.3 Project: Build a basic audio feature extractor"
                }
              ]
            },
            {
              "name": "1.3 Linear Algebra and Probability",
              "children": [
                {
                  "name": "1.3.1 Matrix Operations, Linear Transformations"
                },
                {
                  "name": "1.3.2 Probability distributions (Gaussian, etc.)"
                },
                {
                  "name": "1.3.3 Hidden Markov Models (HMMs) Introduction"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Acoustic Modeling",
          "children": [
            {
              "name": "2.1 Hidden Markov Models (HMMs)",
              "children": [
                {
                  "name": "2.1.1 HMM theory and algorithms (Forward-Backward, Viterbi)"
                },
                {
                  "name": "2.1.2 HMM training techniques (Baum-Welch)"
                },
                {
                  "name": "2.1.3 Project: Implement a simple HMM-based speech recognizer"
                }
              ]
            },
            {
              "name": "2.2 Deep Learning for Speech Recognition",
              "children": [
                {
                  "name": "2.2.1 Introduction to Neural Networks"
                },
                {
                  "name": "2.2.2 Recurrent Neural Networks (RNNs), LSTMs, GRUs"
                },
                {
                  "name": "2.2.3 Connectionist Temporal Classification (CTC)"
                }
              ]
            },
            {
              "name": "2.3 Acoustic Model Training",
              "children": [
                {
                  "name": "2.3.1 Data Augmentation techniques"
                },
                {
                  "name": "2.3.2 Model evaluation metrics (WER, PER)"
                },
                {
                  "name": "2.3.3 Project: Train an acoustic model using a public dataset (e.g., LibriSpeech)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Language Modeling",
          "children": [
            {
              "name": "3.1 N-gram Language Models",
              "children": [
                {
                  "name": "3.1.1 Smoothing techniques (Laplace, Good-Turing)"
                },
                {
                  "name": "3.1.2 N-gram model evaluation"
                },
                {
                  "name": "3.1.3 Project: Build an N-gram language model"
                }
              ]
            },
            {
              "name": "3.2 Neural Language Models",
              "children": [
                {
                  "name": "3.2.1 Recurrent Neural Networks (RNNs) for language modeling"
                },
                {
                  "name": "3.2.2 Transformer Networks"
                },
                {
                  "name": "3.2.3 Project: Train a neural language model"
                }
              ]
            },
            {
              "name": "3.3 Language Model Integration",
              "children": [
                {
                  "name": "3.3.1 Beam Search Decoding"
                },
                {
                  "name": "3.3.2 Language model rescoring"
                },
                {
                  "name": "3.3.3 Project: Integrate a language model with an acoustic model"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics and Deployment",
          "children": [
            {
              "name": "4.1 Advanced Acoustic Modeling",
              "children": [
                {
                  "name": "4.1.1 Attention-based models"
                },
                {
                  "name": "4.1.2 Multi-lingual and cross-lingual speech recognition"
                },
                {
                  "name": "4.1.3 Low-resource speech recognition"
                }
              ]
            },
            {
              "name": "4.2 Deployment and Optimization",
              "children": [
                {
                  "name": "4.2.1 Model quantization and compression"
                },
                {
                  "name": "4.2.2 Real-time speech recognition systems"
                },
                {
                  "name": "4.2.3 Cloud-based deployment (AWS, Google Cloud, Azure)"
                }
              ]
            },
            {
              "name": "4.3 Evaluation and Metrics",
              "children": [
                {
                  "name": "4.3.1 Detailed analysis of WER and PER"
                },
                {
                  "name": "4.3.2 Human evaluation of speech recognition systems"
                },
                {
                  "name": "4.3.3 Advanced metrics for different speech recognition tasks"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Speech recognition engineer roadmap",
    "output": {
      "name": "Speech Recognition Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Signal Processing Fundamentals",
              "children": [
                {
                  "name": "1.1.1 Digital Signal Processing (DSP): Basics"
                },
                {
                  "name": "1.1.2 Fourier Transforms and Spectral Analysis"
                },
                {
                  "name": "1.1.3 Filtering Techniques (FIR, IIR)"
                }
              ]
            },
            {
              "name": "1.2 Acoustics and Phonetics",
              "children": [
                {
                  "name": "1.2.1 Speech Production Mechanisms"
                },
                {
                  "name": "1.2.2 Phonetic Transcription and Analysis"
                },
                {
                  "name": "1.2.3 Acoustic Phonetics and Speech Features"
                }
              ]
            },
            {
              "name": "1.3 Linear Algebra and Probability",
              "children": [
                {
                  "name": "1.3.1 Linear Algebra (Vectors, Matrices, Eigenvalues)"
                },
                {
                  "name": "1.3.2 Probability and Statistics (Distributions, Bayesian Inference)"
                },
                {
                  "name": "1.3.3 Practical Exercise: Implement basic statistical measures in Python"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Speech Recognition Techniques",
          "children": [
            {
              "name": "2.1 Hidden Markov Models (HMMs)",
              "children": [
                {
                  "name": "2.1.1 HMM Fundamentals (States, Transitions, Observations)"
                },
                {
                  "name": "2.1.2 HMM Training Algorithms (Baum-Welch, Viterbi)"
                },
                {
                  "name": "2.1.3 Practical Exercise: Implement a simple HMM in Python using a library like hmmlearn"
                }
              ]
            },
            {
              "name": "2.2 Acoustic Modeling",
              "children": [
                {
                  "name": "2.2.1 Gaussian Mixture Models (GMMs)"
                },
                {
                  "name": "2.2.2 Deep Neural Networks (DNNs) for Acoustic Modeling"
                },
                {
                  "name": "2.2.3 Connectionist Temporal Classification (CTC)"
                }
              ]
            },
            {
              "name": "2.3 Language Modeling",
              "children": [
                {
                  "name": "2.3.1 N-gram Language Models"
                },
                {
                  "name": "2.3.2 Recurrent Neural Networks (RNNs) for Language Modeling (LSTMs, GRUs)"
                },
                {
                  "name": "2.3.3 Practical Exercise: Train an N-gram language model using NLTK"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Deep Learning for Speech Recognition",
          "children": [
            {
              "name": "3.1 Recurrent Neural Networks (RNNs) for ASR",
              "children": [
                {
                  "name": "3.1.1 LSTM and GRU Architectures"
                },
                {
                  "name": "3.1.2 Sequence-to-Sequence Models"
                },
                {
                  "name": "3.1.3 Practical Exercise: Build a simple RNN-based ASR model using TensorFlow/PyTorch"
                }
              ]
            },
            {
              "name": "3.2 Convolutional Neural Networks (CNNs) for ASR",
              "children": [
                {
                  "name": "3.2.1 CNN Architectures for Speech"
                },
                {
                  "name": "3.2.2 Combining CNNs and RNNs"
                },
                {
                  "name": "3.2.3 Practical Exercise: Implement a CNN-based feature extractor"
                }
              ]
            },
            {
              "name": "3.3 Transformer Networks for ASR",
              "children": [
                {
                  "name": "3.3.1 Attention Mechanisms"
                },
                {
                  "name": "3.3.2 Transformer Architecture for Speech"
                },
                {
                  "name": "3.3.3 Practical Exercise: Fine-tune a pre-trained Transformer model for ASR"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics and Deployment",
          "children": [
            {
              "name": "4.1 Large-Scale Speech Recognition Systems",
              "children": [
                {
                  "name": "4.1.1 Distributed Training"
                },
                {
                  "name": "4.1.2 System Optimization and Scaling"
                }
              ]
            },
            {
              "name": "4.2 Speech Enhancement and Noise Reduction",
              "children": [
                {
                  "name": "4.2.1 Spectral Subtraction"
                },
                {
                  "name": "4.2.2 Wiener Filtering"
                },
                {
                  "name": "4.2.3 Deep Learning-based Noise Reduction"
                }
              ]
            },
            {
              "name": "4.3 Deployment and Real-World Considerations",
              "children": [
                {
                  "name": "4.3.1 Cloud-based Deployment"
                },
                {
                  "name": "4.3.2 Embedded Systems Deployment"
                },
                {
                  "name": "4.3.3 Real-time constraints and latency optimization"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Practical Projects & Portfolio Building",
          "children": [
            {
              "name": "5.1 Build a simple speech-to-text application",
              "children": []
            },
            {
              "name": "5.2 Create a keyword spotting system",
              "children": []
            },
            {
              "name": "5.3 Develop a speech emotion recognition system",
              "children": []
            },
            {
              "name": "5.4 Contribute to an open-source speech recognition project",
              "children": []
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Reinforcement learning engineer",
    "output": {
      "name": "Reinforcement Learning Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Markov Decision Processes (MDPs)"
                },
                {
                  "name": "1.1.2 Bellman Equations"
                },
                {
                  "name": "1.1.3 Dynamic Programming (Value Iteration, Policy Iteration)"
                },
                {
                  "name": "1.1.4 Project: Implement Value and Policy Iteration for a simple grid world"
                }
              ]
            },
            {
              "name": "1.2 Reinforcement Learning Algorithms",
              "children": [
                {
                  "name": "1.2.1 Monte Carlo Methods"
                },
                {
                  "name": "1.2.2 Temporal Difference Learning (SARSA, Q-learning)"
                },
                {
                  "name": "1.2.3 Project: Implement Q-learning for a simple game (e.g., Taxi-v3)"
                }
              ]
            },
            {
              "name": "1.3 Python for RL",
              "children": [
                {
                  "name": "1.3.1 NumPy for numerical computation"
                },
                {
                  "name": "1.3.2 Pandas for data manipulation"
                },
                {
                  "name": "1.3.3 Matplotlib/Seaborn for visualization"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Deep Reinforcement Learning",
          "children": [
            {
              "name": "2.1 Deep Q-Networks (DQN)",
              "children": [
                {
                  "name": "2.1.1 Experience Replay"
                },
                {
                  "name": "2.1.2 Target Networks"
                },
                {
                  "name": "2.1.3 Project: Implement DQN for Atari games using a library like PyTorch or TensorFlow"
                }
              ]
            },
            {
              "name": "2.2 Policy Gradient Methods",
              "children": [
                {
                  "name": "2.2.1 REINFORCE"
                },
                {
                  "name": "2.2.2 Actor-Critic Methods (A2C, A3C)"
                },
                {
                  "name": "2.2.3 Project: Implement A2C for a continuous control environment (e.g., CartPole-v1)"
                }
              ]
            },
            {
              "name": "2.3 Advanced Deep RL",
              "children": [
                {
                  "name": "2.3.1 Proximal Policy Optimization (PPO)"
                },
                {
                  "name": "2.3.2 Trust Region Policy Optimization (TRPO)"
                },
                {
                  "name": "2.3.3 Project: Compare PPO and A2C on a challenging environment"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Model-Based RL",
          "children": [
            {
              "name": "3.1 Dyna-Q",
              "children": [
                {
                  "name": "3.1.1 Planning with a Model"
                },
                {
                  "name": "3.1.2 Project: Implement Dyna-Q for a grid world"
                }
              ]
            },
            {
              "name": "3.2 World Models",
              "children": [
                {
                  "name": "3.2.1 Variational Autoencoders (VAEs) for state representation"
                },
                {
                  "name": "3.2.2 Recurrent Neural Networks (RNNs) for world dynamics"
                },
                {
                  "name": "3.2.3 Project: Build a simple world model and use it for planning"
                }
              ]
            }
          ]
        },
        {
          "name": "4. RL Engineering Practices",
          "children": [
            {
              "name": "4.1 Hyperparameter Tuning",
              "children": [
                {
                  "name": "4.1.1 Grid Search"
                },
                {
                  "name": "4.1.2 Random Search"
                },
                {
                  "name": "4.1.3 Bayesian Optimization"
                }
              ]
            },
            {
              "name": "4.2 Debugging and Monitoring",
              "children": [
                {
                  "name": "4.2.1 Tensorboard for visualization"
                },
                {
                  "name": "4.2.2 Common RL issues and troubleshooting"
                }
              ]
            },
            {
              "name": "4.3 Deployment and Scalability",
              "children": [
                {
                  "name": "4.3.1 Cloud computing platforms (AWS, GCP, Azure)"
                },
                {
                  "name": "4.3.2 Distributed RL"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics & Applications",
          "children": [
            {
              "name": "5.1 Multi-Agent Reinforcement Learning (MARL)",
              "children": [
                {
                  "name": "5.1.1 Cooperative and Competitive MARL"
                },
                {
                  "name": "5.1.2 Project: Implement a simple MARL game"
                }
              ]
            },
            {
              "name": "5.2 Transfer Learning in RL",
              "children": [
                {
                  "name": "5.2.1 Domain adaptation"
                },
                {
                  "name": "5.2.2 Policy transfer"
                }
              ]
            },
            {
              "name": "5.3 RL in Robotics",
              "children": [
                {
                  "name": "5.3.1 Robot control using RL"
                },
                {
                  "name": "5.3.2 Sim-to-real transfer"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Wordpress developer",
    "output": {
      "name": "Wordpress Developer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Web Fundamentals",
              "children": [
                {
                  "name": "1.1.1 HTML, CSS, and JavaScript Basics"
                },
                {
                  "name": "1.1.2 Understanding HTTP Requests and Responses"
                },
                {
                  "name": "1.1.3 Version Control with Git (GitHub/GitLab)"
                }
              ]
            },
            {
              "name": "1.2 WordPress Core Concepts",
              "children": [
                {
                  "name": "1.2.1 WordPress Architecture: Themes, Plugins, Database"
                },
                {
                  "name": "1.2.2 Understanding WordPress File Structure"
                },
                {
                  "name": "1.2.3 Setting up a Local Development Environment (e.g., LocalWP, XAMPP)"
                }
              ]
            },
            {
              "name": "1.3 PHP Fundamentals",
              "children": [
                {
                  "name": "1.3.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.3.2 Control Structures (if/else, loops)"
                },
                {
                  "name": "1.3.3 Functions and Arrays"
                },
                {
                  "name": "1.3.4 Project: Build a simple PHP script to interact with a database"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Theme Development",
          "children": [
            {
              "name": "2.1 Theme Structure and Files",
              "children": [
                {
                  "name": "2.1.1 Understanding `functions.php`, `style.css`, and template files"
                },
                {
                  "name": "2.1.2 Creating child themes for customization"
                },
                {
                  "name": "2.1.3 Project: Create a basic WordPress theme from scratch"
                }
              ]
            },
            {
              "name": "2.2 Template Hierarchy and Custom Templates",
              "children": [
                {
                  "name": "2.2.1 Understanding how WordPress selects templates"
                },
                {
                  "name": "2.2.2 Creating custom page templates and single post templates"
                },
                {
                  "name": "2.2.3 Project:  Create a custom page template for a landing page."
                }
              ]
            },
            {
              "name": "2.3 Theme Customization with WordPress APIs",
              "children": [
                {
                  "name": "2.3.1 Using WordPress actions and filters"
                },
                {
                  "name": "2.3.2 Creating custom post types and taxonomies"
                },
                {
                  "name": "2.3.3 Project: Add a custom post type for a portfolio with custom fields"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Plugin Development",
          "children": [
            {
              "name": "3.1 Plugin Structure and Boilerplate",
              "children": [
                {
                  "name": "3.1.1 Creating a basic plugin structure"
                },
                {
                  "name": "3.1.2 Understanding plugin activation and deactivation hooks"
                },
                {
                  "name": "3.1.3 Project: Create a simple plugin that adds a custom menu item"
                }
              ]
            },
            {
              "name": "3.2 Working with WordPress Database",
              "children": [
                {
                  "name": "3.2.1 Using WordPress Database API (wpdb)"
                },
                {
                  "name": "3.2.2 Creating custom database tables"
                },
                {
                  "name": "3.2.3 Project:  Create a plugin that stores and retrieves data from a custom database table"
                }
              ]
            },
            {
              "name": "3.3 Advanced Plugin Concepts",
              "children": [
                {
                  "name": "3.3.1 Implementing options pages and settings"
                },
                {
                  "name": "3.3.2  Using AJAX for asynchronous operations"
                },
                {
                  "name": "3.3.3 Project: Create a plugin with an options page to configure settings"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Techniques",
          "children": [
            {
              "name": "4.1 Security Best Practices",
              "children": [
                {
                  "name": "4.1.1 Input sanitization and validation"
                },
                {
                  "name": "4.1.2 Preventing common WordPress vulnerabilities (SQL injection, XSS)"
                },
                {
                  "name": "4.1.3 Implementing secure authentication and authorization"
                }
              ]
            },
            {
              "name": "4.2 Performance Optimization",
              "children": [
                {
                  "name": "4.2.1 Optimizing database queries"
                },
                {
                  "name": "4.2.2 Caching techniques"
                },
                {
                  "name": "4.2.3 Image optimization and lazy loading"
                }
              ]
            },
            {
              "name": "4.3 Working with APIs and External Services",
              "children": [
                {
                  "name": "4.3.1 Integrating with payment gateways"
                },
                {
                  "name": "4.3.2 Using REST API for data exchange"
                },
                {
                  "name": "4.3.3 Project: Integrate a payment gateway into a WordPress plugin"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Deployment and Maintenance",
          "children": [
            {
              "name": "5.1 Deployment to a Live Server",
              "children": [
                {
                  "name": "5.1.1 Using FTP or Git for deployment"
                },
                {
                  "name": "5.1.2 Setting up a staging environment"
                },
                {
                  "name": "5.1.3 Project: Deploy a WordPress theme or plugin to a live server"
                }
              ]
            },
            {
              "name": "5.2 WordPress Maintenance and Updates",
              "children": [
                {
                  "name": "5.2.1 Regularly updating WordPress core, themes, and plugins"
                },
                {
                  "name": "5.2.2 Performing backups"
                },
                {
                  "name": "5.2.3 Monitoring website performance and security"
                }
              ]
            },
            {
              "name": "5.3 Client Communication and Project Management",
              "children": [
                {
                  "name": "5.3.1 Effective communication with clients"
                },
                {
                  "name": "5.3.2 Project scoping and time management"
                },
                {
                  "name": "5.3.3 Using project management tools"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Wordpress developer roadmap",
    "output": {
      "name": "Wordpress Developer Roadmap",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Web Fundamentals",
              "children": [
                {
                  "name": "1.1.1 HTML, CSS, JavaScript Basics"
                },
                {
                  "name": "1.1.2 Understanding HTTP requests and responses"
                },
                {
                  "name": "1.1.3 Version Control with Git (GitHub/GitLab)"
                },
                {
                  "name": "1.1.3 Exercise: Build a simple static website."
                }
              ]
            },
            {
              "name": "1.2 PHP Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Variables, Data Types, Operators"
                },
                {
                  "name": "1.2.2 Control Structures (if/else, loops)"
                },
                {
                  "name": "1.2.3 Functions and Arrays"
                },
                {
                  "name": "1.2.4 Object-Oriented Programming (OOP) basics"
                },
                {
                  "name": "1.2.5 Exercise: Create a simple PHP script to interact with a database."
                }
              ]
            },
            {
              "name": "1.3 WordPress Core Concepts",
              "children": [
                {
                  "name": "1.3.1 Understanding WordPress architecture (themes, plugins, core files)"
                },
                {
                  "name": "1.3.2 WordPress Database structure"
                },
                {
                  "name": "1.3.3 Setting up a local WordPress development environment (e.g., Local, XAMPP)"
                },
                {
                  "name": "1.3.4 WordPress Codex and its resources."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Theme Development",
          "children": [
            {
              "name": "2.1 Theme Structure and Files",
              "children": [
                {
                  "name": "2.1.1 Understanding the theme's `functions.php` file"
                },
                {
                  "name": "2.1.2 Using WordPress template hierarchy"
                },
                {
                  "name": "2.1.3 Creating custom templates and page templates"
                },
                {
                  "name": "2.1.4 Exercise: Create a child theme and customize the header."
                }
              ]
            },
            {
              "name": "2.2 Theme Customization",
              "children": [
                {
                  "name": "2.2.1 Customizing WordPress loop"
                },
                {
                  "name": "2.2.2 Using WordPress functions (e.g., `wp_enqueue_script`, `wp_enqueue_style`)"
                },
                {
                  "name": "2.2.3 Creating custom post types and taxonomies"
                },
                {
                  "name": "2.2.4 Exercise: Create a custom post type for a portfolio."
                }
              ]
            },
            {
              "name": "2.3 Advanced Theme Development",
              "children": [
                {
                  "name": "2.3.1 Theme Options (using Customizer or plugin)"
                },
                {
                  "name": "2.3.2 Implementing advanced layout techniques (grid systems, responsive design)"
                },
                {
                  "name": "2.3.3 Optimizing theme performance"
                },
                {
                  "name": "2.3.4 Exercise: Build a fully functional WordPress theme."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Plugin Development",
          "children": [
            {
              "name": "3.1 Plugin Structure and Files",
              "children": [
                {
                  "name": "3.1.1 Creating a basic plugin"
                },
                {
                  "name": "3.1.2 Understanding plugin activation and deactivation hooks"
                },
                {
                  "name": "3.1.3 Using WordPress actions and filters"
                },
                {
                  "name": "3.1.4 Exercise: Create a plugin to add a custom widget."
                }
              ]
            },
            {
              "name": "3.2 Plugin Functionality",
              "children": [
                {
                  "name": "3.2.1 Working with the WordPress database"
                },
                {
                  "name": "3.2.2 Creating custom admin pages and settings"
                },
                {
                  "name": "3.2.3 Handling user input and validation"
                },
                {
                  "name": "3.2.4 Exercise: Create a plugin to manage custom user roles."
                }
              ]
            },
            {
              "name": "3.3 Advanced Plugin Development",
              "children": [
                {
                  "name": "3.3.1 Security best practices for plugin development"
                },
                {
                  "name": "3.3.2 Internationalization (i18n) and localization (l10n)"
                },
                {
                  "name": "3.3.3 Testing and debugging plugins"
                },
                {
                  "name": "3.3.4 Exercise: Develop a complete plugin with multiple functionalities."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Deployment and Maintenance",
          "children": [
            {
              "name": "4.1 Setting up a hosting environment",
              "children": [
                {
                  "name": "4.1.1 Choosing a hosting provider"
                },
                {
                  "name": "4.1.2 Setting up a staging environment"
                },
                {
                  "name": "4.1.3 Deploying a WordPress website using different methods (FTP, Git, etc.)"
                }
              ]
            },
            {
              "name": "4.2 WordPress Security",
              "children": [
                {
                  "name": "4.2.1 Implementing security best practices"
                },
                {
                  "name": "4.2.2 Using security plugins"
                },
                {
                  "name": "4.2.3 Regular backups and site maintenance"
                }
              ]
            },
            {
              "name": "4.3 Performance Optimization",
              "children": [
                {
                  "name": "4.3.1 Caching techniques"
                },
                {
                  "name": "4.3.2 Image optimization"
                },
                {
                  "name": "4.3.3 Database optimization"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Advanced Topics",
          "children": [
            {
              "name": "5.1 REST API",
              "children": [
                {
                  "name": "5.1.1 Understanding the WordPress REST API"
                },
                {
                  "name": "5.1.2 Building custom endpoints"
                },
                {
                  "name": "5.1.3 Consuming the REST API in your theme or plugin"
                }
              ]
            },
            {
              "name": "5.2 Headless WordPress",
              "children": [
                {
                  "name": "5.2.1 Decoupling the frontend from the backend"
                },
                {
                  "name": "5.2.2 Building a frontend application with React, Vue, or Angular"
                },
                {
                  "name": "5.2.3 Connecting the frontend to the WordPress REST API"
                }
              ]
            },
            {
              "name": "5.3 Contributing to WordPress",
              "children": [
                {
                  "name": "5.3.1 Understanding the WordPress contribution workflow"
                },
                {
                  "name": "5.3.2 Contributing to core, themes, or plugins"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "I want to learn wordpress",
    "output": {
      "name": "I want to learn WordPress",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 Understanding WordPress Architecture (files, databases)"
                },
                {
                  "name": "1.1.2 WordPress Dashboard Navigation"
                },
                {
                  "name": "1.1.3 Setting up a Local WordPress Environment (using LocalWP or XAMPP)"
                }
              ]
            },
            {
              "name": "1.2 Setting up a WordPress Site",
              "children": [
                {
                  "name": "1.2.1 Choosing a Hosting Provider"
                },
                {
                  "name": "1.2.2 Installing WordPress (manual and automated methods)"
                },
                {
                  "name": "1.2.3 Configuring Basic Settings (permalinks, reading settings)"
                }
              ]
            },
            {
              "name": "1.3 Understanding Themes and Plugins",
              "children": [
                {
                  "name": "1.3.1 Theme Basics: Installation, Activation, Customization"
                },
                {
                  "name": "1.3.2 Plugin Basics: Installation, Activation, Functionality"
                },
                {
                  "name": "1.3.3 Finding and Evaluating Quality Themes and Plugins (from WordPress.org)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Content Creation and Management",
          "children": [
            {
              "name": "2.1 Creating and Editing Posts",
              "children": [
                {
                  "name": "2.1.1 Using the Post Editor (blocks, formatting, media)"
                },
                {
                  "name": "2.1.2 Categories and Tags: Organization and SEO"
                },
                {
                  "name": "2.1.3 Scheduling and Publishing Posts"
                }
              ]
            },
            {
              "name": "2.2 Creating and Managing Pages",
              "children": [
                {
                  "name": "2.2.1 Differences between Pages and Posts"
                },
                {
                  "name": "2.2.2 Page Hierarchy and Navigation"
                },
                {
                  "name": "2.2.3 Creating Custom Page Templates"
                }
              ]
            },
            {
              "name": "2.3 Working with Media",
              "children": [
                {
                  "name": "2.3.1 Uploading and Managing Images"
                },
                {
                  "name": "2.3.2 Optimizing Images for Web Performance"
                },
                {
                  "name": "2.3.3 Using other media types (video, audio)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Customization and Theming",
          "children": [
            {
              "name": "3.1 Theme Customization (Child Themes)",
              "children": [
                {
                  "name": "3.1.1 Understanding Child Themes"
                },
                {
                  "name": "3.1.2 Creating a Child Theme"
                },
                {
                  "name": "3.1.3 Customizing Theme Functionality through Child Theme"
                }
              ]
            },
            {
              "name": "3.2 Working with the Theme Editor (Caution: Backups Essential!)",
              "children": [
                {
                  "name": "3.2.1 Modifying CSS Styles"
                },
                {
                  "name": "3.2.2 Editing Template Files (header.php, footer.php etc.)"
                },
                {
                  "name": "3.2.3 Project:  Creating a custom header image"
                }
              ]
            },
            {
              "name": "3.3 Using a Page Builder Plugin (Elementor, Beaver Builder)",
              "children": [
                {
                  "name": "3.3.1 Choosing and Installing a Page Builder"
                },
                {
                  "name": "3.3.2 Creating Custom Page Layouts"
                },
                {
                  "name": "3.3.3 Project: Building a landing page with a page builder"
                }
              ]
            }
          ]
        },
        {
          "name": "4. WordPress Plugins and Extensions",
          "children": [
            {
              "name": "4.1 Essential Plugins",
              "children": [
                {
                  "name": "4.1.1 Security Plugins (Wordfence, Sucuri Security)"
                },
                {
                  "name": "4.1.2 SEO Plugins (Yoast SEO, Rank Math)"
                },
                {
                  "name": "4.1.3 Backup Plugins (UpdraftPlus, BackWPup)"
                }
              ]
            },
            {
              "name": "4.2 Advanced Plugins",
              "children": [
                {
                  "name": "4.2.1 E-commerce Plugins (WooCommerce)"
                },
                {
                  "name": "4.2.2 Membership Plugins (MemberPress, Paid Memberships Pro)"
                },
                {
                  "name": "4.2.3 Form Plugins (Contact Form 7, Gravity Forms)"
                }
              ]
            },
            {
              "name": "4.3 Plugin Conflicts and Troubleshooting",
              "children": [
                {
                  "name": "4.3.1 Identifying Plugin Conflicts"
                },
                {
                  "name": "4.3.2 Deactivating and Troubleshooting Plugins"
                },
                {
                  "name": "4.3.3 Using Debugging Tools"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Security and Maintenance",
          "children": [
            {
              "name": "5.1 Website Security Best Practices",
              "children": [
                {
                  "name": "5.1.1 Choosing Strong Passwords"
                },
                {
                  "name": "5.1.2 Regularly Updating WordPress, Themes, and Plugins"
                },
                {
                  "name": "5.1.3 Implementing Security Plugins"
                }
              ]
            },
            {
              "name": "5.2 Website Backups and Restoration",
              "children": [
                {
                  "name": "5.2.1 Performing Regular Backups"
                },
                {
                  "name": "5.2.2 Testing Backup and Restore Procedures"
                },
                {
                  "name": "5.2.3 Using a Backup Plugin"
                }
              ]
            },
            {
              "name": "5.3 Performance Optimization",
              "children": [
                {
                  "name": "5.3.1 Image Optimization"
                },
                {
                  "name": "5.3.2 Caching Plugins"
                },
                {
                  "name": "5.3.3 Database Optimization"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "I want to learn web security",
    "output": {
      "name": "I want to learn web security",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 HTTP Protocol"
                },
                {
                  "name": "1.1.2 Web Servers & Architecture"
                },
                {
                  "name": "1.1.3 Basic Networking (TCP/IP, DNS)"
                }
              ]
            },
            {
              "name": "1.2 Web Application Fundamentals",
              "children": [
                {
                  "name": "1.2.1 HTML, CSS, JavaScript"
                },
                {
                  "name": "1.2.2 Server-Side Languages (e.g., Python, PHP, Node.js)"
                },
                {
                  "name": "1.2.3 Databases (SQL, NoSQL)"
                }
              ]
            },
            {
              "name": "1.3 Common Vulnerabilities",
              "children": [
                {
                  "name": "1.3.1 Cross-Site Scripting (XSS)"
                },
                {
                  "name": "1.3.2 SQL Injection"
                },
                {
                  "name": "1.3.3 Cross-Site Request Forgery (CSRF)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Security Principles",
          "children": [
            {
              "name": "2.1 Authentication & Authorization",
              "children": [
                {
                  "name": "2.1.1 Password Security Best Practices"
                },
                {
                  "name": "2.1.2 OAuth 2.0 and OpenID Connect"
                },
                {
                  "name": "2.1.3 Session Management"
                }
              ]
            },
            {
              "name": "2.2 Input Validation & Sanitization",
              "children": [
                {
                  "name": "2.2.1 Preventing SQL Injection through Parameterized Queries"
                },
                {
                  "name": "2.2.2 Escaping and Encoding User Input"
                },
                {
                  "name": "2.2.3 Data Validation Techniques"
                }
              ]
            },
            {
              "name": "2.3 Security Hardening",
              "children": [
                {
                  "name": "2.3.1 Secure Configuration of Web Servers"
                },
                {
                  "name": "2.3.2 Implementing Web Application Firewalls (WAFs)"
                },
                {
                  "name": "2.3.3 Regular Security Audits and Penetration Testing"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Penetration Testing & Ethical Hacking",
          "children": [
            {
              "name": "3.1 Reconnaissance & Information Gathering",
              "children": [
                {
                  "name": "3.1.1 Passive and Active Reconnaissance Techniques"
                },
                {
                  "name": "3.1.2 Utilizing Open-Source Intelligence (OSINT)"
                },
                {
                  "name": "3.1.3 Project: Reconnaissance on a vulnerable web application (OWASP Juice Shop)"
                }
              ]
            },
            {
              "name": "3.2 Vulnerability Scanning & Exploitation",
              "children": [
                {
                  "name": "3.2.1 Using Vulnerability Scanners (e.g., OpenVAS, Nessus)"
                },
                {
                  "name": "3.2.2 Exploiting Common Web Vulnerabilities (XSS, SQLi, CSRF)"
                },
                {
                  "name": "3.2.3 Project: Exploiting vulnerabilities in a vulnerable web application"
                }
              ]
            },
            {
              "name": "3.3 Reporting & Remediation",
              "children": [
                {
                  "name": "3.3.1 Writing Detailed Vulnerability Reports"
                },
                {
                  "name": "3.3.2 Recommending Remediation Strategies"
                },
                {
                  "name": "3.3.3 Project:  Write a penetration testing report for a vulnerable application"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Web Security Frameworks",
              "children": [
                {
                  "name": "4.1.1 OWASP Top 10"
                },
                {
                  "name": "4.1.2 Understanding and Implementing Security Frameworks (e.g., Spring Security, Django Security)"
                },
                {
                  "name": "4.1.3 Project: Secure a web application using a chosen security framework"
                }
              ]
            },
            {
              "name": "4.2 API Security",
              "children": [
                {
                  "name": "4.2.1 API Authentication & Authorization (JWT, API Keys)"
                },
                {
                  "name": "4.2.2 API Rate Limiting and Throttling"
                },
                {
                  "name": "4.2.3 OWASP API Security Top 10"
                }
              ]
            },
            {
              "name": "4.3 Mobile App Security",
              "children": [
                {
                  "name": "4.3.1 Secure Coding Practices for Mobile Apps"
                },
                {
                  "name": "4.3.2 Mobile Application Penetration Testing"
                },
                {
                  "name": "4.3.3 Data Protection and Privacy in Mobile Apps"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Continuous Learning",
          "children": [
            {
              "name": "5.1 Stay Updated",
              "children": [
                {
                  "name": "5.1.1 Follow Security Blogs and News"
                },
                {
                  "name": "5.1.2 Participate in Security Communities"
                },
                {
                  "name": "5.1.3 Attend Webinars and Conferences"
                }
              ]
            },
            {
              "name": "5.2 Certifications",
              "children": [
                {
                  "name": "5.2.1 CompTIA Security+"
                },
                {
                  "name": "5.2.2 OSCP (Offensive Security Certified Professional)"
                },
                {
                  "name": "5.2.3 CEH (Certified Ethical Hacker)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "web security expert roadmap",
    "output": {
      "name": "Web Security Expert Roadmap",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP Model"
                },
                {
                  "name": "1.1.2 HTTP/HTTPS Protocols"
                },
                {
                  "name": "1.1.3 DNS and its vulnerabilities"
                }
              ]
            },
            {
              "name": "1.2 Web Application Architecture",
              "children": [
                {
                  "name": "1.2.1 Client-Server Model"
                },
                {
                  "name": "1.2.2 Common Web Technologies (HTML, CSS, JavaScript, Databases)"
                },
                {
                  "name": "1.2.3  Application Frameworks (e.g., React, Angular, Node.js)"
                }
              ]
            },
            {
              "name": "1.3 Operating Systems & Command Line",
              "children": [
                {
                  "name": "1.3.1 Linux Fundamentals (Basic commands, file permissions)"
                },
                {
                  "name": "1.3.2 Windows Security concepts"
                },
                {
                  "name": "1.3.3 Practical exercise: Setting up a Virtual Machine and a web server"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Security Principles",
          "children": [
            {
              "name": "2.1 OWASP Top 10",
              "children": [
                {
                  "name": "2.1.1 Understanding each vulnerability category"
                },
                {
                  "name": "2.1.2 Case studies of real-world exploits"
                }
              ]
            },
            {
              "name": "2.2 Authentication & Authorization",
              "children": [
                {
                  "name": "2.2.1 Different authentication mechanisms (passwords, MFA, OAuth)"
                },
                {
                  "name": "2.2.2 Authorization models and access control"
                }
              ]
            },
            {
              "name": "2.3 Cryptography Basics",
              "children": [
                {
                  "name": "2.3.1 Symmetric and Asymmetric Encryption"
                },
                {
                  "name": "2.3.2 Hashing algorithms and their use in security"
                },
                {
                  "name": "2.3.3 Digital Certificates and Public Key Infrastructure (PKI)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Penetration Testing & Vulnerability Assessment",
          "children": [
            {
              "name": "3.1 Reconnaissance & Information Gathering",
              "children": [
                {
                  "name": "3.1.1 Passive and active reconnaissance techniques"
                },
                {
                  "name": "3.1.2 Using tools like Nmap, Shodan"
                }
              ]
            },
            {
              "name": "3.2 Vulnerability Scanning & Exploitation",
              "children": [
                {
                  "name": "3.2.1 Using vulnerability scanners (e.g., Nessus, OpenVAS)"
                },
                {
                  "name": "3.2.2 Manual vulnerability exploitation (SQL injection, XSS, CSRF)"
                },
                {
                  "name": "3.2.3 Practical Project: Pentesting a vulnerable web application (e.g., DVWA)"
                }
              ]
            },
            {
              "name": "3.3 Reporting & Remediation",
              "children": [
                {
                  "name": "3.3.1 Writing professional security reports"
                },
                {
                  "name": "3.3.2 Recommending effective remediation strategies"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Web Application Firewalls (WAFs)",
              "children": [
                {
                  "name": "4.1.1 Understanding how WAFs work"
                },
                {
                  "name": "4.1.2 Configuring and managing WAFs"
                }
              ]
            },
            {
              "name": "4.2 Security Auditing & Compliance",
              "children": [
                {
                  "name": "4.2.1  Understanding security standards (e.g., ISO 27001, SOC 2)"
                },
                {
                  "name": "4.2.2 Conducting security audits"
                }
              ]
            },
            {
              "name": "4.3 Secure Coding Practices",
              "children": [
                {
                  "name": "4.3.1 Secure coding guidelines for various languages"
                },
                {
                  "name": "4.3.2 Code review techniques"
                },
                {
                  "name": "4.3.3 Static and dynamic application security testing (SAST/DAST)"
                }
              ]
            }
          ]
        },
        {
          "name": "5. Specialization & Career Development",
          "children": [
            {
              "name": "5.1 Choosing a Specialization",
              "children": [
                {
                  "name": "5.1.1 Cloud Security"
                },
                {
                  "name": "5.1.2 Mobile Application Security"
                },
                {
                  "name": "5.1.3 DevSecOps"
                }
              ]
            },
            {
              "name": "5.2 Building Your Portfolio",
              "children": [
                {
                  "name": "5.2.1 Contributing to open-source projects"
                },
                {
                  "name": "5.2.2 Participating in Capture The Flag (CTF) competitions"
                },
                {
                  "name": "5.2.3 Creating a personal website showcasing your skills and projects"
                }
              ]
            },
            {
              "name": "5.3 Networking and Certifications",
              "children": [
                {
                  "name": "5.3.1  Networking with professionals in the field"
                },
                {
                  "name": "5.3.2 Obtaining relevant certifications (e.g., OSCP, CEH, CISSP)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "web security expert",
    "output": {
      "name": "Web Security Expert",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Networking Fundamentals",
              "children": [
                {
                  "name": "1.1.1 TCP/IP Model"
                },
                {
                  "name": "1.1.2 HTTP/HTTPS Protocols"
                },
                {
                  "name": "1.1.3 DNS and Networking Basics"
                }
              ]
            },
            {
              "name": "1.2 Web Application Architecture",
              "children": [
                {
                  "name": "1.2.1 Client-Server Model"
                },
                {
                  "name": "1.2.2 Common Web Frameworks (e.g., React, Angular, Node.js)"
                },
                {
                  "name": "1.2.3 Database Interactions and Security"
                }
              ]
            },
            {
              "name": "1.3 Operating Systems and System Administration",
              "children": [
                {
                  "name": "1.3.1 Linux Fundamentals (command line, basic system administration)"
                },
                {
                  "name": "1.3.2 User and Permission Management"
                },
                {
                  "name": "1.3.3 Basic Networking Configuration (firewalls, routing)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core Web Security Concepts",
          "children": [
            {
              "name": "2.1 OWASP Top 10 Vulnerabilities",
              "children": [
                {
                  "name": "2.1.1  Injection (SQL, XSS, etc.)"
                },
                {
                  "name": "2.1.2 Broken Authentication and Session Management"
                },
                {
                  "name": "2.1.3 Sensitive Data Exposure"
                },
                {
                  "name": "2.1.4 Project: Analyze a vulnerable web application (OWASP Juice Shop)"
                }
              ]
            },
            {
              "name": "2.2 Cross-Site Scripting (XSS)",
              "children": [
                {
                  "name": "2.2.1 Reflected XSS"
                },
                {
                  "name": "2.2.2 Stored XSS"
                },
                {
                  "name": "2.2.3 DOM Based XSS"
                },
                {
                  "name": "2.2.4 Project: Develop XSS detection and prevention mechanisms"
                }
              ]
            },
            {
              "name": "2.3 SQL Injection",
              "children": [
                {
                  "name": "2.3.1 Different types of SQL Injection attacks"
                },
                {
                  "name": "2.3.2 Prevention techniques (parameterized queries, input validation)"
                },
                {
                  "name": "2.3.3 Project: Create and exploit a vulnerable web application demonstrating SQL Injection"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Web Security",
          "children": [
            {
              "name": "3.1 Authentication and Authorization",
              "children": [
                {
                  "name": "3.1.1 OAuth 2.0 and OpenID Connect"
                },
                {
                  "name": "3.1.2 JWT (JSON Web Tokens)"
                },
                {
                  "name": "3.1.3 Secure password handling and storage"
                }
              ]
            },
            {
              "name": "3.2 Security Auditing and Penetration Testing",
              "children": [
                {
                  "name": "3.2.1 Static and dynamic application security testing (SAST/DAST)"
                },
                {
                  "name": "3.2.2 Vulnerability scanners (e.g., Nessus, Burp Suite)"
                },
                {
                  "name": "3.2.3 Penetration testing methodologies"
                }
              ]
            },
            {
              "name": "3.3 API Security",
              "children": [
                {
                  "name": "3.3.1 API authentication and authorization"
                },
                {
                  "name": "3.3.2 API security best practices (rate limiting, input validation)"
                },
                {
                  "name": "3.3.3 OWASP API Security Top 10"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Specialized Areas",
          "children": [
            {
              "name": "4.1 Secure Coding Practices",
              "children": [
                {
                  "name": "4.1.1 Secure coding guidelines for various languages"
                },
                {
                  "name": "4.1.2 Input validation and sanitization"
                },
                {
                  "name": "4.1.3 Error handling and logging"
                }
              ]
            },
            {
              "name": "4.2 Web Application Firewalls (WAFs)",
              "children": [
                {
                  "name": "4.2.1 Understanding WAF functionalities"
                },
                {
                  "name": "4.2.2 Different types of WAFs (cloud-based, on-premise)"
                },
                {
                  "name": "4.2.3 WAF configuration and management"
                }
              ]
            },
            {
              "name": "4.3 Security Monitoring and Incident Response",
              "children": [
                {
                  "name": "4.3.1 Security Information and Event Management (SIEM)"
                },
                {
                  "name": "4.3.2 Intrusion Detection and Prevention Systems (IDS/IPS)"
                },
                {
                  "name": "4.3.3 Incident response plan development and execution"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Topics & Specializations",
          "children": [
            {
              "name": "5.1  Cloud Security (AWS, Azure, GCP)",
              "children": [
                {
                  "name": "5.1.1  Secure cloud configurations"
                },
                {
                  "name": "5.1.2  Cloud security best practices"
                },
                {
                  "name": "5.1.3  Cloud security certifications (e.g., AWS Certified Security - Specialty)"
                }
              ]
            },
            {
              "name": "5.2  Blockchain Security",
              "children": [
                {
                  "name": "5.2.1 Smart contract vulnerabilities"
                },
                {
                  "name": "5.2.2  Cryptographic vulnerabilities"
                },
                {
                  "name": "5.2.3  Blockchain forensics"
                }
              ]
            },
            {
              "name": "5.3  Mobile Application Security",
              "children": [
                {
                  "name": "5.3.1 Android and iOS security best practices"
                },
                {
                  "name": "5.3.2 Mobile application penetration testing"
                },
                {
                  "name": "5.3.3 Reverse engineering of mobile applications"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to learn web security",
    "output": {
      "name": "How to Learn Web Security",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Web Technologies",
              "children": [
                {
                  "name": "1.1.1 HTTP & HTTPS Protocols"
                },
                {
                  "name": "1.1.2 HTML, CSS, JavaScript Basics"
                },
                {
                  "name": "1.1.3 Networking Fundamentals (TCP/IP, DNS)"
                }
              ]
            },
            {
              "name": "1.2 Web Server Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Apache/Nginx Configuration"
                },
                {
                  "name": "1.2.2 Server-Side Scripting (PHP, Python, Node.js)"
                },
                {
                  "name": "1.2.3 Basic Database Interactions (SQL)"
                }
              ]
            },
            {
              "name": "1.3 Security Principles",
              "children": [
                {
                  "name": "1.3.1 CIA Triad (Confidentiality, Integrity, Availability)"
                },
                {
                  "name": "1.3.2 Risk Assessment & Management"
                },
                {
                  "name": "1.3.3 Common Vulnerabilities and Exploits (CVE)"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Common Web Vulnerabilities",
          "children": [
            {
              "name": "2.1 Injection Attacks",
              "children": [
                {
                  "name": "2.1.1 SQL Injection (practical exercises: vulnerable app testing)"
                },
                {
                  "name": "2.1.2 Cross-Site Scripting (XSS) (practical exercises: XSS filter bypass)"
                },
                {
                  "name": "2.1.3 Command Injection (practical exercises: vulnerable shell script testing)"
                }
              ]
            },
            {
              "name": "2.2 Broken Authentication & Session Management",
              "children": [
                {
                  "name": "2.2.1 Password Cracking Techniques"
                },
                {
                  "name": "2.2.2 Session Hijacking"
                },
                {
                  "name": "2.2.3 Authentication Bypass (practical exercises: weak password vulnerability exploitation)"
                }
              ]
            },
            {
              "name": "2.3 Cross-Site Request Forgery (CSRF)",
              "children": [
                {
                  "name": "2.3.1 CSRF Attacks and Prevention Techniques"
                },
                {
                  "name": "2.3.2 Practical CSRF Exploit and Mitigation (Project: Build a vulnerable and then secure web app)"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced Topics",
          "children": [
            {
              "name": "3.1 Authorization Vulnerabilities",
              "children": [
                {
                  "name": "3.1.1 Broken Access Control"
                },
                {
                  "name": "3.1.2 Privilege Escalation (practical exercises: finding and exploiting insecure permissions)"
                }
              ]
            },
            {
              "name": "3.2 Security Testing Methodologies",
              "children": [
                {
                  "name": "3.2.1 OWASP Testing Guide"
                },
                {
                  "name": "3.2.2 Penetration Testing Process"
                },
                {
                  "name": "3.2.3 Vulnerability Scanning Tools (e.g., Nessus, OpenVAS)"
                }
              ]
            },
            {
              "name": "3.3 Secure Development Practices",
              "children": [
                {
                  "name": "3.3.1 Secure Coding Principles"
                },
                {
                  "name": "3.3.2 Input Validation & Sanitization"
                },
                {
                  "name": "3.3.3 Output Encoding"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Tools & Technologies",
          "children": [
            {
              "name": "4.1 Web Proxies (Burp Suite, ZAP)",
              "children": [
                {
                  "name": "4.1.1 Intercepting and Modifying HTTP Requests"
                },
                {
                  "name": "4.1.2 Identifying Vulnerabilities with Proxy Tools (Project: Use Burp Suite to find vulnerabilities in a vulnerable web application)"
                }
              ]
            },
            {
              "name": "4.2 Network Scanners (Nmap)",
              "children": [
                {
                  "name": "4.2.1 Basic Nmap Usage"
                },
                {
                  "name": "4.2.2 Advanced Nmap Techniques (Port scanning, OS detection)"
                }
              ]
            },
            {
              "name": "4.3 Security Headers & Configuration",
              "children": [
                {
                  "name": "4.3.1  Content Security Policy (CSP)"
                },
                {
                  "name": "4.3.2  HTTP Strict Transport Security (HSTS)"
                },
                {
                  "name": "4.3.3  X-Frame-Options"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Advanced Penetration Testing & Exploitation",
          "children": [
            {
              "name": "5.1  Exploit Development",
              "children": [
                {
                  "name": "5.1.1  Understanding Assembly Language"
                },
                {
                  "name": "5.1.2  Reverse Engineering Basics"
                },
                {
                  "name": "5.1.3  Exploit Writing for Common Vulnerabilities (Project: Create a simple exploit for a known vulnerable application)"
                }
              ]
            },
            {
              "name": "5.2  Binary Exploitation",
              "children": [
                {
                  "name": "5.2.1  Buffer Overflows"
                },
                {
                  "name": "5.2.2  Heap Exploitation"
                },
                {
                  "name": "5.2.3  Return-oriented Programming (ROP)"
                }
              ]
            },
            {
              "name": "5.3  Mobile Application Security",
              "children": [
                {
                  "name": "5.3.1  Android Security Architecture"
                },
                {
                  "name": "5.3.2  iOS Security Architecture"
                },
                {
                  "name": "5.3.3  Mobile Application Penetration Testing"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "UI designer roadmap",
    "output": {
      "name": "UI Designer Roadmap",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Design Principles",
              "children": [
                {
                  "name": "1.1.1 Gestalt Principles"
                },
                {
                  "name": "1.1.2 Typography basics"
                },
                {
                  "name": "1.1.3 Color Theory & palettes"
                }
              ]
            },
            {
              "name": "1.2 User Experience (UX) Basics",
              "children": [
                {
                  "name": "1.2.1 User research methods (Surveys, Interviews)"
                },
                {
                  "name": "1.2.2 Information architecture"
                },
                {
                  "name": "1.2.3 User flows and wireframing"
                }
              ]
            },
            {
              "name": "1.3 Design Tools",
              "children": [
                {
                  "name": "1.3.1 Figma/Sketch/Adobe XD (choose one to start)"
                },
                {
                  "name": "1.3.2 Basic tool functionalities (layers, groups, components)"
                },
                {
                  "name": "1.3.3 Project: Design a simple landing page"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Intermediate UI Design",
          "children": [
            {
              "name": "2.1 Advanced UI Principles",
              "children": [
                {
                  "name": "2.1.1 Interaction design"
                },
                {
                  "name": "2.1.2 Accessibility guidelines (WCAG)"
                },
                {
                  "name": "2.1.3 Design systems & component libraries"
                }
              ]
            },
            {
              "name": "2.2 UI Patterns and Best Practices",
              "children": [
                {
                  "name": "2.2.1 Common UI patterns (Navigation, forms, modals)"
                },
                {
                  "name": "2.2.2 Micro-interactions and animations"
                },
                {
                  "name": "2.2.3 Responsive design principles"
                }
              ]
            },
            {
              "name": "2.3 Prototyping and Testing",
              "children": [
                {
                  "name": "2.3.1 Interactive prototyping (Figma/Adobe XD prototyping)"
                },
                {
                  "name": "2.3.2 Usability testing methods"
                },
                {
                  "name": "2.3.3 Project: Prototype a multi-screen app"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced UI Design & Specialization",
          "children": [
            {
              "name": "3.1 Advanced Interaction Design",
              "children": [
                {
                  "name": "3.1.1 Motion design principles"
                },
                {
                  "name": "3.1.2 Voice UI and conversational design"
                },
                {
                  "name": "3.1.3 Advanced animation techniques"
                }
              ]
            },
            {
              "name": "3.2 UI Design for Specific Platforms",
              "children": [
                {
                  "name": "3.2.1 Mobile app design (iOS & Android)"
                },
                {
                  "name": "3.2.2 Web app design"
                },
                {
                  "name": "3.2.3 Desktop app design"
                }
              ]
            },
            {
              "name": "3.3 Design Systems & Branding",
              "children": [
                {
                  "name": "3.3.1 Building a scalable design system"
                },
                {
                  "name": "3.3.2 Understanding brand guidelines"
                },
                {
                  "name": "3.3.3 Project: Design a complete design system for a fictional brand"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Portfolio & Job Search",
          "children": [
            {
              "name": "4.1 Building a Strong Portfolio",
              "children": [
                {
                  "name": "4.1.1 Showcasing your best work"
                },
                {
                  "name": "4.1.2 Crafting compelling case studies"
                },
                {
                  "name": "4.1.3 Presenting your work effectively"
                }
              ]
            },
            {
              "name": "4.2 Networking and Job Hunting",
              "children": [
                {
                  "name": "4.2.1 Online platforms (Behance, Dribbble)"
                },
                {
                  "name": "4.2.2 Networking with designers"
                },
                {
                  "name": "4.2.3 Interview preparation"
                }
              ]
            },
            {
              "name": "4.3 Continuous Learning",
              "children": [
                {
                  "name": "4.3.1 Staying updated with design trends"
                },
                {
                  "name": "4.3.2 Following industry leaders"
                },
                {
                  "name": "4.3.3 Participating in design communities"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "UI designer",
    "output": {
      "name": "UI Designer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Design Principles",
              "children": [
                {
                  "name": "1.1.1 Gestalt Principles"
                },
                {
                  "name": "1.1.2 Typography Basics"
                },
                {
                  "name": "1.1.3 Color Theory"
                }
              ]
            },
            {
              "name": "1.2 User Experience (UX) Basics",
              "children": [
                {
                  "name": "1.2.1 User Research Methods"
                },
                {
                  "name": "1.2.2 Information Architecture"
                },
                {
                  "name": "1.2.3 User Flows & Wireframing"
                }
              ]
            },
            {
              "name": "1.3 Design Tools",
              "children": [
                {
                  "name": "1.3.1 Figma (or Sketch/Adobe XD): Interface & Basics"
                },
                {
                  "name": "1.3.2 Prototyping Tools (Figma, Adobe XD, InVision): Interactive Prototypes"
                },
                {
                  "name": "1.3.3 Version Control (Git): Collaboration & Workflow"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Core UI Skills",
          "children": [
            {
              "name": "2.1 Layout & Composition",
              "children": [
                {
                  "name": "2.1.1 Grid Systems & Responsive Design"
                },
                {
                  "name": "2.1.2 Layout Techniques (Card, List, Grid)"
                },
                {
                  "name": "2.1.3 Project: Design a simple landing page using a grid system"
                }
              ]
            },
            {
              "name": "2.2 Interaction Design",
              "children": [
                {
                  "name": "2.2.1 User Interface Patterns"
                },
                {
                  "name": "2.2.2 Microinteractions & Animations"
                },
                {
                  "name": "2.2.3 Project: Design a microinteraction for a button"
                }
              ]
            },
            {
              "name": "2.3 Visual Design",
              "children": [
                {
                  "name": "2.3.1 Iconography & Illustration Basics"
                },
                {
                  "name": "2.3.2 Visual Hierarchy & Emphasis"
                },
                {
                  "name": "2.3.3 Project: Redesign an existing app's icon"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Advanced UI Concepts",
          "children": [
            {
              "name": "3.1 Accessibility",
              "children": [
                {
                  "name": "3.1.1 WCAG Guidelines"
                },
                {
                  "name": "3.1.2 Designing for different disabilities"
                },
                {
                  "name": "3.1.3 Project: Audit an existing website for accessibility issues"
                }
              ]
            },
            {
              "name": "3.2 Design Systems",
              "children": [
                {
                  "name": "3.2.1 Component Libraries"
                },
                {
                  "name": "3.2.2 Style Guides"
                },
                {
                  "name": "3.2.3 Project: Create a simple design system for a fictional app"
                }
              ]
            },
            {
              "name": "3.3 UI Animation & Motion Design",
              "children": [
                {
                  "name": "3.3.1 Principles of Animation"
                },
                {
                  "name": "3.3.2 Tools for Animation (After Effects, Principle)"
                },
                {
                  "name": "3.3.3 Project: Animate a loading screen"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Portfolio & Job Search",
          "children": [
            {
              "name": "4.1 Building a Portfolio",
              "children": [
                {
                  "name": "4.1.1 Showcasing your best work"
                },
                {
                  "name": "4.1.2 Creating a compelling online presence"
                },
                {
                  "name": "4.1.3 Writing a strong design brief for each project"
                }
              ]
            },
            {
              "name": "4.2 Job Search Strategies",
              "children": [
                {
                  "name": "4.2.1 Networking and connecting with designers"
                },
                {
                  "name": "4.2.2 Tailoring your resume and cover letter"
                },
                {
                  "name": "4.2.3 Preparing for design interviews"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Staying Current",
          "children": [
            {
              "name": "5.1 Following Design Trends",
              "children": [
                {
                  "name": "5.1.1 Industry blogs and publications"
                },
                {
                  "name": "5.1.2 Attending conferences and workshops"
                },
                {
                  "name": "5.1.3 Participating in online design communities"
                }
              ]
            },
            {
              "name": "5.2 Continuous Learning",
              "children": [
                {
                  "name": "5.2.1 Online courses and tutorials"
                },
                {
                  "name": "5.2.2 Books and design resources"
                },
                {
                  "name": "5.2.3 Experimenting with new tools and techniques"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Design system engineer",
    "output": {
      "name": "Design System Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Design Principles",
              "children": [
                {
                  "name": "1.1.1 UX Principles (Accessibility, Usability, User Research)"
                },
                {
                  "name": "1.1.2 Design Thinking & Problem Solving"
                },
                {
                  "name": "1.1.3 Visual Design Principles (Typography, Color Theory, Layout)"
                }
              ]
            },
            {
              "name": "1.2 Front-End Fundamentals",
              "children": [
                {
                  "name": "1.2.1 HTML, CSS, JavaScript"
                },
                {
                  "name": "1.2.2 Responsive Web Design"
                },
                {
                  "name": "1.2.3 Project: Build a simple landing page with responsive design"
                }
              ]
            },
            {
              "name": "1.3 Version Control & Collaboration",
              "children": [
                {
                  "name": "1.3.1 Git & GitHub"
                },
                {
                  "name": "1.3.2 Collaborative workflows (Gitflow, GitHub Actions)"
                },
                {
                  "name": "1.3.3 Project: Contribute to an open-source project using Git"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Component-Based Architecture",
          "children": [
            {
              "name": "2.1 Component Design & Development",
              "children": [
                {
                  "name": "2.1.1 Component structure and patterns"
                },
                {
                  "name": "2.1.2 State management (Context API, Redux, Vuex)"
                },
                {
                  "name": "2.1.3 Project: Develop reusable UI components"
                }
              ]
            },
            {
              "name": "2.2 Component Libraries & Frameworks",
              "children": [
                {
                  "name": "2.2.1 React, Angular, Vue.js"
                },
                {
                  "name": "2.2.2 Storybook and similar tools"
                },
                {
                  "name": "2.2.3 Project: Integrate a component library into an existing application"
                }
              ]
            },
            {
              "name": "2.3 Testing & Documentation",
              "children": [
                {
                  "name": "2.3.1 Unit and integration testing"
                },
                {
                  "name": "2.3.2 Automated testing frameworks"
                },
                {
                  "name": "2.3.3 Component documentation using Storybook"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Design System Implementation",
          "children": [
            {
              "name": "3.1 Design System Structure & Governance",
              "children": [
                {
                  "name": "3.1.1 Defining a design system's scope and purpose"
                },
                {
                  "name": "3.1.2 Establishing design system governance and processes"
                },
                {
                  "name": "3.1.3 Project: Design a simple design system for a fictional application"
                }
              ]
            },
            {
              "name": "3.2 Style Guides & Pattern Libraries",
              "children": [
                {
                  "name": "3.2.1 Creating and maintaining style guides"
                },
                {
                  "name": "3.2.2 Implementing pattern libraries (e.g., using Storybook)"
                },
                {
                  "name": "3.2.3 Project: Update an existing style guide with new design elements"
                }
              ]
            },
            {
              "name": "3.3 Tooling & Workflow",
              "children": [
                {
                  "name": "3.3.1 Design tools (Figma, Sketch, Adobe XD)"
                },
                {
                  "name": "3.3.2 Version control for design files"
                },
                {
                  "name": "3.3.3 CI/CD pipelines for design system updates"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Design System Evolution & Maintenance",
              "children": [
                {
                  "name": "4.1.1 Managing design system updates and deprecations"
                },
                {
                  "name": "4.1.2 Gathering and incorporating user feedback"
                },
                {
                  "name": "4.1.3 Project: Plan and execute a major update for a design system"
                }
              ]
            },
            {
              "name": "4.2 Scalability and Extensibility",
              "children": [
                {
                  "name": "4.2.1 Designing for modularity and customization"
                },
                {
                  "name": "4.2.2 Implementing theming and personalization"
                },
                {
                  "name": "4.2.3 Project: Design a themeable component library"
                }
              ]
            },
            {
              "name": "4.3 Accessibility & Internationalization",
              "children": [
                {
                  "name": "4.3.1 Implementing WCAG guidelines"
                },
                {
                  "name": "4.3.2 Supporting multiple languages and locales"
                },
                {
                  "name": "4.3.3 Project: Integrate accessibility features into a design system"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Real-World Applications & Case Studies",
          "children": [
            {
              "name": "5.1  Analyzing Existing Design Systems",
              "children": [
                {
                  "name": "5.1.1  Material Design"
                },
                {
                  "name": "5.1.2  Ant Design"
                },
                {
                  "name": "5.1.3  Salesforce Lightning Design System"
                }
              ]
            },
            {
              "name": "5.2  Contributing to Open Source Design Systems",
              "children": [
                {
                  "name": "5.2.1  Finding appropriate projects"
                },
                {
                  "name": "5.2.2  Understanding contribution guidelines"
                },
                {
                  "name": "5.2.3  Submitting pull requests"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "Design system engineer roadmap",
    "output": {
      "name": "Design System Engineer Roadmap",
      "children": [
        {
          "name": "1. Foundational Knowledge",
          "children": [
            {
              "name": "1.1 Web Fundamentals",
              "children": [
                {
                  "name": "1.1.1 HTML, CSS, and JavaScript fundamentals"
                },
                {
                  "name": "1.1.2 Responsive Web Design principles"
                },
                {
                  "name": "1.1.3 Basic understanding of accessibility (WCAG)"
                }
              ]
            },
            {
              "name": "1.2 Design Principles",
              "children": [
                {
                  "name": "1.2.1 Understanding design systems and their purpose"
                },
                {
                  "name": "1.2.2 User interface (UI) and user experience (UX) principles"
                },
                {
                  "name": "1.2.3 Visual design principles (typography, color theory, layout)"
                },
                {
                  "name": "1.2.4 Project: Design a simple landing page using design principles"
                }
              ]
            },
            {
              "name": "1.3 Version Control & Collaboration",
              "children": [
                {
                  "name": "1.3.1 Git and GitHub basics (branching, merging, pull requests)"
                },
                {
                  "name": "1.3.2 Collaborative tools (Figma, Adobe XD, Sketch, etc.)"
                },
                {
                  "name": "1.3.3 Project: Create a GitHub repository and collaborate on a design system component"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Component-Driven Development",
          "children": [
            {
              "name": "2.1 Component Architecture",
              "children": [
                {
                  "name": "2.1.1 Understanding component-based architectures (React, Vue, Angular, etc.)"
                },
                {
                  "name": "2.1.2 State management (Redux, Vuex, Context API)"
                },
                {
                  "name": "2.1.3 Project: Build a reusable button component"
                }
              ]
            },
            {
              "name": "2.2 Styling & Theming",
              "children": [
                {
                  "name": "2.2.1 CSS methodologies (BEM, OOCSS, SMACSS)"
                },
                {
                  "name": "2.2.2 CSS preprocessors (Sass, Less)"
                },
                {
                  "name": "2.2.3 CSS-in-JS libraries (styled-components, Emotion)"
                },
                {
                  "name": "2.2.4 Theming and theming solutions"
                }
              ]
            },
            {
              "name": "2.3 Testing and Documentation",
              "children": [
                {
                  "name": "2.3.1 Unit testing and integration testing for components"
                },
                {
                  "name": "2.3.2 Storybook for component documentation and development"
                },
                {
                  "name": "2.3.3 Project: Document and test a complex component"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Design System Implementation",
          "children": [
            {
              "name": "3.1 Building a Design System",
              "children": [
                {
                  "name": "3.1.1 Choosing a design system framework (e.g., React, Angular, Vue)"
                },
                {
                  "name": "3.1.2 Defining design tokens (color, typography, spacing)"
                },
                {
                  "name": "3.1.3 Establishing component guidelines and patterns"
                }
              ]
            },
            {
              "name": "3.2 Tooling and Workflow",
              "children": [
                {
                  "name": "3.2.1 Using design system tooling (e.g., zeroheight, styleguidist)"
                },
                {
                  "name": "3.2.2 Implementing a CI/CD pipeline for the design system"
                },
                {
                  "name": "3.2.3 Establishing a versioning strategy"
                }
              ]
            },
            {
              "name": "3.3 Governance and Collaboration",
              "children": [
                {
                  "name": "3.3.1 Setting up a design system team and roles"
                },
                {
                  "name": "3.3.2 Creating a contribution guide for the design system"
                },
                {
                  "name": "3.3.3 Communicating and promoting design system adoption"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics & Specialization",
          "children": [
            {
              "name": "4.1 Performance Optimization",
              "children": [
                {
                  "name": "4.1.1 Optimizing component rendering performance"
                },
                {
                  "name": "4.1.2 Implementing lazy loading and code splitting"
                },
                {
                  "name": "4.1.3 Performance testing and profiling"
                }
              ]
            },
            {
              "name": "4.2  Accessibility Best Practices",
              "children": [
                {
                  "name": "4.2.1 WCAG compliance for design system components"
                },
                {
                  "name": "4.2.2 ARIA attributes and accessibility techniques"
                },
                {
                  "name": "4.2.3 Automated accessibility testing"
                }
              ]
            },
            {
              "name": "4.3  Internationalization & Localization",
              "children": [
                {
                  "name": "4.3.1 Building internationalized design systems"
                },
                {
                  "name": "4.3.2 Localization workflows and best practices"
                },
                {
                  "name": "4.3.3 Handling different locales and languages"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Real-World Projects & Portfolio Building",
          "children": [
            {
              "name": "5.1 Open Source Contributions",
              "children": [
                {
                  "name": "5.1.1 Contributing to existing design systems"
                },
                {
                  "name": "5.1.2 Building your own open-source design system component library"
                }
              ]
            },
            {
              "name": "5.2 Personal Projects",
              "children": [
                {
                  "name": "5.2.1 Building a design system for a personal website or application"
                },
                {
                  "name": "5.2.2 Contributing to a large scale company's design system"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "how to become a Design system engineer",
    "output": {
      "name": "How to Become a Design System Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Design Principles",
              "children": [
                {
                  "name": "1.1.1 Understanding UX/UI principles"
                },
                {
                  "name": "1.1.2 Accessibility (WCAG)"
                },
                {
                  "name": "1.1.3 Design Thinking & User Research"
                }
              ]
            },
            {
              "name": "1.2 Frontend Development Fundamentals",
              "children": [
                {
                  "name": "1.2.1 HTML, CSS, JavaScript"
                },
                {
                  "name": "1.2.2 Responsive Web Design"
                },
                {
                  "name": "1.2.3 Version control (Git)"
                }
              ]
            },
            {
              "name": "1.3 Component-Based Architecture",
              "children": [
                {
                  "name": "1.3.1 Understanding modular design"
                },
                {
                  "name": "1.3.2 Introduction to React, Vue, or Angular (choose one)"
                },
                {
                  "name": "1.3.3 Project: Build a simple component library"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Design System Concepts",
          "children": [
            {
              "name": "2.1 Design System Structure & Governance",
              "children": [
                {
                  "name": "2.1.1 Defining a design system's scope and purpose"
                },
                {
                  "name": "2.1.2 Establishing a contribution process"
                },
                {
                  "name": "2.1.3 Understanding design system documentation"
                }
              ]
            },
            {
              "name": "2.2 Design Tokens & Styling",
              "children": [
                {
                  "name": "2.2.1 Using CSS variables and design tokens"
                },
                {
                  "name": "2.2.2 Implementing a theming system"
                },
                {
                  "name": "2.2.3 Project: Implement design tokens in a simple application"
                }
              ]
            },
            {
              "name": "2.3 Component Libraries & Pattern Libraries",
              "children": [
                {
                  "name": "2.3.1 Understanding component variations and states"
                },
                {
                  "name": "2.3.2 Building reusable and scalable components"
                },
                {
                  "name": "2.3.3 Project: Contribute to an open-source component library"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Tooling & Workflow",
          "children": [
            {
              "name": "3.1 Version Control and Collaboration",
              "children": [
                {
                  "name": "3.1.1 Advanced Git workflows (branching, merging, rebasing)"
                },
                {
                  "name": "3.1.2 Collaborative tools (GitHub, GitLab, Bitbucket)"
                },
                {
                  "name": "3.1.3 Project: Manage a component library using Git"
                }
              ]
            },
            {
              "name": "3.2 Design System Platforms",
              "children": [
                {
                  "name": "3.2.1 Exploring design system documentation platforms (Storybook, Zeroheight)"
                },
                {
                  "name": "3.2.2 Integrating design systems with design tools (Figma, Sketch)"
                },
                {
                  "name": "3.2.3 Project: Document a component library using a chosen platform"
                }
              ]
            },
            {
              "name": "3.3 Testing and Automation",
              "children": [
                {
                  "name": "3.3.1 Unit and integration testing for components"
                },
                {
                  "name": "3.3.2 Implementing automated build and deployment pipelines"
                },
                {
                  "name": "3.3.3 Project: Setup CI/CD for a component library"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1 Design System Architecture & Scalability",
              "children": [
                {
                  "name": "4.1.1 Monorepos vs. separate repositories"
                },
                {
                  "name": "4.1.2 Microservices architecture in design systems"
                },
                {
                  "name": "4.1.3 Project: Design the architecture for a large-scale design system"
                }
              ]
            },
            {
              "name": "4.2  Performance Optimization",
              "children": [
                {
                  "name": "4.2.1 Optimizing component rendering performance"
                },
                {
                  "name": "4.2.2 Optimizing bundle sizes"
                },
                {
                  "name": "4.2.3 Project: Optimize the performance of existing components"
                }
              ]
            },
            {
              "name": "4.3  Internationalization & Accessibility",
              "children": [
                {
                  "name": "4.3.1 Implementing i18n (internationalization)"
                },
                {
                  "name": "4.3.2 Advanced accessibility considerations and testing"
                },
                {
                  "name": "4.3.3 Project: Make a component library accessible and internationally-ready"
                }
              ]
            }
          ]
        },
        {
          "name": "5.  Building a Portfolio & Job Search",
          "children": [
            {
              "name": "5.1 Building a portfolio showcasing your skills",
              "children": [
                {
                  "name": "5.1.1  Create a portfolio website"
                },
                {
                  "name": "5.1.2  Highlight your contributions to open-source projects"
                },
                {
                  "name": "5.1.3  Showcase your design system projects"
                }
              ]
            },
            {
              "name": "5.2 Networking and Job Hunting",
              "children": [
                {
                  "name": "5.2.1 Networking with design system engineers"
                },
                {
                  "name": "5.2.2 Tailoring resumes and cover letters"
                },
                {
                  "name": "5.2.3 Interview preparation (technical and behavioral questions)"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "i want to learn design system",
    "output": {
      "name": "Learn Design Systems",
      "children": [
        {
          "name": "1. Foundations",
          "children": [
            {
              "name": "1.1 Core Concepts",
              "children": [
                {
                  "name": "1.1.1 What is a Design System?"
                },
                {
                  "name": "1.1.2 Design System Principles (Consistency, Scalability, Maintainability)"
                },
                {
                  "name": "1.1.3 Benefits and Challenges of Design Systems"
                }
              ]
            },
            {
              "name": "1.2 Design System Components",
              "children": [
                {
                  "name": "1.2.1 Atoms (e.g., colors, typography, spacing)"
                },
                {
                  "name": "1.2.2 Molecules (e.g., buttons, icons, input fields)"
                },
                {
                  "name": "1.2.3 Organisms (e.g., navigation bar, forms)"
                }
              ]
            },
            {
              "name": "1.3 Design System Documentation",
              "children": [
                {
                  "name": "1.3.1 Style Guides"
                },
                {
                  "name": "1.3.2 Component Libraries"
                },
                {
                  "name": "1.3.3 Choosing the Right Documentation Tool (e.g., Storybook, Zeroheight)"
                },
                {
                  "name": "1.3.4  Project: Create a simple component library documentation page"
                }
              ]
            }
          ]
        },
        {
          "name": "2. Design Principles & Process",
          "children": [
            {
              "name": "2.1 UX Principles in Design Systems",
              "children": [
                {
                  "name": "2.1.1 Accessibility (WCAG guidelines)"
                },
                {
                  "name": "2.1.2 Usability"
                },
                {
                  "name": "2.1.3 User Research (user interviews, usability testing)"
                }
              ]
            },
            {
              "name": "2.2 Design System Workflow",
              "children": [
                {
                  "name": "2.2.1 Collaboration and Communication (cross-functional teams)"
                },
                {
                  "name": "2.2.2 Version Control (Git)"
                },
                {
                  "name": "2.2.3 Iterative Design Process"
                }
              ]
            },
            {
              "name": "2.3 Governance and Maintenance",
              "children": [
                {
                  "name": "2.3.1 Establishing a Design System Team"
                },
                {
                  "name": "2.3.2 Defining Contribution Guidelines"
                },
                {
                  "name": "2.3.3 Update and Maintenance Strategy"
                }
              ]
            }
          ]
        },
        {
          "name": "3. Implementation and Tools",
          "children": [
            {
              "name": "3.1 Front-End Technologies",
              "children": [
                {
                  "name": "3.1.1 HTML, CSS, and JavaScript fundamentals"
                },
                {
                  "name": "3.1.2 CSS Preprocessors (Sass, Less)"
                },
                {
                  "name": "3.1.3 Component Frameworks (React, Vue, Angular)"
                }
              ]
            },
            {
              "name": "3.2 Design Tools",
              "children": [
                {
                  "name": "3.2.1 Figma"
                },
                {
                  "name": "3.2.2 Sketch"
                },
                {
                  "name": "3.2.3 Adobe XD"
                },
                {
                  "name": "3.2.4  Project: Design a set of reusable components in your chosen tool"
                }
              ]
            },
            {
              "name": "3.3 Version Control",
              "children": [
                {
                  "name": "3.3.1 Git basics (clone, commit, push, pull)"
                },
                {
                  "name": "3.3.2 Git branching strategies"
                },
                {
                  "name": "3.3.3 GitHub/GitLab/Bitbucket"
                }
              ]
            }
          ]
        },
        {
          "name": "4. Advanced Topics",
          "children": [
            {
              "name": "4.1  Component-Driven Development",
              "children": [
                {
                  "name": "4.1.1 Atomic Design"
                },
                {
                  "name": "4.1.2 Bit"
                },
                {
                  "name": "4.1.3 Storybook"
                }
              ]
            },
            {
              "name": "4.2  Design System Platforms",
              "children": [
                {
                  "name": "4.2.1 Zeroheight"
                },
                {
                  "name": "4.2.2  Styleguidist"
                },
                {
                  "name": "4.2.3  Other platforms and their functionalities"
                }
              ]
            },
            {
              "name": "4.3  Scaling Design Systems",
              "children": [
                {
                  "name": "4.3.1 Managing contributions from multiple teams"
                },
                {
                  "name": "4.3.2 Internationalization and localization"
                },
                {
                  "name": "4.3.3  Project:  Develop a plan for scaling a simple design system across multiple projects."
                }
              ]
            }
          ]
        },
        {
          "name": "5. Case Studies & Best Practices",
          "children": [
            {
              "name": "5.1  Analyzing Existing Design Systems",
              "children": [
                {
                  "name": "5.1.1  Material Design"
                },
                {
                  "name": "5.1.2  Ant Design"
                },
                {
                  "name": "5.1.3  Salesforce Lightning Design System"
                }
              ]
            },
            {
              "name": "5.2  Best Practices and Pitfalls",
              "children": [
                {
                  "name": "5.2.1  Common Mistakes to Avoid"
                },
                {
                  "name": "5.2.2  Effective Communication Strategies"
                },
                {
                  "name": "5.2.3  Measuring Design System Success"
                }
              ]
            },
            {
              "name": "5.3  Community Engagement",
              "children": [
                {
                  "name": "5.3.1  Contributing to Open-Source Design Systems"
                },
                {
                  "name": "5.3.2  Participating in Design System Communities"
                },
                {
                  "name": "5.3.3  Sharing your own work and learnings"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "instruction": "Create a learning roadmap for the following topic",
    "input": "platform engineer",
    "output": {
      "name": "Platform Engineer",
      "children": [
        {
          "name": "1. Foundation",
          "children": [
            {
              "name": "1.1 Core Computing Concepts",
              "children": [
                {
                  "name": "1.1.1 Operating Systems (Linux fundamentals, process management, system calls)"
                },
                {
                  "name": "1.1.2 Networking (TCP/IP model, DNS, routing, firewalls)"
                },
                {
                  "name": "1.1.3 Virtualization and Containerization (VMware, VirtualBox, Docker, Kubernetes basics)"
                },
                {
                  "name": "1.1.4 Project: Setup a virtual machine with a web server and basic networking."
                }
              ]
            },
            {
              "name": "1.2 Cloud Computing Fundamentals",
              "children": [
                {
                  "name": "1.2.1 Cloud Providers (AWS, Azure, GCP - choose one to start)"
                },
                {
                  "name": "1.2.2 Compute, Storage, Networking Services (basic understanding and usage)"
                },
                {
                  "name": "1.2.3 IAM and Security best practices"
                },
                {
                  "name": "1.2.4 Project: Deploy a simple application on your chosen cloud provider."
                }
              ]
            },
            {
              "name": "1.3 Scripting and Automation",
              "children": [
                {
                  "name": "1.3.1 Bash scripting (basic commands, loops, conditionals, functions)"
                },
                {
                  "name": "1.3.2 Python scripting (basic syntax, data structures, modules)"
                },
                {
                  "name": "1.3.3 Configuration management tools (Ansible, Puppet, Chef - choose one to start)"
                },
                {
                  "name": "1.3.4 Project: Automate the deployment of a simple application using chosen scripting language and configuration management tool."
                }
              ]
            }
          ]
        },
        {
          "name": "2. Infrastructure as Code (IaC)",
          "children": [
            {
              "name": "2.1 IaC Principles and Best Practices",
              "children": [
                {
                  "name": "2.1.1 Version control (Git)"
                },
                {
                  "name": "2.1.2 Infrastructure as Code tools (Terraform, CloudFormation, Pulumi - choose one to start)"
                },
                {
                  "name": "2.1.3 State management and versioning"
                }
              ]
            },
            {
              "name": "2.2 Implementing IaC",
              "children": [
                {
                  "name": "2.2.1 Defining infrastructure resources using chosen IaC tool"
                },
                {
                  "name": "2.2.2 Provisioning and managing infrastructure"
                },
                {
                  "name": "2.2.3 Implementing CI/CD pipelines for IaC"
                }
              ]
            },
            {
              "name": "2.3 Advanced IaC Concepts",
              "children": [
                {
                  "name": "2.3.1 Modules and reusable components"
                },
                {
                  "name": "2.3.2 State management strategies"
                },
                {
                  "name": "2.3.3 Infrastructure testing and validation"
                },
                {
                  "name": "2.3.4 Project: Build a multi-environment infrastructure using IaC."
                }
              ]
            }
          ]
        },
        {
          "name": "3. Containerization and Orchestration",
          "children": [
            {
              "name": "3.1 Docker Fundamentals",
              "children": [
                {
                  "name": "3.1.1 Docker images and containers"
                },
                {
                  "name": "3.1.2 Docker Compose"
                },
                {
                  "name": "3.1.3 Docker networking"
                }
              ]
            },
            {
              "name": "3.2 Kubernetes Fundamentals",
              "children": [
                {
                  "name": "3.2.1 Kubernetes architecture"
                },
                {
                  "name": "3.2.2 Deploying applications to Kubernetes"
                },
                {
                  "name": "3.2.3 Kubernetes services and networking"
                }
              ]
            },
            {
              "name": "3.3 Advanced Kubernetes Concepts",
              "children": [
                {
                  "name": "3.3.1 Deployments, StatefulSets, DaemonSets"
                },
                {
                  "name": "3.3.2 Kubernetes security"
                },
                {
                  "name": "3.3.3 Monitoring and logging in Kubernetes"
                },
                {
                  "name": "3.3.4 Project: Deploy a multi-container application to Kubernetes."
                }
              ]
            }
          ]
        },
        {
          "name": "4. Monitoring and Observability",
          "children": [
            {
              "name": "4.1 Monitoring Tools",
              "children": [
                {
                  "name": "4.1.1 Prometheus"
                },
                {
                  "name": "4.1.2 Grafana"
                },
                {
                  "name": "4.1.3 CloudWatch, Azure Monitor, Cloud Monitoring (depending on your chosen cloud provider)"
                }
              ]
            },
            {
              "name": "4.2 Logging and Tracing",
              "children": [
                {
                  "name": "4.2.1 Centralized logging (e.g., ELK stack, Fluentd)"
                },
                {
                  "name": "4.2.2 Distributed tracing (e.g., Jaeger, Zipkin)"
                },
                {
                  "name": "4.2.3 Log aggregation and analysis"
                }
              ]
            },
            {
              "name": "4.3 Alerting and Incident Management",
              "children": [
                {
                  "name": "4.3.1 Defining metrics and alerts"
                },
                {
                  "name": "4.3.2 Setting up alerting systems"
                },
                {
                  "name": "4.3.3 Incident response and post-mortem analysis"
                },
                {
                  "name": "4.3.4 Project: Setup monitoring and alerting for a deployed application."
                }
              ]
            }
          ]
        },
        {
          "name": "5. CI/CD and DevOps Practices",
          "children": [
            {
              "name": "5.1 CI/CD Pipelines",
              "children": [
                {
                  "name": "5.1.1 Continuous Integration (CI) tools (Jenkins, GitLab CI, GitHub Actions)"
                },
                {
                  "name": "5.1.2 Continuous Delivery/Deployment (CD) principles"
                },
                {
                  "name": "5.1.3 Implementing CI/CD pipelines for applications and infrastructure"
                }
              ]
            },
            {
              "name": "5.2 DevOps Principles and Practices",
              "children": [
                {
                  "name": "5.2.1 Agile methodologies"
                },
                {
                  "name": "5.2.2 Collaboration and communication"
                },
                {
                  "name": "5.2.3 Automation and Infrastructure as Code"
                }
              ]
            },
            {
              "name": "5.3 Advanced CI/CD and DevOps",
              "children": [
                {
                  "name": "5.3.1 GitOps"
                },
                {
                  "name": "5.3.2 Canary deployments"
                },
                {
                  "name": "5.3.3 Blue/Green deployments"
                },
                {
                  "name": "5.3.4 Project: Implement a complete CI/CD pipeline for a chosen application."
                }
              ]
            }
          ]
        }
      ]
    }
  }
]